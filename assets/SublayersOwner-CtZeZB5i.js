const __vite__fileDeps=["assets/index-DSIPxOWi.js","assets/index-B_7YxLDX.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{e,y as t,et as r,az as i,g6 as a,iO as s,I as l,a as o,kZ as n,k_ as u,b3 as y,be as p,bF as d,bZ as c,eg as f,bJ as b,eq as v,s as g,b as I,a$ as w,k$ as E,fe as L,l0 as x,m as O,iH as T,l1 as F,n as P,l2 as D,kX as _,V as A,es as j,i$ as q,iJ as C,a2 as R,_ as M,bn as V,kP as N,l3 as k,cJ as Q,l4 as U,fQ as B,fP as J,l5 as $,gw as K,iL as G,bj as Z,iP as ee,l6 as te,iQ as re,iR as ie,ia as ae,fY as se,gH as le,jb as oe,by as ne,i1 as ue,R as ye,g as pe,i as de,gn as ce}from"./index-DSIPxOWi.js";import{x as he}from"./QueryTask-D61WShEy.js";import{o as fe}from"./sublayerUtils-DIUcTD2L.js";const f$1=v=>{let g=class extends v{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,t){const r=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!r)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,a="tile"!==i&&!!t.supportsDynamicLayers,s=r.includes("query"),l=r.includes("map"),o=!!t.exportTilesAllowed,u=r.includes("tilemap"),y=r.includes("data"),p="tile"!==i&&(!t.tileInfo||a),d="tile"!==i&&(!t.tileInfo||a),c="tile"!==i,f=t.cimVersion&&n.parse(t.cimVersion),b=(null==f?void 0:f.since(1,4))??!1,v=(null==f?void 0:f.since(2,0))??!1;return{operations:{supportsExportMap:l,supportsExportTiles:o,supportsIdentify:s,supportsQuery:y,supportsTileMap:u},exportMap:l?{supportsArcadeExpressionForLabeling:b,supportsSublayersChanges:c,supportsDynamicLayers:a,supportsSublayerVisibility:p,supportsSublayerDefinitionExpression:d,supportsCIMSymbols:v}:null,exportTiles:o?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchRelatedService(e){const t=this.portalItem;if(!t||!u(t))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const r=await this._relatedFeatureServicePromise;return y(e),r?{itemId:r.id,url:r.url}:null}async fetchSublayerInfo(e,t){var r;const{source:i}=e;if((null==this?void 0:this.portalItem)&&"tile"===this.type&&"map-layer"===(null==i?void 0:i.type)&&u(this.portalItem)&&e.originIdOf("url")<p.SERVICE){const r=await this.fetchRelatedService(t);r&&(e.url=d(r.url,i.mapLayerId.toString()),e.layerItemId=r.itemId)}const{url:a}=e;let s;if("data-layer"===i.type)s=(await c(a,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...t})).data;else if(a&&e.originIdOf("url")>p.SERVICE)try{const e=await this._fetchAllLayersAndTablesFromService(a),t=(null==(r=f(a))?void 0:r.sublayer)??i.mapLayerId;s=e.get(t)}catch{}else{let r=e.id;"map-layer"===(null==i?void 0:i.type)&&(r=i.mapLayerId);try{s=(await this.fetchAllLayersAndTables(t)).get(r)}catch{}}return s}async fetchAllLayersAndTables(e){var t;return this._fetchAllLayersAndTablesFromService(null==(t=this.parsedUrl)?void 0:t.path,e)}async _fetchAllLayersAndTablesFromService(e,t){await this.load(t),this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const r=f(e),i=b(this._allLayersAndTablesMap,null==r?void 0:r.url.path,(()=>c(d(null==r?void 0:r.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const t=new Map,{layers:r,tables:i}=e.data,a=[...r??[],...i??[]];for(const s of a)t.set(s.id,s);return{result:t}}),(e=>({error:e}))))),a=await i;if(y(t),"result"in a)return a.result;throw a.error}};return e([t({readOnly:!0})],g.prototype,"capabilities",void 0),e([r("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],g.prototype,"readCapabilities",null),e([t({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0),e([t({type:i})],g.prototype,"fullExtent",void 0),e([t(a)],g.prototype,"id",void 0),e([t({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],g.prototype,"legendEnabled",void 0),e([t(s)],g.prototype,"popupEnabled",void 0),e([t({type:l})],g.prototype,"spatialReference",void 0),e([t({readOnly:!0})],g.prototype,"version",void 0),e([r("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],g.prototype,"readVersion",null),g=e([o("esri.layers.mixins.ArcGISMapService")],g),g};var be;function H(e){return"esriSMS"===(null==e?void 0:e.type)}function z(e,t,r){var i;const a=this.originIdOf(t)>=ne(r.origin);return{ignoreOrigin:!0,allowNull:a,enabled:!!r&&"map-image"===(null==(i=r.layer)?void 0:i.type)&&(r.writeSublayerStructure||a)}}function W(e,t,r){var i;return{enabled:!!r&&"tile"===(null==(i=r.layer)?void 0:i.type)&&(r.origin&&this.originIdOf(t)>=ne(r.origin)||this._isOverridden(t))}}function X(e,t,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function Y(e,t,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||this.originIdOf(t)>=ne(r.origin))}}let me=0;const ve=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);let ge=be=class extends(v(g(ue))){constructor(e){super(e),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:t,url:r}=this;if(!t&&!r)throw new I("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await c(r,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:w(r)}))})()),this}readCapabilities(e,t){t=t.layerDefinition||t;const{operations:{supportsQuery:r,supportsQueryAttachments:i},query:{supportsFormatPBF:a,supportsOrderBy:s,supportsPagination:l},data:{supportsAttachment:o},queryRelated:n}=E(t,this.url);return{exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:r,supportsQueryAttachments:i},data:{supportsAttachment:o},query:{supportsFormatPBF:a,supportsOrderBy:s,supportsPagination:l},queryRelated:n}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new L(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields)for(const r of t.fields)if("esriFieldTypeGlobalID"===r.type)return r.name}get id(){return this._get("id")??me++}set id(e){var t,r,i;this._get("id")!==e&&(!1!==(null==(i=null==(r=null==(t=this.layer)?void 0:t.capabilities)?void 0:r.exportMap)?void 0:i.supportsDynamicLayers)?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return"Table"===t.type}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){var t;this._set("layer",e),null==(t=this.sublayers)||t.forEach((t=>t.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){var r;return t.minScale||(null==(r=t.layerDefinition)?void 0:r.minScale)||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){var r;return t.maxScale||(null==(r=t.layerDefinition)?void 0:r.maxScale)||0}readObjectIdFieldFromService(e,t){var r;if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;const i=null==(r=t.fields)?void 0:r.find((e=>"esriFieldTypeOID"===e.type));return null==i?void 0:i.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){var r;const{layerDefinition:i}=t;return 1-.01*((null==i?void 0:i.transparency)??(null==(r=null==i?void 0:i.drawingInfo)?void 0:r.transparency)??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=x(this.parent.id):t.parentLayerId=-1}get queryTask(){var e;if(!this.layer)return null;const{capabilities:t,fieldsIndex:r,layer:i,url:a}=this,{spatialReference:s}=i,l="gdbVersion"in i?i.gdbVersion:void 0,o=O("featurelayer-pbf")&&(null==t?void 0:t.query.supportsFormatPBF);return new he({fieldsIndex:r,gdbVersion:l,pbfSupported:o,queryAttachmentsSupported:(null==(e=null==t?void 0:t.operations)?void 0:e.supportsQueryAttachments)??!1,sourceSpatialReference:s,url:a})}set renderer(e){if(T(e,this.fieldsIndex),e)for(const t of e.getSymbols())if(F(t)){P.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new D({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return _(A.ofType(be),e)}writeSublayers(e,t,r){var i;(null==(i=this.sublayers)?void 0:i.length)&&(t[r]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTitle(e,t){var r;return(null==(r=t.layerDefinition)?void 0:r.name)??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const e=t.fields.find((e=>e.name.toLowerCase()===r));e&&(r=e.name)}return r}get url(){var e;const t=(null==(e=this.layer)?void 0:e.parsedUrl)??this._lastParsedUrl,r=this.source;if(!t)return null;if(this._lastParsedUrl=t,"map-layer"===(null==r?void 0:r.type))return`${t.path}/${r.mapLayerId}`;const i={layer:JSON.stringify({source:this.source})};return`${t.path}/dynamicLayer?${j(i)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=q(this),t=new be;return q(t).store=e.clone(ve),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return C(this,e)}createQuery(){return new R({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var e;if(this.hasOwnProperty("sublayers"))return null;const t=(await M((async()=>{const{default:e}=await import("./index-DSIPxOWi.js").then((e=>e.yI));return{default:e}}),__vite__mapDeps([0,1]))).default,{layer:r,url:i}=this;let a;if(i&&this.originIdOf("url")>p.SERVICE)a=new t({url:i});else{if(!(null==r?void 0:r.parsedUrl))throw new I("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const e=r.parsedUrl;a=new t({url:e.path}),e&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source)}}return null!=(null==r?void 0:r.refreshInterval)&&(a.refreshInterval=r.refreshInterval),this.definitionExpression&&(a.definitionExpression=this.definitionExpression),this.floorInfo&&(a.floorInfo=V(this.floorInfo)),this.originIdOf("labelingInfo")>p.SERVICE&&(a.labelingInfo=V(this.labelingInfo)),this.originIdOf("labelsVisible")>p.DEFAULTS&&(a.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>p.DEFAULTS&&(a.legendEnabled=this.legendEnabled),this.originIdOf("visible")>p.DEFAULTS&&(a.visible=this.visible),this.originIdOf("minScale")>p.DEFAULTS&&(a.minScale=this.minScale),this.originIdOf("maxScale")>p.DEFAULTS&&(a.maxScale=this.maxScale),this.originIdOf("opacity")>p.DEFAULTS&&(a.opacity=this.opacity),this.originIdOf("popupTemplate")>p.DEFAULTS&&(a.popupTemplate=V(this.popupTemplate)),this.originIdOf("renderer")>p.SERVICE&&(a.renderer=V(this.renderer)),"data-layer"===(null==(e=this.source)?void 0:e.type)&&(a.dynamicDataSource=this.source.clone()),this.originIdOf("title")>p.DEFAULTS&&(a.title=this.title),"map-image"===(null==r?void 0:r.type)&&r.originIdOf("customParameters")>p.DEFAULTS&&(a.customParameters=r.customParameters),"tile"===(null==r?void 0:r.type)&&r.originIdOf("customParameters")>p.DEFAULTS&&(a.customParameters=r.customParameters),a}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return N(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=null==t?void 0:t.feature,i=this.getFeatureType(r);if(i){const t=i.domains&&i.domains[e];if(t&&"inherited"!==t.type)return t}return this._getLayerDomain(e)}async queryAttachments(e,t){var r,i;await this.load(),e=k.from(e);const a=this.capabilities;if(!(null==(r=null==a?void 0:a.data)?void 0:r.supportsAttachment))throw new I("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:s,objectIds:l,globalIds:o,num:n,size:u,start:y,where:p}=e;if(!(null==(i=null==a?void 0:a.operations)?void 0:i.supportsQueryAttachments)&&((null==s?void 0:s.length)>0||(null==o?void 0:o.length)>0||(null==u?void 0:u.length)>0||n||y||p))throw new I("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!((null==l?void 0:l.length)||(null==o?void 0:o.length)||p))throw new I("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,t)}async queryFeatureCount(e=this.createQuery(),t){var r,i;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new I("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new I("queryFeatureCount:not-supported","this layer has no url.");const a=null==(r=this.layer)?void 0:r.apiKey;return await this.queryTask.executeForCount(e,{...t,query:{...null==(i=this.layer)?void 0:i.customParameters,token:a}})}async queryFeatures(e=this.createQuery(),t){var r,i;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new I("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new I("queryFeatures:not-supported","this layer has no url.");const a=await this.queryTask.execute(e,{...t,query:{...null==(r=this.layer)?void 0:r.customParameters,token:null==(i=this.layer)?void 0:i.apiKey}});if(null==a?void 0:a.features)for(const s of a.features)s.sourceLayer=this;return a}async queryObjectIds(e=this.createQuery(),t){var r,i;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new I("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new I("queryObjectIds:not-supported","this layer has no url.");const a=null==(r=this.layer)?void 0:r.apiKey;return await this.queryTask.executeForIds(e,{...t,query:{...null==(i=this.layer)?void 0:i.customParameters,token:a}})}async queryRelatedFeatures(e,t){var r,i;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new I("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new I("queryRelatedFeatures:not-supported","this layer has no url.");const a=null==(r=this.layer)?void 0:r.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...t,query:{...null==(i=this.layer)?void 0:i.customParameters,token:a}})}async queryRelatedFeaturesCount(e,t){var r,i;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new I("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new I("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new I("queryRelatedFeaturesCount:not-supported","this layer has no url.");const a=null==(r=this.layer)?void 0:r.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...t,query:{...null==(i=this.layer)?void 0:i.customParameters,token:a}})}toExportImageJSON(e){var t,r;const i={id:this.id,source:(null==(t=this.source)?void 0:t.toJSON())||{mapLayerId:this.id,type:"mapLayer"}},a=Q(e,this.definitionExpression);null!=a&&(i.definitionExpression=a);const s=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,t)=>(e[t]=this.originIdOf(t),e)),{});if(Object.keys(s).some((e=>s[e]>p.SERVICE))){const e=i.drawingInfo={};if(s.renderer>p.SERVICE&&(e.renderer=this.renderer?this.renderer.toJSON():null),s.labelsVisible>p.SERVICE&&(e.showLabels=this.labelsVisible),this.labelsVisible&&s.labelingInfo>p.SERVICE)if(this.labelingInfo){!this.loaded&&(null==(r=this.labelingInfo)?void 0:r.some((e=>!e.labelPlacement)))&&P.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let t=this.labelingInfo;null!=this.geometryType&&(t=U(this.labelingInfo,B.toJSON(this.geometryType))),e.showLabels=!0,e.labelingInfo=t.filter((e=>e.labelPlacement)).map((e=>e.toJSON({origin:"service",layer:this.layer})))}else e.showLabels=!1;s.opacity>p.SERVICE&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return i}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{var t;e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||((null==(t=e.outline)?void 0:t.color)?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of r)H(e.symbol)&&t(e.symbol);"symbol"in e&&H(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&H(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){var r,i,a,s;const l=this.layer,o=this._get(e);let n,u;switch(e){case"definitionExpression":case"floorInfo":n="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":n="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":n="supportsDynamicLayers",u="supportsModification"}const y=q(this).getDefaultOrigin();if("service"!==y){if(n&&!1===(null==(a=null==(i=null==(r=this.layer)?void 0:r.capabilities)?void 0:i.exportMap)?void 0:a[n]))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${n}'`);if(u&&!1===(null==(s=this.capabilities)?void 0:s.exportMap[u]))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${u}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,t),"service"!==y&&o!==t&&l&&l.emit&&l.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this.removeAllHandles()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{var t,r,i;((null==(i=null==(r=null==(t=this.layer)?void 0:t.capabilities)?void 0:r.exportMap)?void 0:i.supportsSublayersChanges)??1)||(P.getLogger(this).error(new I("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;P.getLogger(i).error(new I("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${null==r?void 0:r.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){var t;return(null==(t=this.fieldsIndex.get(e))?void 0:t.domain)??null}};ge.test={isMapImageLayerOverridePolicy:e=>e===X||e===z,isTileImageLayerOverridePolicy:e=>e===W},e([t({readOnly:!0})],ge.prototype,"capabilities",void 0),e([r("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],ge.prototype,"readCapabilities",null),e([t()],ge.prototype,"defaultPopupTemplate",null),e([t({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:z}}})],ge.prototype,"definitionExpression",null),e([t({readOnly:!0})],ge.prototype,"effectiveScaleRange",null),e([r("service","maxScaleRange",["minScale","maxScale"])],ge.prototype,"readMaxScaleRange",null),e([t({type:[J],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],ge.prototype,"fields",void 0),e([t({readOnly:!0})],ge.prototype,"fieldsIndex",null),e([t({type:$,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:z},origins:{"web-scene":{read:!1,write:!1}}}})],ge.prototype,"floorInfo",null),e([t({type:i,json:{read:{source:"layerDefinition.extent"}}})],ge.prototype,"fullExtent",void 0),e([t({type:B.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:B.read}}}}})],ge.prototype,"geometryType",void 0),e([t({type:String})],ge.prototype,"globalIdField",void 0),e([r("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],ge.prototype,"readGlobalIdFieldFromService",null),e([t({type:K,json:{write:{ignoreOrigin:!0}}})],ge.prototype,"id",null),e([t({readOnly:!0})],ge.prototype,"isTable",void 0),e([r("service","isTable",["type"])],ge.prototype,"readIsTable",null),e([t({value:null,type:[G],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:X}}})],ge.prototype,"labelingInfo",null),e([Z("labelingInfo")],ge.prototype,"writeLabelingInfo",null),e([t({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:X}}})],ge.prototype,"labelsVisible",null),e([t({value:null})],ge.prototype,"layer",null),e([t({type:String,json:{write:{overridePolicy:W}}})],ge.prototype,"layerItemId",void 0),e([t({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:Y}}})],ge.prototype,"legendEnabled",void 0),e([t({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],ge.prototype,"listMode",null),e([t({type:Number,value:0,json:{write:{overridePolicy:X}}})],ge.prototype,"minScale",null),e([r("minScale",["minScale","layerDefinition.minScale"])],ge.prototype,"readMinScale",null),e([t({type:Number,value:0,json:{write:{overridePolicy:X}}})],ge.prototype,"maxScale",null),e([r("maxScale",["maxScale","layerDefinition.maxScale"])],ge.prototype,"readMaxScale",null),e([t()],ge.prototype,"objectIdField",void 0),e([r("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],ge.prototype,"readObjectIdFieldFromService",null),e([t({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:X}}})],ge.prototype,"opacity",null),e([r("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],ge.prototype,"readOpacity",null),e([Z("opacity")],ge.prototype,"writeOpacity",null),e([t({json:{type:K,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:X}}})],ge.prototype,"parent",void 0),e([Z("parent")],ge.prototype,"writeParent",null),e([t({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Y,writer(e,t,r){t[r]=!e}}}})],ge.prototype,"popupEnabled",void 0),e([t({type:ee,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Y}}})],ge.prototype,"popupTemplate",void 0),e([t({readOnly:!0})],ge.prototype,"queryTask",null),e([t({type:[te],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],ge.prototype,"relationships",void 0),e([t({types:re,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:X},origins:{"web-scene":{types:ie,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:X}}}}})],ge.prototype,"renderer",null),e([t({types:{key:"type",base:null,typeMap:{"data-layer":ae,"map-layer":D}},cast(e){if(e){if("mapLayerId"in e)return se(D,e);if("dataSource"in e)return se(ae,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:X}}})],ge.prototype,"source",null),e([t()],ge.prototype,"sourceJSON",void 0),e([t({type:l,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],ge.prototype,"spatialReference",void 0),e([t({value:null,json:{type:[K],write:{target:"subLayerIds",allowNull:!0,overridePolicy:X}}})],ge.prototype,"sublayers",null),e([le("sublayers")],ge.prototype,"castSublayers",null),e([Z("sublayers")],ge.prototype,"writeSublayers",null),e([t({type:String,json:{name:"name",write:{overridePolicy:Y}}})],ge.prototype,"title",void 0),e([r("service","title",["name","layerDefinition.name"])],ge.prototype,"readTitle",null),e([t({type:String})],ge.prototype,"typeIdField",void 0),e([t({json:{read:!1},readOnly:!0,value:"sublayer"})],ge.prototype,"type",void 0),e([r("typeIdField",["layerDefinition.typeIdField"])],ge.prototype,"readTypeIdField",null),e([t({type:[oe],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],ge.prototype,"types",void 0),e([t({type:String,json:{name:"layerUrl",write:{overridePolicy:W}}})],ge.prototype,"url",null),e([t({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:X}}})],ge.prototype,"visible",null),e([Z("visible")],ge.prototype,"writeVisible",null),ge=be=e([o("esri.layers.support.Sublayer")],ge);const Se=ge;const Ie=A.ofType(Se);function S(e,t){e&&e.forEach((e=>{t(e),e.sublayers&&e.sublayers.length&&S(e.sublayers,t)}))}const m=r=>{let i=class extends r{constructor(...e){super(...e),this.allSublayers=new ye({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[p.SERVICE]:{},[p.PORTAL_ITEM]:{},[p.WEB_SCENE]:{},[p.WEB_MAP]:{}},this.subtables=null,this.addHandles([pe((()=>this.sublayers),((e,t)=>this._handleSublayersChange(e,t)),de),pe((()=>this.subtables),((e,t)=>this._handleSublayersChange(e,t)),de)])}destroy(){this.allSublayers.destroy()}readSublayers(e,t){if(!t||!e)return;const{sublayersSourceJSON:r}=this,i=ne(t.origin);if(i<p.SERVICE)return;if(r[i]={context:t,visibleLayers:e.visibleLayers||r[i].visibleLayers,layers:e.layers||r[i].layers},i>p.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:a,origin:s}=this.createSublayersForOrigin("web-document"),l=q(this);l.setDefaultOrigin(s),this._set("sublayers",new Ie(a)),l.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const t=ne("web-document"===e?"web-map":e);let r=p.SERVICE,i=this.sublayersSourceJSON[p.SERVICE].layers,a=this.sublayersSourceJSON[p.SERVICE].context,s=null;const l=[p.PORTAL_ITEM,p.WEB_SCENE,p.WEB_MAP].filter((e=>e<=t));for(const p of l){const e=this.sublayersSourceJSON[p];fe(e.layers)&&(r=p,i=e.layers,a=e.context,e.visibleLayers&&(s={visibleLayers:e.visibleLayers,context:e.context}))}const o=[p.PORTAL_ITEM,p.WEB_SCENE,p.WEB_MAP].filter((e=>e>r&&e<=t));let n=null;for(const p of o){const{layers:e,visibleLayers:t,context:r}=this.sublayersSourceJSON[p];e&&(n={layers:e,context:r}),t&&(s={visibleLayers:t,context:r})}const u=function h(e,t){const r=[],i={};return e?(e.forEach((e=>{const a=new Se;if(a.read(e,t),i[a.id]=a,null!=e.parentLayerId&&-1!==e.parentLayerId){const t=i[e.parentLayerId];t.sublayers||(t.sublayers=[]),t.sublayers.unshift(a)}else r.unshift(a)})),r):r}(i,a),y=new Map,d=new Set;if(n)for(const p of n.layers)y.set(p.id,p);if(null==s?void 0:s.visibleLayers)for(const p of s.visibleLayers)d.add(p);return S(u,(e=>{n&&e.read(y.get(e.id),n.context),s&&e.read({defaultVisibility:d.has(e.id)},s.context)})),{origin:ce(r),sublayers:new Ie({items:u})}}read(e,t){super.read(e,t),this.readSublayers(e,t)}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",(e=>{P.getLogger("esri.layers.TileLayer").error(new I("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return e([t({readOnly:!0})],i.prototype,"allSublayers",void 0),e([t({readOnly:!0,type:A.ofType(Se)})],i.prototype,"serviceSublayers",void 0),e([t({value:null,type:Ie,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),e([t({readOnly:!0})],i.prototype,"sublayersSourceJSON",void 0),e([t({type:Ie,json:{read:{source:"tables"}}})],i.prototype,"subtables",void 0),i=e([o("esri.layers.mixins.SublayersOwner")],i),i};export{f$1 as f,m,Se as t};
