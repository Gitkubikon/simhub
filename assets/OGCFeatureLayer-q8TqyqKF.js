import{e,y as t,a as r,i1 as s,a_ as o,f3 as i,I as n,ja as a,b as p,gd as l,gc as u,iF as d,iG as c,g2 as y,iE as h,gp as f,g4 as m,eo as g,ep as v,g3 as S,eq as C,iH as w,iJ as R,a2 as b,iI as x,gm as I,fP as F,az as j,fQ as O,iL as D,iM as T,iK as P,g7 as E,iO as _,iP as q,iQ as Q,iR as G,iS as A,jb as M,ev as B,iU as L,Z as N}from"./index-DSIPxOWi.js";import{R as U,x as z,C as H,P as J,O as Z,N as K,q as V,v as W,k}from"./ogcFeatureUtils-BnWXFknr.js";import"./geojson-CFL0cZN1.js";import"./date-Do_V47iR.js";import"./clientSideDefaults-Cn_svm8L.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./sourceUtils-BFIlJ45V.js";let $=class extends s{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getSource(){const{featureDefinition:{collection:e,layerDefinition:t,spatialReference:r,supportedCrs:s},layer:{apiKey:o,customParameters:i,effectiveMaxRecordCount:n}}=this;return{type:"ogc-source",collection:e,layerDefinition:t,maxRecordCount:n,queryParameters:{apiKey:o,customParameters:i},spatialReference:r,supportedCrs:s}}queryExtent(e,t={}){return null}queryFeatureCount(e,t={}){return null}queryFeatures(e,t={}){return this.queryFeaturesJSON(e,t).then((e=>o.fromJSON(e)))}queryFeaturesJSON(e,t={}){const r=this.getSource();return this.load(t).then((()=>U(r,e,t)))}queryObjectIds(e,t={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator&&!this.featureDefinition.supportedCrs[e.wkid])}_conformsToType(e,t){const r=new RegExp(`^${i(t)}$`,"i");return e.conformsTo.some((e=>r.test(e)))??!1}_getCapabilities(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:t,maxRecordCountFactor:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}_getMaxRecordCount(e){var t,r,s,o,i;const n=null==(t=null==e?void 0:e.components)?void 0:t.parameters;return(null==(s=null==(r=null==n?void 0:n.limit)?void 0:r.schema)?void 0:s.maximum)??(null==(i=null==(o=null==n?void 0:n.limitFeatures)?void 0:o.schema)?void 0:i.maximum)}_getStorageSpatialReference(e){const t=e.storageCrs??z,r=H(t);return null==r?n.WGS84:new n({wkid:r})}_getSupportedSpatialReferences(e,t){const r="#/crs",s=e.crs??[z],o=s.includes(r)?s.filter((e=>e!==r)).concat(t.crs??[]):s,i=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return o.filter((e=>!i.test(e)))}async _loadOGCServices(e,t){const r=null!=t?t.signal:null,{apiKey:s,collectionId:o,customParameters:n,fields:l,geometryType:u,hasZ:d,objectIdField:c,timeInfo:y,url:h}=e,f={fields:null==l?void 0:l.map((e=>e.toJSON())),geometryType:a.toJSON(u),hasZ:d??!1,objectIdField:c,timeInfo:null==y?void 0:y.toJSON()},m={apiKey:s,customParameters:n,signal:r},g=await J(h,m),[v,S]=await Promise.all([Z(g,m),K(g,m)]);if(!this._conformsToType(v,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new p("ogc-feature-layer:no-geojson-support","Server does not support geojson");const C=S.collections.find((({id:e})=>e===o));if(!C)throw new p("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const w=this._conformsToType(v,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await V(g,m):null,R=await W(C,f,m),b=this._getMaxRecordCount(w),x=this._getCapabilities(R.hasZ,b),I=this._getStorageSpatialReference(C).toJSON(),F=this._getSupportedSpatialReferences(C,S),j=new RegExp(`^${i(k)}`,"i"),O={};for(const i of F){const e=H(i);null!=e&&(O[e]||(O[e]=i.replace(j,"")))}this.featureDefinition={capabilities:x,collection:C,layerDefinition:R,spatialReference:I,supportedCrs:O}}};e([t()],$.prototype,"featureDefinition",void 0),e([t({constructOnly:!0})],$.prototype,"layer",void 0),e([t()],$.prototype,"type",void 0),$=e([r("esri.layers.graphics.sources.OGCFeatureSource")],$);const X=L();let Y=class extends(l(u(d(c(y(h(f(m(g(v(S(C(N))))))))))))){constructor(e){super(e),this.capabilities=null,this.collectionId=null,this.copyright=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.maxRecordCount=null,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new $({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){var e;null==(e=this.source)||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then((()=>this._fetchService(e)))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get effectiveMaxRecordCount(){var e;return this.maxRecordCount??(null==(e=this.capabilities)?void 0:e.query.maxRecordCount)??5e3}get isTable(){return this.loaded&&null==this.geometryType}set renderer(e){w(e,this.fieldsIndex),this._set("renderer",e)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return R(this,e)}createQuery(){return new b}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r;let s,o=!1;const i=null==(r=null==t?void 0:t.feature)?void 0:r.attributes,n=this.typeIdField&&(null==i?void 0:i[this.typeIdField]);return null!=n&&this.types&&(o=this.types.some((t=>{var r;return t.id==n&&(s=null==(r=t.domains)?void 0:r[e],"inherited"===(null==s?void 0:s.type)&&(s=this._getLayerDomain(e)),!0)}))),o||s||(s=this._getLayerDomain(e)),s}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(b.from(e)||this.createQuery(),t))).then((e=>{var t;return null==(t=null==e?void 0:e.features)||t.forEach((e=>{e.layer=e.sourceLayer=this})),e}))}serviceSupportsSpatialReference(e){var t;return(null==(t=this.source)?void 0:t.serviceSupportsSpatialReference(e))??!1}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),w(this.renderer,this.fieldsIndex),x(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const t of this.fields)if(t.name===e&&t.domain)return t.domain;return null}};e([t({readOnly:!0,json:{origins:{service:{read:!0}}}})],Y.prototype,"capabilities",void 0),e([t({type:String,json:{write:!0}})],Y.prototype,"collectionId",void 0),e([t({type:String})],Y.prototype,"copyright",void 0),e([t({readOnly:!0})],Y.prototype,"defaultPopupTemplate",null),e([t({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],Y.prototype,"description",void 0),e([t({type:String})],Y.prototype,"displayField",void 0),e([t({type:Number})],Y.prototype,"effectiveMaxRecordCount",null),e([t(I)],Y.prototype,"elevationInfo",void 0),e([t({type:[F],json:{origins:{service:{name:"layerDefinition.fields"}}}})],Y.prototype,"fields",void 0),e([t(X.fieldsIndex)],Y.prototype,"fieldsIndex",void 0),e([t({readOnly:!0,type:j,json:{origins:{service:{name:"layerDefinition.extent"}}}})],Y.prototype,"fullExtent",void 0),e([t({type:O.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:O.read}}}}})],Y.prototype,"geometryType",void 0),e([t({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],Y.prototype,"hasZ",void 0),e([t({type:Boolean,readOnly:!0})],Y.prototype,"isTable",null),e([t({type:[D],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:T},write:!0}}}})],Y.prototype,"labelingInfo",void 0),e([t(P)],Y.prototype,"labelsVisible",void 0),e([t(E)],Y.prototype,"legendEnabled",void 0),e([t({type:Number})],Y.prototype,"maxRecordCount",void 0),e([t({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],Y.prototype,"objectIdField",void 0),e([t({type:["OGCFeatureLayer"]})],Y.prototype,"operationalLayerType",void 0),e([t(_)],Y.prototype,"popupEnabled",void 0),e([t({type:q,json:{name:"popupInfo",write:!0}})],Y.prototype,"popupTemplate",void 0),e([t({types:Q,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:G,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],Y.prototype,"renderer",null),e([t(A)],Y.prototype,"screenSizePerspectiveEnabled",void 0),e([t({readOnly:!0})],Y.prototype,"source",void 0),e([t({readOnly:!0,type:n,json:{origins:{service:{read:!0}}}})],Y.prototype,"spatialReference",void 0),e([t({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],Y.prototype,"title",void 0),e([t({readOnly:!0,json:{read:!1}})],Y.prototype,"type",void 0),e([t({type:String,readOnly:!0})],Y.prototype,"typeIdField",void 0),e([t({type:[M]})],Y.prototype,"types",void 0),e([t(B)],Y.prototype,"url",void 0),Y=e([r("esri.layers.OGCFeatureLayer")],Y);const ee=Y;export{ee as default};
