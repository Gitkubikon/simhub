import{ae as e,dg as t,V as i,n as r,e as s,y as l,a as n}from"./index-DSIPxOWi.js";import{l as o}from"./LayerView3D-ApO6iJqK.js";import{p as a}from"./TiledLayerView3D-BIihePS5.js";import{i as h}from"./fetchTile-D6sSdSlv.js";import{y as d}from"./LayerView-DMoB2q_T.js";import{i as f}from"./RefreshableLayerView-MYyyoaX8.js";let u=class extends(f(a(o(d)))){constructor(){super(...arguments),this.type="wmts-3d"}initialize(){this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)));const t=e((()=>{var e,t;return null==(t=null==(e=this.view)?void 0:e.basemapTerrain)?void 0:t.tilingSchemeLocked})).then((()=>{const e=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoError(e.tileInfo,e.fullExtent)));null!=e&&(null!==e.id&&this.layer.activeLayer.tileMatrixSetId!==e.id&&(this.layer.activeLayer.tileMatrixSetId=e.id),e.tileInfo&&(this.tileInfo=e.tileInfo),this.layer.fullExtent=e.fullExtent)}));this.addResolvingPromise(t),this.when((()=>this._postInitialize()))}refresh(){this.emit("data-changed")}canResume(){if(!super.canResume())return!1;const e=this.layer.activeLayer.tileMatrixSet;return null!=e&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async fetchTile(e,t){return h(this,e,t)}async doRefresh(){this.suspended||this.emit("data-changed")}_postInitialize(){this._updatingHandles.add((()=>{var e,t;return null==(t=null==(e=this.layer)?void 0:e.activeLayer)?void 0:t.styleId}),(()=>this.refresh())),this._updatingHandles.add((()=>{var e;return null==(e=this.layer)?void 0:e.activeLayer}),(e=>{const t=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoError(e.tileInfo,e.fullExtent)),!0);t&&null!=t.id&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()}))}_getCompatibleTileInfoMatrixSet(e,s=!1){const l=t(this.layer);if(null!=l){if(i.isCollection(l)){return l.find((t=>{const i=e(t);return null!=i&&(s?r.getLogger(this).error("The selected tile matrix set is not compatible with the view",i):this.addResolvingPromise(Promise.reject(i))),null==i}))}const t=e(l);return null!=t&&(s?r.getLogger(this).error("The selected tile matrix set is not compatible with the view",t):this.addResolvingPromise(Promise.reject(t))),l}return null}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};s([l()],u.prototype,"layer",void 0),s([l()],u.prototype,"suspended",void 0),s([l()],u.prototype,"tileInfo",void 0),u=s([n("esri.views.3d.layers.WMTSLayerView3D")],u);const c=u;export{c as default};
