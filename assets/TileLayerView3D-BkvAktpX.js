import{J as e,b as t,e as i,y as r,a as l}from"./index-DSIPxOWi.js";import{l as s}from"./LayerView3D-ApO6iJqK.js";import{p as o}from"./TiledLayerView3D-BIihePS5.js";import{i as a}from"./fetchTile-D6sSdSlv.js";import{y as n}from"./LayerView-DMoB2q_T.js";import{i as p}from"./RefreshableLayerView-MYyyoaX8.js";import{U as h,_ as u}from"./MapServiceLayerViewHelper-B9RVlFpw.js";import{r as m}from"./drapedUtils-DOQFzwPw.js";import"./floorFilterUtils-2NbRkqHK.js";import"./normalizeUtils-BrH-PrZy.js";import"./normalizeUtilsCommon-BU8xfl77.js";import"./sublayerUtils-DIUcTD2L.js";let f=class extends(p(o(s(n)))){constructor(){super(...arguments),this.type="tile-3d",this._popupHighlightHelper=null}get imageFormatIsOpaque(){return"jpg"===this.layer.tileInfo.format}get hasMixedImageFormats(){return"mixed"===this.layer.tileInfo.format}get tileInfo(){return this.layer.tileInfo}initialize(){var i,r;if("web-tile"===this.layer.type){const l=null==(i=this.layer.fullExtent)?void 0:i.spatialReference,s=null==(r=this.layer.tileInfo)?void 0:r.spatialReference;if(null==l||null==s||!e(l,s)){const e="defaults"===this.layer.originOf("fullExtent")||null==this.layer.fullExtent?"SceneView requires fullExtent to be specified by the user on WebTileLayer":"SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";this.addResolvingPromise(Promise.reject(new t("layerview:incompatible-fullextent",e)))}}h(this,this.layer)&&(this._popupHighlightHelper=new u({createFetchPopupFeaturesQueryGeometry:(e,t)=>m(e,t,this.view),layerView:this,updatingHandles:this._updatingHandles})),this._addTilingSchemeMatchPromise()}destroy(){var e;null==(e=this._popupHighlightHelper)||e.destroy()}async fetchTile(e,t){return a(this,e,t)}async fetchPopupFeaturesAtLocation(e,t){var i;return(null==(i=this._popupHighlightHelper)?void 0:i.fetchPopupFeaturesAtLocation(e,t))??[]}async doRefresh(){this.suspended||this.emit("data-changed")}};i([r()],f.prototype,"imageFormatIsOpaque",null),i([r()],f.prototype,"hasMixedImageFormats",null),i([r()],f.prototype,"layer",void 0),i([r()],f.prototype,"tileInfo",null),f=i([l("esri.views.3d.layers.TileLayerView3D")],f);const y=f;export{y as default};
