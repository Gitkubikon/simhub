import{e,y as o,a as t,bk as r,c7 as s,c8 as l,oZ as n,bn as p,ak as a,gw as d,o_ as u,o$ as y}from"./index-DSIPxOWi.js";var h;let f=h=class extends r{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new h({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([o({type:String,json:{write:!0}})],f.prototype,"field",void 0),e([o({type:Number,nonNullable:!0,json:{write:!0}})],f.prototype,"minValue",void 0),e([o({type:Number,nonNullable:!0,json:{write:!0}})],f.prototype,"maxValue",void 0),f=h=e([t("esri.renderers.support.pointCloud.ColorModulation")],f);const m=f,b=new s({pointCloudFixedSizeAlgorithm:"fixed-size",pointCloudSplatAlgorithm:"splat"});let v=class i extends r{};e([o({type:b.apiValues,readOnly:!0,nonNullable:!0,json:{type:b.jsonValues,read:!1,write:b.write}})],v.prototype,"type",void 0),v=e([t("esri.renderers.support.pointCloud.PointSizeAlgorithm")],v);const T=v;var w;let V=w=class extends T{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new w({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([l({pointCloudFixedSizeAlgorithm:"fixed-size"})],V.prototype,"type",void 0),e([o({type:Number,nonNullable:!0,json:{write:!0}})],V.prototype,"size",void 0),e([o({type:Boolean,json:{write:!0}})],V.prototype,"useRealWorldSymbolSizes",void 0),V=w=e([t("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],V);const g=V;var j;let S=j=class extends T{constructor(){super(...arguments),this.type="splat",this.scaleFactor=1}clone(){return new j({scaleFactor:this.scaleFactor})}};e([l({pointCloudSplatAlgorithm:"splat"})],S.prototype,"type",void 0),e([o({type:Number,value:1,nonNullable:!0,json:{write:!0}})],S.prototype,"scaleFactor",void 0),S=j=e([t("esri.renderers.support.pointCloud.PointSizeSplatAlgorithm")],S);const C={key:"type",base:T,typeMap:{"fixed-size":g,splat:S}},x=n()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let z=class c extends r{constructor(e){super(e),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return null}cloneProperties(){return{pointSizeAlgorithm:p(this.pointSizeAlgorithm),colorModulation:p(this.colorModulation),pointsPerInch:p(this.pointsPerInch)}}};e([o({type:x.apiValues,readOnly:!0,nonNullable:!0,json:{type:x.jsonValues,read:!1,write:x.write}})],z.prototype,"type",void 0),e([o({types:C,json:{write:!0}})],z.prototype,"pointSizeAlgorithm",void 0),e([o({type:m,json:{write:!0}})],z.prototype,"colorModulation",void 0),e([o({json:{write:!0},nonNullable:!0,type:Number})],z.prototype,"pointsPerInch",void 0),z=e([t("esri.renderers.PointCloudRenderer")],z),(z||(z={})).fieldTransformTypeKebabDict=new s({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"});const R=z;var P;let k=P=class extends r{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new P({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:p(this.color)})}};e([o({type:String,json:{write:!0}})],k.prototype,"description",void 0),e([o({type:String,json:{write:!0}})],k.prototype,"label",void 0),e([o({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],k.prototype,"minValue",void 0),e([o({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],k.prototype,"maxValue",void 0),e([o({type:a,json:{type:[d],write:!0}})],k.prototype,"color",void 0),k=P=e([t("esri.renderers.support.pointCloud.ColorClassBreakInfo")],k);const I=k;var N;let O=N=class extends R{constructor(e){super(e),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new N({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:p(this.colorClassBreakInfos),legendOptions:p(this.legendOptions)})}};e([l({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],O.prototype,"type",void 0),e([o({json:{write:!0},type:String})],O.prototype,"field",void 0),e([o({type:u,json:{write:!0}})],O.prototype,"legendOptions",void 0),e([o({type:R.fieldTransformTypeKebabDict.apiValues,json:{type:R.fieldTransformTypeKebabDict.jsonValues,read:R.fieldTransformTypeKebabDict.read,write:R.fieldTransformTypeKebabDict.write}})],O.prototype,"fieldTransformType",void 0),e([o({type:[I],json:{write:!0}})],O.prototype,"colorClassBreakInfos",void 0),O=N=e([t("esri.renderers.PointCloudClassBreaksRenderer")],O);const D=O;var K;let B=K=class extends R{constructor(e){super(e),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new K({...this.cloneProperties(),field:p(this.field),fieldTransformType:p(this.fieldTransformType),stops:p(this.stops),legendOptions:p(this.legendOptions)})}};e([l({pointCloudStretchRenderer:"point-cloud-stretch"})],B.prototype,"type",void 0),e([o({json:{write:!0},type:String})],B.prototype,"field",void 0),e([o({type:u,json:{write:!0}})],B.prototype,"legendOptions",void 0),e([o({type:R.fieldTransformTypeKebabDict.apiValues,json:{type:R.fieldTransformTypeKebabDict.jsonValues,read:R.fieldTransformTypeKebabDict.read,write:R.fieldTransformTypeKebabDict.write}})],B.prototype,"fieldTransformType",void 0),e([o({type:[y],json:{write:!0}})],B.prototype,"stops",void 0),B=K=e([t("esri.renderers.PointCloudStretchRenderer")],B);const q=B;var A;let M=A=class extends r{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new A({description:this.description,label:this.label,values:p(this.values),color:p(this.color)})}};e([o({type:String,json:{write:!0}})],M.prototype,"description",void 0),e([o({type:String,json:{write:!0}})],M.prototype,"label",void 0),e([o({type:[String],json:{write:!0}})],M.prototype,"values",void 0),e([o({type:a,json:{type:[d],write:!0}})],M.prototype,"color",void 0),M=A=e([t("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],M);const F=M;var U;let W=U=class extends R{constructor(e){super(e),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new U({...this.cloneProperties(),field:p(this.field),fieldTransformType:p(this.fieldTransformType),colorUniqueValueInfos:p(this.colorUniqueValueInfos),legendOptions:p(this.legendOptions)})}};e([l({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],W.prototype,"type",void 0),e([o({json:{write:!0},type:String})],W.prototype,"field",void 0),e([o({type:R.fieldTransformTypeKebabDict.apiValues,json:{type:R.fieldTransformTypeKebabDict.jsonValues,read:R.fieldTransformTypeKebabDict.read,write:R.fieldTransformTypeKebabDict.write}})],W.prototype,"fieldTransformType",void 0),e([o({type:[F],json:{write:!0}})],W.prototype,"colorUniqueValueInfos",void 0),e([o({type:u,json:{write:!0}})],W.prototype,"legendOptions",void 0),W=U=e([t("esri.renderers.PointCloudUniqueValueRenderer")],W);const G=W;export{G as a,q as b,R as c,D as d};
