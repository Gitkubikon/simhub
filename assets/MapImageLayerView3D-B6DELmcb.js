import{e,y as t,a as r}from"./index-DSIPxOWi.js";import{N as s}from"./DynamicLayerView3D-C51-uYFg.js";import{y as o}from"./ExportImageParameters-Bjx0Q-yu.js";import{i as a}from"./timeSupport-CU-EQyfu.js";import{_ as p}from"./MapServiceLayerViewHelper-B9RVlFpw.js";import{r as l}from"./drapedUtils-DOQFzwPw.js";import"./LayerView3D-ApO6iJqK.js";import"./projectExtentUtils-KG39_WUt.js";import"./ImageMaterial.glsl-V3C9c4TG.js";import"./LayerView-DMoB2q_T.js";import"./RefreshableLayerView-MYyyoaX8.js";import"./floorFilterUtils-2NbRkqHK.js";import"./sublayerUtils-DIUcTD2L.js";import"./normalizeUtils-BrH-PrZy.js";import"./normalizeUtilsCommon-BU8xfl77.js";const i=s=>{let p=class extends s{initialize(){this.exportImageParameters=new o({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return(null==(e=this.view)?void 0:e.floors)??null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return a(this.layer,null==(e=this.view)?void 0:e.timeExtent,this._get("timeExtent"))}canResume(){var e;return!!super.canResume()&&!(null==(e=this.timeExtent)?void 0:e.isEmpty)}};return e([t()],p.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],p.prototype,"floors",null),e([t({readOnly:!0})],p.prototype,"exportImageVersion",null),e([t()],p.prototype,"layer",void 0),e([t()],p.prototype,"suspended",void 0),e([t({readOnly:!0})],p.prototype,"timeExtent",null),p=e([r("esri.views.layers.MapImageLayerView")],p),p};let m=class extends(i(s)){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this._updatingHandles.add((()=>this.exportImageVersion),(()=>this._updatingHandles.addPromise(this.refreshDebounced()))),this._popupHighlightHelper=new p({createFetchPopupFeaturesQueryGeometry:(e,t)=>l(e,t,this.view),layerView:this,updatingHandles:this._updatingHandles})}destroy(){var e;null==(e=this._popupHighlightHelper)||e.destroy()}fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t)}getFetchOptions(){return{timeExtent:this.timeExtent}}};m=e([r("esri.views.3d.layers.MapImageLayerView3D")],m);const n=m;export{n as default};
