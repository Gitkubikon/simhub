const __vite__fileDeps=["assets/geometryEngine-Bp1TD6MM.js","assets/geometryEngineBase-9EI9fooq.js","assets/index-DSIPxOWi.js","assets/index-B_7YxLDX.css","assets/hydrated-DE1HcVsK.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{e,y as t,ab as r,a as n,cC as i,S as s,ae as a,_ as l,jX as u,aa as c,lJ as p,bh as y,I as h,d7 as g,d8 as f,lK as m,lL as E,gy as S,at as w,lM as v,k5 as _,bp as I,f1 as b,cM as R,aM as F,hd as x,n as O,au as j,bM as M,hB as T,dD as C,H as D,O as k,a2 as G,u as A,az as P,b as B,a_ as W,k0 as U,fe as $,k2 as Y,fr as ee,cG as te,bc as re,hh as ne,lN as ie}from"./index-DSIPxOWi.js";import{a as se,n as ae,b as oe}from"./TemporalSceneLayerView-BafFz-f2.js";import{O as le}from"./WhereClause-DYd7Xwn9.js";import{a as ue}from"./RenderTexture-DbJC7CTU.js";import{$ as ce}from"./QueryEngine-DAD9skS_.js";import{n as de}from"./optimizedFeatureQueryEngineAdapter--U1rvwBV.js";import{o as pe}from"./I3SMeshView3D-DvgHMyu_.js";const ye="esri.views.3d.layers.i3s.I3SMeshViewFilter",L=()=>O.getLogger(ye);let he=class extends s{constructor(e){super(e),this._projectionEngineLoaded=!1}initialize(){a((()=>{var e;return(null==(e=this.viewFilter)?void 0:e.geometry)||null!=this.layerFilter})).then((()=>this.loadAsyncModule(l((()=>import("./geometryEngine-Bp1TD6MM.js")),__vite__mapDeps([0,1,2,3,4])).then((e=>{this.destroyed||(this._geometryEngine=e)})))))}get sortedObjectIds(){var e;if(null==(null==(e=this.viewFilter)?void 0:e.objectIds))return null;const t=u(this.viewFilter.objectIds);return t.sort(),t}get parsedWhereClause(){var e;const t=null==(e=this.viewFilter)?void 0:e.where;if(null==t||!t)return null;try{return le.create(t,this.layerFieldsIndex)}catch(r){L().error(`Failed to parse filter where clause: ${r}`)}return null}addFilters(e,t,r,n){var i;const s=this.sortedObjectIds;null!=s&&e.push((e=>c(s,!0,e))),this.addSqlFilter(e,this.parsedWhereClause),this.addTimeFilter(e,null==(i=this.viewFilter)?void 0:i.timeExtent);const a=se(this._layerMaskGeometries),l=this._geometryEngine;if(null!=a&&null!=this.layerFilter&&null!=l){const i=this.layerFilter.spatialRelationship;e.push(((e,s)=>N(l,e,s,n,t,r,a,i)))}const u=se(this._viewMaskGeometries);if(null!=u&&null!=this.viewFilter&&null!=l){const i=this.viewFilter.spatialRelationship;e.push(((e,s)=>N(l,e,s,n,t,r,u,i)))}}isMBSGeometryVisible(e,t,r){const n=se(this._layerMaskGeometries),i=this._geometryEngine;if(null!=n&&null!=this.layerFilter&&null!=i){const s=this.layerFilter.spatialRelationship,a=n[0].spatialReference||t;return ue(e,r,Ee,a)?q(i,Ee,n,a,s):(L().warnOnce("SceneLayer.mask geometry is using unsupported SpatialReference, skipping geometry filter for MBS"),!0)}const s=se(this._viewMaskGeometries);if(null!=s&&null!=this.viewFilter&&null!=i){const n=this.viewFilter.spatialRelationship,a=s[0].spatialReference||t;return ue(e,r,Ee,a)?q(i,Ee,s,a,n):(L().warnOnce("SceneLayerView.filter.geometry is using unsupported SpatialReference, skipping geometry filter for MBS"),!0)}return!0}get parsedGeometry(){const e=se(this._viewMaskGeometries),t=se(this._layerMaskGeometries);return null==e||null==t?e||t:t.concat(e)}get _layerMaskGeometries(){const e=this.layerFilter;return null==e?null:null==this._geometryEngine?ae:"disjoint"===e.spatialRelationship?e.geometries.map((e=>({type:"polygon",rings:e.rings,spatialReference:e.spatialReference,cache:{}}))):[e.geometries.reduce(((e,t)=>(e.rings=[...e.rings,...t.rings],e)),{type:"polygon",rings:[],spatialReference:e.geometries[0].spatialReference,cache:{}})]}get _viewMaskGeometries(){if(null==this.viewFilter)return null;const{geometry:e}=this.viewFilter;if(null==e)return null;if(null==this.viewFilter||null==this._geometryEngine)return ae;const{distance:t,units:r}=this.viewFilter,n=this.viewFilter.spatialRelationship,i="mesh"===e.type?e.extent:e;if(null==t||0===t)return V(this._geometryEngine,i,n);const s=r||p(i.spatialReference);if(i.spatialReference.isWGS84){const e=this._geometryEngine.geodesicBuffer(i,t,s);return V(this._geometryEngine,e,n)}const a=y(i,h.WGS84);if(null!=a){const e=y(this._geometryEngine.geodesicBuffer(a,t,s),i.spatialReference);return V(this._geometryEngine,e,n)}if(!this._projectionEngineLoaded&&(this.loadAsyncModule(g().then((()=>this._projectionEngineLoaded=!0))),!this._projectionEngineLoaded))return null;let l=null;try{l=f(i,h.WGS84)}catch(u){}if(l)try{l=f(this._geometryEngine.geodesicBuffer(l,t,s),i.spatialReference)}catch(u){l=null}return l||L().error(`Filter by geodesic buffer (distance) unsupported, failed to project input geometry (${i.spatialReference.wkid}) to WGS84.`),V(this._geometryEngine,l,n)}get updating(){return oe(this._layerMaskGeometries)||oe(this._viewMaskGeometries)}static checkSupport(e){return!(null==e||!function K(e){return null!=e&&ge.includes(e)}(e.spatialRelationship)&&(L().warn(`Filters with spatialRelationship other than ${ge.join(", ")} are not supported for mesh scene layers`),1))}};e([t()],he.prototype,"layerFilter",void 0),e([t({type:r})],he.prototype,"viewFilter",void 0),e([t()],he.prototype,"layerFieldsIndex",void 0),e([t()],he.prototype,"loadAsyncModule",void 0),e([t()],he.prototype,"addSqlFilter",void 0),e([t()],he.prototype,"addTimeFilter",void 0),e([t({readOnly:!0})],he.prototype,"sortedObjectIds",null),e([t({readOnly:!0})],he.prototype,"parsedWhereClause",null),e([t({readOnly:!0})],he.prototype,"parsedGeometry",null),e([t({readOnly:!0})],he.prototype,"_layerMaskGeometries",null),e([t({readOnly:!0})],he.prototype,"_viewMaskGeometries",null),e([t()],he.prototype,"updating",null),e([t()],he.prototype,"_projectionEngineLoaded",void 0),e([t()],he.prototype,"_geometryEngine",void 0),he=e([n(ye)],he);const ge=(e=>["contains","intersects","disjoint"])();var fe,me;function V(e,t,r){if(null==t)return null;if("disjoint"===r&&"polygon"===t.type){const r=t.rings.length,n=t.spatialReference,i=new Array(r);for(let e=0;e<r;++e){const r=m(1/0,1/0,-1/0,-1/0);E(r,t.rings[e]),i[e]={type:"polygon",rings:[t.rings[e]],spatialReference:n,cache:{},aabr:r}}i.sort(((e,t)=>e.aabr[0]-t.aabr[0]));const s=new Set,a=new j;for(let t=0;t<i.length;++t){const r=i[t],n=r.aabr[0];s.forEach((t=>{if(n>=t.aabr[2])return void s.delete(t);if(r.aabr[1]>t.aabr[3]||r.aabr[3]<t.aabr[1]||!e.intersects(r,t))return;r.rings=r.rings.concat(t.rings),S(r.aabr,t.aabr,r.aabr),r.cache={},s.delete(t);const l=w(i,t,i.length,a);i.splice(l,1)})),s.add(r)}for(const e of i)e.aabr=void 0;return i}return[t]}function q(e,t,r,n,i){if(t[3]>=.5*(t[2]+v(n).radius))return!0;const s=H(e,t,n);return r.every((t=>Z(e,t,s,i)!==fe.DISCARD))}function N(e,t,r,n,i,s,a,l){const u=a[0].spatialReference||i.spatialReference;if(!ue(r.node.serviceMbsInIndexSR,s,Ee,u))return void L().warnOnce("SceneLayerView.filter.geometry is using unsupported SpatialReference, skipping geometry filter");const c=H(e,Ee,u),p=function z(e,t,r,n,i){const s=t.renderSpatialReference,a=new Map,l={type:"polygon",rings:[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],spatialReference:r};l.rings[0][3]=l.rings[0][0];const u={indices:null,data:null,stride:0,startIndex:0,endIndex:0};let c,p;switch(e){case"intersects":c=(e,t,r)=>e.intersects(t,r)?fe.KEEP:fe.TEST,p=J;break;case"contains":c=(e,t,r)=>e.contains(t,r)?fe.TEST:fe.DISCARD,p=J;break;default:c=(e,t,r)=>e.disjoint(t,r)?fe.TEST:fe.DISCARD,p=Q}return{collection:n,object:i,type:e,maskSR:r,renderSR:s,aabbCache:a,triangle:l,positions:u,triangleTest:c,geometryTest:p}}(l,i,u,n,r.objectHandle);for(const y of a){if(0===t.length)return;switch(Z(e,y,c,l)){case fe.DISCARD:return void(t.length=0);case fe.KEEP:continue}_(t,r.featureIds,(t=>X(e,y,t,p)))}}(me=fe||(fe={}))[me.KEEP=0]="KEEP",me[me.DISCARD=1]="DISCARD",me[me.TEST=2]="TEST";const Ee=I(0,0,0,0);function H(e,t,r){const n={type:"point",x:t[0],y:t[1],hasZ:!1,hasM:!1,spatialReference:r},i=!b(r)&&!R(r),s=Number.isNaN(t[3])?0:F(t[3],0,2*x.radius),a=i?e.buffer(n,s,1):e.geodesicBuffer(n,s,1);return a.type="polygon",a}function Z(e,t,r,n){switch(n){case"intersects":case"contains":return J(e,t,r);case"disjoint":return Q(e,t,r)}}function J(e,t,r){return e.intersects(t,r)?e.contains(t,r)?fe.KEEP:fe.TEST:fe.DISCARD}function Q(e,t,r){return e.intersects(t,r)?e.contains(t,r)?fe.DISCARD:fe.TEST:fe.KEEP}function X(e,t,r,n){const{collection:i,object:s,renderSR:a,maskSR:l,geometryTest:u,aabbCache:c}=n;let p=c.get(r);if(!p){const e=i.getObjectTransform(s);i.getComponentAabb(s,r,Se);const t=[M(Se[0],Se[1],0),M(Se[0],Se[4],0),M(Se[3],Se[4],0),M(Se[3],Se[1],0)];for(let r=0;r<4;++r)T(t[r],t[r],e.rotationScale),C(t[r],t[r],e.position),D(t[r],a,t[r],l);p={type:"polygon",rings:[t],spatialReference:l,cache:{}},p.rings[0][4]=p.rings[0][0],c.set(r,p)}switch(u(e,t,p)){case fe.DISCARD:return!1;case fe.KEEP:return!0}const{triangle:y,triangleTest:h,positions:g}=n,f=y.rings[0][0],m=y.rings[0][1],E=y.rings[0][2],S=i.getObjectTransform(s);i.getComponentPositions(s,r,g);const{indices:w,data:v,stride:_,startIndex:I,endIndex:b}=g;for(let R=I;R<b;R+=3){const r=_*w[R],n=_*w[R+1],i=_*w[R+2];switch(k(f,v[r],v[r+1],v[r+2]),k(m,v[n],v[n+1],v[n+2]),k(E,v[i],v[i+1],v[i+2]),T(f,f,S.rotationScale),T(m,m,S.rotationScale),T(E,E,S.rotationScale),C(f,f,S.position),C(m,m,S.position),C(E,E,S.position),D(f,a,f,l),D(m,a,m,l),D(E,a,E,l),h(e,t,y)){case fe.DISCARD:return!1;case fe.KEEP:return!0}}return"intersects"!==n.type}const Se=i(),we=ce;let ve=class d extends s{get spatialReference(){return this.layerView.view.spatialReference}get layer(){return this.layerView.i3slayer}get defaultQueryJSON(){return new G({outSpatialReference:this.spatialReference}).toJSON()}get _dataQueryEngine(){return this._ensureDataQueryEngine()}constructor(e){super(e)}initialize(){this.addHandles(this.layerView.on("visible-geometry-changed",(()=>this.spatialIndex.events.emit("changed"))))}destroy(){this._dataQueryEngineInstance=A(this._dataQueryEngineInstance),this._set("layerView",null)}async executeQueryForCount(e,t){return this._dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:r,extent:n}=await this._dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:r,extent:P.fromJSON(n)}}async executeQueryForIds(e,t){return this._dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQuery(e,t){const r=this._ensureQueryJSON(e);if(r.returnGeometry)throw new B("unsupported-query","returnGeometry is not supported when querying a mesh scene layer view, it is only supported when directly querying a scene layer");if(r.returnCentroid)throw new B("unsupported-query","returnCentroid is not yet supported for mesh scene layer queries");const n=await this._dataQueryEngine.executeQuery(r,t),i=W.fromJSON(n);return i.features.forEach((e=>e.geometry=null)),i}_ensureQueryJSON(e){return null==e?this.defaultQueryJSON:e.toJSON()}_ensureDataQueryEngine(){var e;if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const t=this.layer.objectIdField||U,r=(null==(e=this.layer.fieldsIndex)?void 0:e.toJSON())||new $([]),n=this.layerView.view.resourceController.scheduler,i=this.spatialReference.toJSON(),s=this.priority,a=this.spatialIndex;return this._dataQueryEngineInstance=new we({hasZ:!0,hasM:!1,geometryType:"esriGeometryPolygon",fieldsIndex:r,timeInfo:null,spatialReference:i,objectIdField:t,featureStore:a,scheduler:n,priority:s}),this._dataQueryEngineInstance}};e([t({constructOnly:!0})],ve.prototype,"layerView",void 0),e([t({constructOnly:!0})],ve.prototype,"priority",void 0),e([t({constructOnly:!0})],ve.prototype,"spatialIndex",void 0),e([t()],ve.prototype,"spatialReference",null),e([t()],ve.prototype,"layer",null),e([t()],ve.prototype,"defaultQueryJSON",null),ve=e([n("esri.views.3d.layers.i3s.I3SQueryEngine")],ve);class o{constructor(e){this._objectIdField=e.objectIdField,this._getFeatureExtent=e.getFeatureExtent}getObjectId(e){return e.id}getAttributes(e){var t;const{meta:r,index:n}=e,i={};this._objectIdField&&(i[this._objectIdField]=e.id);const s=null==(t=r.attributeInfo)?void 0:t.attributeData;if(null!=s)for(const a of Object.keys(s))i[a]=Y(s[a],n);return i}getAttribute(e,t){var r;if(t===this._objectIdField)return e.id;const{meta:n,index:i}=e,s=null==(r=n.attributeInfo)?void 0:r.attributeData;return null!=s?Y(s[t],i):null}getGeometry(e){if(e.geometry)return e.geometry;const[t,r,n,i,s]=this._getFeatureExtent(e,_e);return new ee([5],[t,r,n,i,r,n,i,s,n,t,s,n,t,r,n])}getCentroid(e,t){if(e.geometry)return de(new ee,e.geometry,t.hasZ,t.hasM);const[r,n,i,s,a,l]=this._getFeatureExtent(e,_e);return new ee([0],[(r+s)/2,(n+a)/2,(i+l)/2])}cloneWithGeometry(e,t){const{id:r,index:n,meta:i}=e;return{id:r,index:n,meta:i,geometry:t}}}const _e=i(),Ie=i();let be=class extends s{constructor(e){super(e),this.events=new re}forEach(e){this.forAllFeatures((t=>(e(t),pe.CONTINUE)))}forEachBounds(e,t){const r=this.getFeatureExtent;for(const n of e)t(r(n,Ie))}forEachInBounds(e,t){this.forAllFeatures((r=>{const n=this.getFeatureExtent(r,Fe);return ne(e,ie(n,xe))&&t(r),pe.CONTINUE}),(t=>{if(ue(t.node.serviceMbsInIndexSR,this.sourceSpatialReference,Re,this.viewSpatialReference),Re[0]>=e[0]&&Re[2]<=e[2]&&Re[1]>=e[1]&&Re[3]<=e[3])return pe.CONTINUE;const r=Math.max(e[0],Math.min(Re[0],e[2])),n=Math.max(e[1],Math.min(Re[1],e[3])),i=Re[0]-r,s=Re[1]-n;return i*i+s*s<=Re[3]*Re[3]?pe.CONTINUE:pe.SKIP}))}};e([t({constructOnly:!0})],be.prototype,"featureAdapter",void 0),e([t({constructOnly:!0})],be.prototype,"forAllFeatures",void 0),e([t({constructOnly:!0})],be.prototype,"getFeatureExtent",void 0),e([t({constructOnly:!0})],be.prototype,"sourceSpatialReference",void 0),e([t({constructOnly:!0})],be.prototype,"viewSpatialReference",void 0),be=e([n("esri.views.3d.layers.i3s.I3SQueryFeatureStore")],be);const Re=I(0,0,0,0),Fe=i(),xe=te();export{he as P,ve as d,be as h,o};
