import{dl as e,dm as n,dn as t,dp as r,dq as l,dr as s,aw as a,Q as u,ds as c,dt as d,du as i,dj as p,dk as f,dv as m,dw as E,dx as S,L as x,cx as R,dy as g,dz as w,dA as y,dB as H,dC as v,dD as I,dE as U,dF as b,dG as F}from"./index-DSIPxOWi.js";import{w as j}from"./ShadedColorMaterial.glsl-C-XXTK_B.js";function O(e,n){return P(e,(()=>n))}function C(e){return P(e,(e=>e.plane))}function P(e,a){const c=u(),d=u();let i=!1;return u=>{const p=a(u);if("start"===u.action){const a=n(u.screenStart,t(r.get())),d=l(e.state.camera,a,K);null!=d&&(i=s(p,d,c))}if(!i)return null;const f=n(u.screenEnd,t(r.get())),m=l(e.state.camera,f,K);return null==m?null:s(p,m,d)?{...u,renderStart:c,renderEnd:d,plane:p,ray:m}:null}}function D(e,n,t,r=null,l=null){return function T(e,n,t=0,r=null,l=null){let s=null;return a=>{if("start"===a.action&&(s=e.sceneIntersectionHelper.intersectElevationFromScreen(m(a.screenStart.x,a.screenStart.y),n,t,l),null!=s&&null!=r&&!E(s,s,r)))return null;if(null==s)return null;const u=e.sceneIntersectionHelper.intersectElevationFromScreen(m(a.screenEnd.x,a.screenEnd.y),n,t,l);return null==u||null!=r&&!E(u,u,r)?null:{...a,mapStart:s,mapEnd:u}}}(e,t,c(n,e,t),r,l)}function M(e,n,t,r){const l=t.toMap(e.screenStart);return null!=l?D(n,l,t.elevationInfo,r):null}function G(e,n,t){let r=null;const l=new j;return l.next(O(e,function N(e,n){const t=Q,r=J,l=S();e.renderCoordsHelper.worldUpAtPosition(n,t);const s=x(g(l),t,R(r,n,e.state.camera.eye));return x(s,s,t),w(n,s,l)}(e,n))).next(function h(e,n){const t=u(),r=d(n);e.renderCoordsHelper.worldUpAtPosition(n,t);const l=u(),s=u(),d2=l=>(R(l,l,n),y(t,l,l),"global"===e.viewingMode&&d(l)*Math.sign(H(t,l))<.001-r&&R(l,v(l,t,.001),n),I(l,l,n),l);return e=>(e.renderStart=d2(i(l,e.renderStart)),e.renderEnd=d2(i(s,e.renderEnd)),e)}(e,n)).next(A(e,t)).next((e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,r=e})),e=>(r=null,l.execute(e),r)}function k(e,s){const o=a=>{const u=n(a,t(r.get())),c=l(e.state.camera,u,K);return null==c?null:U(s,c,Q,J)[1]};return e=>{const n=o(e.screenStart);if(null==n)return null;const t=o(e.screenEnd);return null==t?null:{...e,renderStart:n,renderEnd:t}}}function A(e,n){const t=e.renderCoordsHelper;return e=>{const r=t.fromRenderCoords(e.renderStart,new a({spatialReference:n})),l=t.fromRenderCoords(e.renderEnd,new a({spatialReference:n}));return null!=r&&null!=l?{...e,mapStart:r,mapEnd:l}:null}}var B,L;function q(e){let n=null;return t=>{switch(t.action){case"start":n=e.disableDisplay();break;case"end":case"cancel":null!=n&&(n.remove(),n=null)}return t}}function z(e,t=null){const r=p(e.state.viewingMode);r.options.selectionMode=!0,r.options.store=f.MIN,r.options.hud=!1;const l=m(),s={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},c=u(),d=t??e.spatialReference,i$2=t=>{e.map.ground&&e.map.ground.opacity<1?s.exclude.add(b):s.exclude.delete(b),e.sceneIntersectionHelper.intersectIntersectorScreen(n(t,l),r,s);const u=r.results.min;let i;if(u.getIntersectionPoint(c))i=u.intersector===F.TERRAIN?B.GROUND:B.OTHER;else{if(!r.results.ground.getIntersectionPoint(c))return null;i=B.GROUND}return{location:e.renderCoordsHelper.fromRenderCoords(c,new a({spatialReference:d})),surfaceType:i}};let i;return e=>{if("start"===e.action){const n=i$2(e.screenStart);i=null!=n?n.location:null}if(null==i)return null;const n=i$2(e.screenEnd);return null!=(null==n?void 0:n.location)?{...e,mapStart:i,mapEnd:n.location,surfaceType:n.surfaceType}:null}}(L=B||(B={}))[L.GROUND=0]="GROUND",L[L.OTHER=1]="OTHER";const Q=u(),J=u(),K=e();export{A,C,D,G,M,O,k,q,z};
