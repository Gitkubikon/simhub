import{S as e,gP as t,g as i,P as n,bd as o,b3 as r,e as a,y as s,a as l,gQ as p}from"./index-DSIPxOWi.js";import{t as y}from"./memoize-Dzy0sPL8.js";import{j as g,y as u}from"./SnappingManagerPool-BslN_FM5.js";import{o as c,i as h}from"./queryEngineUtils-Dj40YZwO.js";import{i as d,r as m,n as v}from"./symbologySnappingCandidates-Cl8kN1ha.js";import"./geodesicLengthMeasurementUtils-Pq-FipkN.js";import"./geometryEngine-Bp1TD6MM.js";import"./geometryEngineBase-9EI9fooq.js";import"./hydrated-DE1HcVsK.js";import"./geometry2dUtils-4c9qUvJ6.js";import"./floorFilterUtils-2NbRkqHK.js";import"./keybindings-DkkJsHdp.js";import"./VertexSnappingCandidate-D8VJ-XhT.js";import"./PointSnappingHint-Ct-FTQTL.js";let S=class extends e{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=null!=e&&"3d"===e.type;if(!i||"subtype-group"===t.type)return d();return d(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:async(i,n)=>(await p(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(i,n)})}get _snappingElevationFilter(){const{view:e}=this,t=null!=e&&"3d"===e.type&&"subtype-group"!==this.layerSource.layer.type;return m(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return null!=e&&"3d"===e.type&&"subtype-group"!==t.type?v(this._symbologySnappingSupported,(async(i,n)=>{const o=await e.whenLayerView(t);return r(n),o.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},n)})):v()}get _symbologySnappingSupported(){return null!=this._layerView3D&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:r}=this.layerSource;null!=e&&"3d"===e.type&&"subtype-group"!==r.type&&(e.whenLayerView(r).then((e=>this._layerView3D=e)),this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{const{elevationInfo:i}=r;t(e,i)&&this._snappingElevationAligner.notifyElevationSourceChange()})),i((()=>r.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),n),i((()=>{var e;return null!=this._layerView3D?null==(e=this._layerView3D.layer)?void 0:e.renderer:null}),(()=>this._symbologySnappingFetcher.notifySymbologyChange()),n),o((()=>{var e;return null==(e=this._layerView3D)?void 0:e.layer}),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))]))}constructor(e){super(e),this.view=null,this._layerView3D=null,this._memoizedMakeGetGroundElevation=y(h)}refresh(){}async fetchCandidates(e,t){var i;const{layer:n}=this.layerSource,o=n.source;if(!(null==o?void 0:o.querySnapping))return[];const a=g(n),s=u(e,(null==(i=this.view)?void 0:i.type)??"2d",a),l=await o.querySnapping(s,{signal:t});r(t);const p=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(l.candidates,p,t);r(t);const h=await this._symbologySnappingFetcher.fetch(y,t);r(t);const d=0===h.length?y:[...y,...h],m=this._snappingElevationFilter.filter(s,d),v=this._memoizedMakeGetGroundElevation(this.view,p);return m.map((e=>c(e,v)))}};a([s({constructOnly:!0})],S.prototype,"layerSource",void 0),a([s({constructOnly:!0})],S.prototype,"view",void 0),a([s()],S.prototype,"_snappingElevationAligner",null),a([s()],S.prototype,"_snappingElevationFilter",null),a([s()],S.prototype,"_symbologySnappingFetcher",null),a([s()],S.prototype,"_layerView3D",void 0),a([s()],S.prototype,"_symbologySnappingSupported",null),S=a([l("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],S);export{S as FeatureCollectionSnappingSource};
