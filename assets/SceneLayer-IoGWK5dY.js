const __vite__fileDeps=["assets/editingSupport-BNx5CWnq.js","assets/index-DSIPxOWi.js","assets/index-B_7YxLDX.css","assets/normalizeUtils-BrH-PrZy.js","assets/normalizeUtilsCommon-BU8xfl77.js","assets/infoFor3D-BTCPmnmy.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{e as s,y as r,a as o,jL as n,gs as l,o5 as d,bk as p,iI as u,g0 as y,V as h,j as f,J as m,bl as g,bm as v,et as w,bd as b,i as I,go as L,bZ as F,bn as S,b as j,bF as _,_ as T,jw as x,j0 as E,en as O,eo as A,ep as P,g4 as R,eq as D,gc as U,gd as q,g1 as N,fe as C,j2 as G,jx as V,iH as k,a7 as Q,n as $,er as z,ex as J,a2 as K,ag as M,ah as W,af as H,o6 as Z,v as B,iJ as X,j1 as Y,gG as ee,o7 as te,aw as ie,i$ as se,be as re,ek as ae,W as oe,ae as ne,gj as le,o8 as de,gl as pe,o9 as ue,oa as ce,l5 as ye,j3 as he,j4 as fe,j5 as me,gm as ge,iK as ve,iL as we,iM as be,g7 as Ie,ob as Le,iR as Fe,iO as Se,iP as je,iS as _e,nP as Te,iU as xe,Z as Ee,oc as Oe}from"./index-DSIPxOWi.js";import{$ as Ae}from"./Mesh-BS04vQSz.js";import{i as Pe,m as Re}from"./uploadAssetErrors-DaJmSTaj.js";import{r as De,t as Ue}from"./infoFor3D-BTCPmnmy.js";import{b as qe}from"./fetchService-CJQ8-6Ub.js";import{j as Ne}from"./persistable-Bz3xp-b5.js";import"./MeshTransform-Y0ppddED.js";import"./vertexSpaceConversion-C_GU75pR.js";import"./External-Djr0rIk9.js";import"./resourceExtension-BScMZjEL.js";function e$1({associatedLayer:s,serviceUpdateTimeStamp:r}){var o;const n=null==(o=null==s?void 0:s.editingInfo)?void 0:o.lastEditDate,l=null==s?void 0:s.serverGens,d=null!=n,p=null!=r,u=d&&p&&r.lastUpdate!==n.getTime();return d&&(u||!p&&(null==l?void 0:l.minServerGen)!==(null==l?void 0:l.serverGen))}const a=p=>{let y=class extends p{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var s;const r=null==(s=this.associatedLayer)?void 0:s.timeInfo;if(null==r)return null;const o=r.clone();return u(o,this.fieldsIndex),o}set timeInfo(s){u(s,this.fieldsIndex),this._override("timeInfo",s)}get timeExtent(){var s;return null==(s=this.associatedLayer)?void 0:s.timeExtent}set timeExtent(s){this._override("timeExtent",s)}get timeOffset(){var s;return null==(s=this.associatedLayer)?void 0:s.timeOffset}set timeOffset(s){this._override("timeOffset",s)}get datesInUnknownTimezone(){var s;return(null==(s=this.associatedLayer)?void 0:s.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(s){this._override("datesInUnknownTimezone",s)}async loadTimeInfoFromService(s){const{serviceTimeInfo:r}=this;if(null==r)return;const{startTimeField:o,endTimeField:d}=r;if(null==o&&null==d)return;if(e$1({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const n2=async r=>{var n;let l=null;try{const o=await(null==(n=this.fetchStatistics)?void 0:n.call(this,r,s));l=null==o?void 0:o.stats}catch{}if(null==l)return null;const{minTimeStr:d,min:p,maxTimeStr:u,max:y}=l,h=r===o?d??p:u??y;return null!=h?new Date(h):null},[p,u]=await Promise.all([n2(o),n2(d)]);if(null!=o&&null==p||null!=d&&null==u)return;const y=new l({start:p,end:u});this.setAtOrigin("timeInfo",new n({endField:d,startField:o,fullTimeExtent:y}),"service")}};return s([r({type:n,json:{read:!1,write:!1}})],y.prototype,"timeInfo",null),s([r({type:l,json:{read:!1,write:!1}})],y.prototype,"timeExtent",null),s([r({type:d,json:{read:!1,write:!1}})],y.prototype,"timeOffset",null),s([r({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],y.prototype,"datesInUnknownTimezone",null),s([r({type:Ce,readOnly:!0,json:{read:{source:"timeInfo"}}})],y.prototype,"serviceTimeInfo",void 0),y=s([o("esri.layers.mixins.TemporalSceneLayer")],y),y};let Ce=class c extends p{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};s([r({type:String})],Ce.prototype,"endTimeField",void 0),s([r({type:String})],Ce.prototype,"startTimeField",void 0),Ce=s([o("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],Ce);let Ge=class extends p{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};var Ve;s([r({type:String,json:{read:!0,write:!0}})],Ge.prototype,"name",void 0),s([r({type:String,json:{read:!0,write:!0}})],Ge.prototype,"field",void 0),s([r({type:[Number],json:{read:!0,write:!0}})],Ge.prototype,"currentRangeExtent",void 0),s([r({type:[Number],json:{read:!0,write:!0}})],Ge.prototype,"fullRangeExtent",void 0),s([r({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],Ge.prototype,"type",void 0),Ge=s([o("esri.layers.support.RangeInfo")],Ge);let ke=Ve=class extends(y(h.ofType(f))){constructor(s){super(s)}clone(){return new Ve(this.items.map((s=>s.clone())))}write(s,r){return this.toJSON(r)}toJSON(s){var r;const o=null==(r=null==s?void 0:s.layer)?void 0:r.spatialReference;return o?this.toArray().map((r=>{if(!o.equals(r.spatialReference)){if(!m(r.spatialReference,o))return(null==s?void 0:s.messages)&&s.messages.push(new g("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:s.layer.spatialReference,context:s})),null;const n=new f;v(r,n,o),r=n}const n=r.toJSON(s);return delete n.spatialReference,n})).filter((s=>null!=s)):((null==s?void 0:s.messages)&&s.messages.push(new g("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:s.layer.spatialReference,context:s})),this.toArray().map((r=>r.toJSON(s))))}static fromJSON(s,r){const o=new Ve;return s.forEach((s=>o.add(f.fromJSON(s,r)))),o}};ke=Ve=s([o("esri.layers.support.PolygonCollection")],ke);const Qe=ke;var $e;let ze=$e=class extends p{constructor(s){super(s),this.spatialRelationship="disjoint",this.geometries=new Qe,this._geometriesSource=null}initialize(){this.addHandles(b((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),I))}readGeometries(s,r,o){Array.isArray(s)?this.geometries=Qe.fromJSON(s,o):this._geometriesSource={url:L(s,o),context:o}}async loadGeometries(s,r){if(null==this._geometriesSource)return;const{url:o,context:n}=this._geometriesSource,l=await F(o,{responseType:"json",signal:null==r?void 0:r.signal}),d=s.toJSON(),p=l.data.map((s=>({...s,spatialReference:d})));this.geometries=Qe.fromJSON(p,n),this._geometriesSource=null}clone(){const s=new $e({geometries:S(this.geometries),spatialRelationship:this.spatialRelationship});return s._geometriesSource=this._geometriesSource,s}};s([r({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],ze.prototype,"spatialRelationship",void 0),s([r({type:Qe,nonNullable:!0,json:{write:!0}}),Ne({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],ze.prototype,"geometries",void 0),s([w(["web-scene","portal-item"],"geometries")],ze.prototype,"readGeometries",null),ze=$e=s([o("esri.layers.support.SceneFilter")],ze);const Je=ze;async function t(s){const{BlobReader:r,ZipReader:o,BlobWriter:n}=await T((()=>import("./zipjs-wrapper-D2gUu0pL.js")),[]),l=[],d=new o(new r(s));return(await d.getEntries()).forEach((s=>{var r;if(s.directory||/^__MACOS/i.test(s.filename))return;const o=new n,d=null==(r=s.getData)?void 0:r.call(s,o).then((r=>new File([r],s.filename)));d&&l.push(d)})),Promise.all(l)}const Ke=new Set(["3DObject","Point"]),Me=xe();let We=class extends(a(x(E(O(A(P(R(D(U(q(N(Ee)))))))))))){constructor(...s){super(...s),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new h,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(s,r){return"string"==typeof s?{url:s,...r}:s}destroy(){this._set("renderer",null)}getField(s){return this.fieldsIndex.get(s)}getFieldDomain(s,r){var o,n,l;const d=null==(n=null==(o=this.getFeatureType(null==r?void 0:r.feature))?void 0:o.domains)?void 0:n[s];return d&&"inherited"!==d.type?d:(null==(l=this.getField(s))?void 0:l.domain)??null}getFeatureType(s){return s&&this.associatedLayer?this.associatedLayer.getFeatureType(s):null}get types(){var s;return(null==(s=this.associatedLayer)?void 0:s.types)??[]}get typeIdField(){var s;return(null==(s=this.associatedLayer)?void 0:s.typeIdField)??null}get templates(){var s;return(null==(s=this.associatedLayer)?void 0:s.templates)??null}get formTemplate(){var s;return(null==(s=this.associatedLayer)?void 0:s.formTemplate)??null}get fieldsIndex(){return new C(this.fields)}readNodePages(s,r,o){return"Point"===r.layerType&&(s=r.pointNodePages),null==s||"object"!=typeof s?null:G.fromJSON(s,o)}set elevationInfo(s){this._set("elevationInfo",s),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var s;return this._capabilitiesFromAssociatedFeatureLayer(null==(s=this.associatedLayer)?void 0:s.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&V(this.associatedLayer)}get geometryType(){return Ze[this.profile]||"mesh"}set renderer(s){k(s,this.fieldsIndex),this._set("renderer",s)}readCachedDrawingInfo(s){return null!=s&&"object"==typeof s||(s={}),null==s.color&&(s.color=!1),s}get capabilities(){var s;return this._capabilitiesFromAssociatedFeatureLayer(null==(s=this.associatedLayer)?void 0:s.capabilities)}_capabilitiesFromAssociatedFeatureLayer(s){var r;s=null!=s?s:Oe;const{query:o,queryRelated:n,editing:{supportsGlobalId:l,supportsRollbackOnFailure:d,supportsUploadWithItemId:p,supportsGeometryUpdate:u,supportsReturnServiceEditsInSourceSpatialReference:y},data:{supportsZ:h,supportsM:f,isVersioned:m,supportsAttachment:g},operations:{supportsEditing:v,supportsAdd:w,supportsUpdate:b,supportsDelete:I,supportsQuery:L,supportsQueryAttachments:F,supportsAsyncConvert3D:S}}=s,j=s.operations.supportsChangeTracking,_=!!(null==(r=this.associatedLayer)?void 0:r.infoFor3D)&&Q();return{query:o,queryRelated:n,editing:{supportsGlobalId:l,supportsReturnServiceEditsInSourceSpatialReference:y,supportsRollbackOnFailure:d,supportsGeometryUpdate:_&&u,supportsUploadWithItemId:p},data:{supportsAttachment:g,supportsZ:h,supportsM:f,isVersioned:m},operations:{supportsQuery:L,supportsQueryAttachments:F,supportsEditing:v&&j,supportsAdd:_&&w&&j,supportsDelete:_&&I&&j,supportsUpdate:b&&j,supportsAsyncConvert3D:S}}}get editingEnabled(){var s;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):(null==(s=this.associatedLayer)?void 0:s.editingEnabled)??!1}set editingEnabled(s){this._overrideIfSome("editingEnabled",s)}get infoFor3D(){var s;return(null==(s=this.associatedLayer)?void 0:s.infoFor3D)??null}get relationships(){var s;return null==(s=this.associatedLayer)?void 0:s.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(s,r){return!s&&r.fields&&r.fields.some((r=>("esriFieldTypeOID"===r.type&&(s=r.name),!!s))),s||void 0}readGlobalIdField(s,r){return!s&&r.fields&&r.fields.some((r=>("esriFieldTypeGlobalID"===r.type&&(s=r.name),!!s))),s||void 0}get displayField(){var s;return(null==(s=this.associatedLayer)?void 0:s.displayField)??null}readProfile(s,r){const o=r.store.profile;return null!=o&&He[o]?He[o]:($.getLogger(this).error("Unknown or missing profile",{profile:o,layer:this}),"mesh-pyramids")}get useViewTime(){var s;return(null==(s=this.associatedLayer)?void 0:s.useViewTime)??!0}set useViewTime(s){this._override("useViewTime",s)}load(s){return this.addResolvingPromise(this._load(s)),Promise.resolve(this)}async _load(s){const r=null!=s?s.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},s).catch(z),await this._fetchService(r),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,r),this._setAssociatedFeatureLayer(r),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(s),await J(this,{origin:"service"},r),k(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(s)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(s){$.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:s}),this.filter=null}}createQuery(){var s;const r=new K;return"mesh"===this.geometryType?(null==(s=this.associatedLayer)?void 0:s.infoFor3D)&&(r.returnGeometry=!0):(r.returnGeometry=!0,r.returnZ=!0),r.where=this.definitionExpression||"1=1",r.sqlFormat="standard",r.outFields=["*"],r}queryExtent(s,r){return this._getAssociatedLayerForQuery().then((o=>o.queryExtent(s||this.createQuery(),r)))}queryFeatureCount(s,r){return this._getAssociatedLayerForQuery().then((o=>o.queryFeatureCount(s||this.createQuery(),r)))}queryFeatures(s,r){return this._getAssociatedLayerForQuery().then((o=>o.queryFeatures(s||this.createQuery(),r))).then((s=>{if(null==s?void 0:s.features)for(const r of s.features)r.layer=this,r.sourceLayer=this;return s}))}async queryRelatedFeatures(s,r){if(await this.load(),!this.associatedLayer)throw new j("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(s,r)}async queryRelatedFeaturesCount(s,r){if(await this.load(),!this.associatedLayer)throw new j("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(s,r)}async queryCachedAttributes(s,r){var o;const n=M(this.fieldsIndex,await W(this,H(this)));return Z((null==(o=this.parsedUrl)?void 0:o.path)??"",this.attributeStorageInfo??[],s,r,n,this.apiKey,this.customParameters)}async queryCachedFeature(s,r){const o=await this.queryCachedAttributes(s,[r]);if(!o||0===o.length)throw new j("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const n=new B;return n.attributes=o[0],n.layer=this,n.sourceLayer=this,n}queryObjectIds(s,r){return this._getAssociatedLayerForQuery().then((o=>o.queryObjectIds(s||this.createQuery(),r)))}queryAttachments(s,r){return this._getAssociatedLayerForQuery().then((o=>o.queryAttachments(s,r)))}getFieldUsageInfo(s){const r={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[s]||r:($.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),r)}createPopupTemplate(s){return X(this,s)}_getAssociatedLayerForQuery(){const s=this.associatedLayer;return(null==s?void 0:s.loaded)?Promise.resolve(s):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new j("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(s){throw new j("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:s})}return this.associatedLayer}hasCachedStatistics(s){return null!=this.statisticsInfo&&this.statisticsInfo.some((r=>r.name===s))}async queryCachedStatistics(s,r){return await this.load(r),await this.fetchStatistics(s,r)}async saveAs(s,r){return this._debouncedSaveOperations(Y.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},s)}async save(){const s={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(Y.SAVE,s)}async applyEdits(s,r){const{applyEdits:o}=await T((()=>import("./editingSupport-BNx5CWnq.js")),__vite__mapDeps([0,1,2,3,4,5]));let n=r;await this.load();const l=this.associatedLayer;if(!l)throw new j(`${this.type}-layer:not-editable`,"Service is not editable");await l.load();const{globalIdField:d}=l,p=!!l.infoFor3D,u=(null==n?void 0:n.globalIdUsed)??!0;if(p&&null==d)throw new j(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(p&&!u)throw new j(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return ee(l.url)&&p&&null!=s.deleteFeatures&&null!=d&&(n={...n,globalIdToObjectId:await te(l,s.deleteFeatures,d)}),o(this,l.source,s,n)}async uploadAssets(s,r){if(await this.load(),null==this.associatedLayer)throw new j(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(s,r)}on(s,r){return super.on(s,r)}async convertMesh(s,r){const r$12=s=>{throw $.getLogger(this).error(".convertMesh()",s.message),s};await this.load(),this.infoFor3D||r$12(new j("invalid:layer","SceneLayer has no capability for mesh conversion"));const o=await this.extractAndFilterFiles(s),n=o.reduce(((s,r)=>De(this.infoFor3D,r)?s+1:s),0);0===n&&r$12(new Pe),n>1&&r$12(new Re);const l=this.spatialReference,d=(null==r?void 0:r.location)??new ie({x:0,y:0,z:0,spatialReference:l}),p=d.spatialReference.isGeographic?"local":"georeferenced",u=Ae.createWithExternalSource(d,o,{vertexSpace:p}),[y]=await this.uploadAssets([u],r);return y}async extractAndFilterFiles(s){await this.load();const r=this.infoFor3D;return r?(await async function e(s){const r=[];for(const o of s)o.name.toLowerCase().endsWith(".zip")?r.push(t(o)):r.push(Promise.resolve(o));return(await Promise.all(r)).flat()}(s)).filter((s=>Ue(r,s))):s}validateLayer(s){if(s.layerType&&!Ke.has(s.layerType))throw new j("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:s.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new j("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new j("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});!function t2(s,r){let o=!1,n=!1;if(null==s)o=!0,n=!0;else{const l=r&&r.isGeographic;switch(s){case"east-north-up":case"earth-centered":o=!0,n=l;break;case"vertex-reference-frame":o=!0,n=!l;break;default:o=!1}}if(!o)throw new j("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!n)throw new j("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const s=[];if("points"===this.profile)s.push("Point");else{if("mesh-pyramids"!==this.profile)throw new j("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);s.push("3DObject")}return s}_populateFieldUsageInfo(){var s,r,o;if(this._fieldUsageInfo={},this.fields)for(const n of this.fields){const l=!!(null==(s=this.attributeStorageInfo)?void 0:s.some((s=>s.name===n.name))),d=!!(null==(o=null==(r=this.associatedLayer)?void 0:r.fields)?void 0:o.some((s=>s&&n.name===s.name))),p={supportsLabelingInfo:l,supportsRenderer:l,supportsPopupTemplate:l||d,supportsLayerQuery:d};this._fieldUsageInfo[n.name]=p}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var s;if(!(null==(s=this.associatedLayer)?void 0:s.fields))return;let r=null;for(const o of this.associatedLayer.fields){const s=this.getField(o.name);s?(!s.domain&&o.domain&&(s.domain=o.domain.clone()),s.editable=o.editable,s.nullable=o.nullable,s.length=o.length):(r||(r=this.fields?this.fields.slice():[]),r.push(o.clone()))}r&&this._set("fields",r)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const s=["popupTemplate","popupEnabled"],r=se(this);for(let o=0;o<s.length;o++){const n=s[o],l=this.originIdOf(n),d=this.associatedLayer.originIdOf(n);l<d&&(d===re.SERVICE||d===re.PORTAL_ITEM)&&r.setAtOrigin(n,this.associatedLayer[n],d)}}_applyAssociatedLayerExtentOverride(){var s,r,o;const n=null==(s=this.associatedLayer)?void 0:s.getAtOrigin("fullExtent","service");Q()&&null!=(null==(r=this.associatedLayer)?void 0:r.infoFor3D)&&n&&ee(null==(o=this.associatedLayer)?void 0:o.url)&&e$1(this)&&se(this).setAtOrigin("fullExtent",n.clone(),re.SERVICE)}_applyAssociatedLayerPrivileges(){const s=this.associatedLayer;s&&(this._set("userHasEditingPrivileges",s.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",s.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",s.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(s){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:r,layerId:o,portalItem:n}=await ae(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:s}),l=await qe.FeatureLayer();this.associatedLayer=new l({url:r,customParameters:this.customParameters,layerId:o,portalItem:n}),await this.associatedLayer.load()}catch(r){oe(r)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await ne((()=>this.popupEnabled&&null!=this.popupTemplate));const s=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?$.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${s}`):$.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${s}`)}_validateElevationInfo(){const s=this.elevationInfo;"mesh-pyramids"===this.profile&&le($.getLogger(this),de("Mesh scene layers","relative-to-scene",s)),le($.getLogger(this),pe("Scene layers",s))}async fetchStatistics(s,r){var o;return await async function i({fieldName:s,statisticsInfo:r,errorContext:o,fieldsIndex:n,path:l,customParameters:d,apiKey:p,signal:u}){if(null==r)throw new j(`${o}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=n.get(s);if(null==y)throw new j(`${o}:field-unexisting`,`Field '${s}' does not exist on the layer`);const h=r.find((s=>s.name===y.name));if(null==h)throw new j(`${o}:no-cached-statistics`,"Cached statistics for this attribute are not available");const f=_(l,h.href),{data:m}=await F(f,{query:{f:"json",...d,token:p},responseType:"json",signal:u});return m}({fieldName:s,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:(null==(o=this.parsedUrl)?void 0:o.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:null==r?void 0:r.signal})}};s([r({types:{key:"type",base:ue,typeMap:{selection:ce}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],We.prototype,"featureReduction",void 0),s([r({type:[Ge],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],We.prototype,"rangeInfos",void 0),s([r({json:{read:!1}})],We.prototype,"associatedLayer",void 0),s([r({type:["show","hide"]})],We.prototype,"listMode",void 0),s([r({type:["ArcGISSceneServiceLayer"]})],We.prototype,"operationalLayerType",void 0),s([r({json:{read:!1},readOnly:!0})],We.prototype,"type",void 0),s([r({...Me.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],We.prototype,"fields",void 0),s([r()],We.prototype,"types",null),s([r()],We.prototype,"typeIdField",null),s([r()],We.prototype,"templates",null),s([r()],We.prototype,"formTemplate",null),s([r({readOnly:!0,clonable:!1})],We.prototype,"fieldsIndex",null),s([r({type:ye,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],We.prototype,"floorInfo",void 0),s([r(Me.outFields)],We.prototype,"outFields",void 0),s([r({type:G,readOnly:!0,json:{read:!1}})],We.prototype,"nodePages",void 0),s([w("service","nodePages",["nodePages","pointNodePages"])],We.prototype,"readNodePages",null),s([r({type:[he],readOnly:!0})],We.prototype,"materialDefinitions",void 0),s([r({type:[fe],readOnly:!0})],We.prototype,"textureSetDefinitions",void 0),s([r({type:[me],readOnly:!0})],We.prototype,"geometryDefinitions",void 0),s([r({readOnly:!0})],We.prototype,"serviceUpdateTimeStamp",void 0),s([r({readOnly:!0})],We.prototype,"attributeStorageInfo",void 0),s([r({readOnly:!0})],We.prototype,"statisticsInfo",void 0),s([r({type:h.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],We.prototype,"excludeObjectIds",void 0),s([r({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],We.prototype,"definitionExpression",void 0),s([r({type:Je,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],We.prototype,"filter",void 0),s([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],We.prototype,"path",void 0),s([r(ge)],We.prototype,"elevationInfo",null),s([r({readOnly:!0,json:{read:!1}})],We.prototype,"effectiveCapabilities",null),s([r({readOnly:!0})],We.prototype,"effectiveEditingEnabled",null),s([r({type:String})],We.prototype,"geometryType",null),s([r(ve)],We.prototype,"labelsVisible",void 0),s([r({type:[we],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:be},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:be},write:!0}})],We.prototype,"labelingInfo",void 0),s([r(Ie)],We.prototype,"legendEnabled",void 0),s([r({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(s,r){var o,n;if("number"==typeof s&&s>=0&&s<=1)return s;const l=null==(n=null==(o=r.layerDefinition)?void 0:o.drawingInfo)?void 0:n.transparency;return void 0!==l?Le(l):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],We.prototype,"opacity",void 0),s([r({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],We.prototype,"priority",void 0),s([r({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],We.prototype,"semantic",void 0),s([r({types:Fe,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],We.prototype,"renderer",null),s([r({json:{read:!1}})],We.prototype,"cachedDrawingInfo",void 0),s([w("service","cachedDrawingInfo")],We.prototype,"readCachedDrawingInfo",null),s([r({readOnly:!0,json:{read:!1}})],We.prototype,"capabilities",null),s([r({type:Boolean,json:{read:!1}})],We.prototype,"editingEnabled",null),s([r({readOnly:!0,json:{write:!1,read:!1}})],We.prototype,"infoFor3D",null),s([r({readOnly:!0,json:{write:!1,read:!1}})],We.prototype,"relationships",null),s([r(Se)],We.prototype,"popupEnabled",void 0),s([r({type:je,json:{name:"popupInfo",write:!0}})],We.prototype,"popupTemplate",void 0),s([r({readOnly:!0,json:{read:!1}})],We.prototype,"defaultPopupTemplate",null),s([r({type:String,json:{read:!1}})],We.prototype,"objectIdField",void 0),s([w("service","objectIdField",["objectIdField","fields"])],We.prototype,"readObjectIdField",null),s([r({type:String,json:{read:!1}})],We.prototype,"globalIdField",void 0),s([w("service","globalIdField",["globalIdField","fields"])],We.prototype,"readGlobalIdField",null),s([r({readOnly:!0,type:String,json:{read:!1}})],We.prototype,"displayField",null),s([r({type:String,json:{read:!1}})],We.prototype,"profile",void 0),s([w("service","profile",["store.profile"])],We.prototype,"readProfile",null),s([r({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],We.prototype,"normalReferenceFrame",void 0),s([r(_e)],We.prototype,"screenSizePerspectiveEnabled",void 0),s([r({json:{read:!1,origins:{service:{read:!0}}}})],We.prototype,"serviceItemId",void 0),s([r(Te)],We.prototype,"useViewTime",null),We=s([o("esri.layers.SceneLayer")],We);const He={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Ze={"mesh-pyramids":"mesh",points:"point"},Be=We;export{Be as default};
