import{g0 as e,ak as t,e as n,y as s,gw as i,kQ as o,kR as r,a as l,hU as a,V as p,f as u,g as d,A as y,k as c,kS as m,az as h,eo as g,eq as f,bj as w,Z as x}from"./index-DSIPxOWi.js";import{c as v}from"./Analysis-B4LiSSEe.js";import{u as b}from"./LengthDimension-CqUogCKq.js";let P=class extends(e(a)){constructor(e){super(e),this.type="simple",this.color=new t("black"),this.lineSize=2,this.fontSize=10,this.textColor=new t("black"),this.textBackgroundColor=new t([255,255,255,.6])}};n([s({type:["simple"],readOnly:!0,json:{write:{isRequired:!0}}})],P.prototype,"type",void 0),n([s({type:t,nonNullable:!0,json:{type:[i],write:{isRequired:!0}}})],P.prototype,"color",void 0),n([s({type:Number,cast:o,nonNullable:!0,range:{min:r(1)},json:{write:{isRequired:!0}}})],P.prototype,"lineSize",void 0),n([s({type:Number,cast:o,nonNullable:!0,json:{write:{isRequired:!0}}})],P.prototype,"fontSize",void 0),n([s({type:t,nonNullable:!0,json:{type:[i],write:{isRequired:!0}}})],P.prototype,"textColor",void 0),n([s({type:t,nonNullable:!0,json:{type:[i],write:{isRequired:!0}}})],P.prototype,"textBackgroundColor",void 0),P=n([l("esri.analysis.DimensionSimpleStyle")],P);const R=P,j=p.ofType(b);let O=class extends v{constructor(e){super(e),this.type="dimension",this.style=new R,this.extent=null}initialize(){this.addHandles(d((()=>this._computeExtent()),(e=>{null==(null==e?void 0:e.pending)&&this._set("extent",null!=e?e.extent:null)}),y))}get dimensions(){return this._get("dimensions")||new j}set dimensions(e){this._set("dimensions",c(e,this.dimensions,j))}get spatialReference(){for(const e of this.dimensions){if(null!=e.startPoint)return e.startPoint.spatialReference;if(null!=e.endPoint)return e.endPoint.spatialReference}return null}get requiredPropertiesForEditing(){return this.dimensions.reduce(((e,t)=>(e.push(t.startPoint,t.endPoint),e)),[])}async waitComputeExtent(){const e=this._computeExtent();return null!=e?e.pending:Promise.resolve()}_computeExtent(){const e=this.spatialReference;if(null==e)return{pending:null,extent:null};const t=[];for(const i of this.dimensions)null!=i.startPoint&&t.push(i.startPoint),null!=i.endPoint&&t.push(i.endPoint);const n=m(t,e);if(null!=n.pending)return{pending:n.pending,extent:null};let s=null;return null!=n.geometries&&(s=n.geometries.reduce(((e,t)=>null==e?null!=t?h.fromPoint(t):null:null!=t?e.union(h.fromPoint(t)):e),null)),{pending:null,extent:s}}clear(){this.dimensions.removeAll()}};n([s({type:["dimension"]})],O.prototype,"type",void 0),n([s({cast:u,type:j,nonNullable:!0})],O.prototype,"dimensions",null),n([s({readOnly:!0})],O.prototype,"spatialReference",null),n([s({types:{key:"type",base:null,typeMap:{simple:R}},nonNullable:!0})],O.prototype,"style",void 0),n([s({value:null,readOnly:!0})],O.prototype,"extent",void 0),n([s({readOnly:!0})],O.prototype,"requiredPropertiesForEditing",null),O=n([l("esri.analysis.DimensionAnalysis")],O);const N=O;let k=class extends(g(f(x))){constructor(e){if(super(e),this.type="dimension",this.operationalLayerType="ArcGISDimensionLayer",this.source=new N,this.opacity=1,e){const{source:t,style:n}=e;t&&n&&(t.style=n)}}initialize(){this.addHandles([d((()=>this.source),((e,t)=>{null!=t&&t.parent===this&&(t.parent=null),null!=e&&(e.parent=this)}),y)])}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get style(){return this.source.style}set style(e){this.source.style=e}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new N)}get analysis(){return this.source}set analysis(e){this.source=e}get dimensions(){return this.source.dimensions}set dimensions(e){this.source.dimensions=e}writeDimensions(e,t,n,s){t.dimensions=e.filter((({startPoint:e,endPoint:t})=>null!=e&&null!=t)).map((e=>e.toJSON(s))).toJSON()}};n([s({json:{read:!1},readOnly:!0})],k.prototype,"type",void 0),n([s({type:["ArcGISDimensionLayer"]})],k.prototype,"operationalLayerType",void 0),n([s({nonNullable:!0})],k.prototype,"source",void 0),n([s({readOnly:!0})],k.prototype,"spatialReference",null),n([s({types:{key:"type",base:null,typeMap:{simple:R}},json:{write:{ignoreOrigin:!0}}})],k.prototype,"style",null),n([s({readOnly:!0})],k.prototype,"fullExtent",null),n([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],k.prototype,"opacity",void 0),n([s({type:["show","hide"]})],k.prototype,"listMode",void 0),n([s({type:p.ofType(b),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],k.prototype,"dimensions",null),n([w("web-scene","dimensions")],k.prototype,"writeDimensions",null),k=n([l("esri.layers.DimensionLayer")],k);const S=k;export{S as default};
