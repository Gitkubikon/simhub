const __vite__fileDeps=["assets/imageryUtils-BKfCadHR.js","assets/utils-CNFe6p3t.js","assets/index-DSIPxOWi.js","assets/index-B_7YxLDX.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{bn as e,sE as t,e as r,y as o,bj as u,a as d,bk as h,g1 as g,aw as f,I as R,gw as x,c7 as I,mD as T,tP as P,tQ as O,fk as M,tR as J,et as q,j as G,az as L,gM as U,c8 as $,tS as ee,gs as te,sw as ie,n as re,a_ as se,ay as ne,fY as oe,a$ as ae,fX as le,fW as ue,bZ as pe,gr as ce,fP as me,iN as de,ev as ye,fe as he,ej as ge,b as fe,a2 as ve,g as we,v as Re,tT as be,hT as Se,g2 as xe,gp as Ie,g4 as Fe,eo as De,ep as Te,g3 as je,gc as Ne,en as Oe,eq as _e,h5 as Ae,er as Ve,iJ as Me,i_ as Je,gu as Ee,g7 as qe,iO as Ge,iP as Le,Z as ze,_ as Ue}from"./index-DSIPxOWi.js";import{N as He,n as Be,r as $e,s as Qe,e as ke,c as We,l as Ze,d as Ke,u as Xe,b as Ye,v as lt,w as dt,j as yt,m as ht,k as gt,p as ft,B as vt,U as wt,L as Rt,$ as bt,f as St,t as xt}from"./fetchRasterInfo-CRGdpINC.js";import{M as It,t as Ft,v as Dt,O as Tt,Q as jt,S as Pt,n as Ct,c as Nt,g as Ot,s as _t,L as At,j as Vt,P as Mt,l as Jt}from"./dataUtils-DNEwlV4z.js";import{t as Et}from"./imageBitmapUtils-CleAXumn.js";import{R as qt}from"./normalizeUtils-BrH-PrZy.js";import{s as Gt}from"./executeQueryJSON-DDi8KdIf.js";import"./normalizeUtilsCommon-BU8xfl77.js";import"./pbf-B53Txr8m.js";import"./AttachmentInfo-u2TyaLjZ.js";import{a as Lt,s as zt}from"./executeForIds-vkxYbvNq.js";import"./ClassBreaksDefinition-Dt1HCCB7.js";import"./query-C2USZ63O.js";import"./pbfQueryUtils-DUjEbwA9.js";const Ut={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Ht=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Bt={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},$t=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function p$e(e){return $t.has(e.type)}function g$1(t,r){var o;if(!t||!r)return e(t||r);const u=e(t);if(u.functionDefinition&&r.rasterFunctionDefinition){const e=r.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),d$3(u.functionDefinition.arguments,r),u.rasterFunctionDefinition=u.functionDefinition.toJSON()}else"none"!==(null==(o=r.functionName)?void 0:o.toLowerCase())&&(b(u.functionArguments).Raster=r);return u}function d$3(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&d$3(e[r].arguments,t))}function h$1(t){const r=e(Ut[t.functionName+"Function"]),o=t.functionArguments;for(const e in o)"raster"===e.toLowerCase()?(r.arguments[e]=h$1(o[e]),r.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(r.arguments[e].value=D$1(o[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=o[e];return r}function y$8(e,r){switch(r=r||{},e.type){case"raster-stretch":return function w(e,t){var r;const o=t.convertToRFT,u=new He;u.functionName="Stretch";const d=Qt[Dt.toJSON(e.stretchType)],h="u8",g={StretchType:d,Statistics:V$1(e.statistics??[]),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(g.Min=e.outputMin),null!=e.outputMax&&(g.Max=e.outputMax),d===Qt.standardDeviation?(g.NumberOfStandardDeviations=e.numberOfStandardDeviations,u.outputPixelType=h):d===Qt.percentClip?(g.MinPercent=e.minPercent,g.MaxPercent=e.maxPercent,u.outputPixelType=h):d===Qt.minMax?u.outputPixelType=h:d===Qt.sigmoid&&(g.SigmoidStrengthLevel=e.sigmoidStrengthLevel),u.functionArguments=g,u.variableName="Raster",e.colorRamp){const d=e.colorRamp,h=new He;if(o)h.functionArguments={ColorRamp:It(d)};else{const o=Tt(d,!0);if(o)h.functionArguments={colorRampName:o};else if(!t.convertColorRampToColormap||"algorithmic"!==d.type&&"multipart"!==d.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null==(r=t.colorRamps)?void 0:r.length)&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),h.functionArguments={colorRamp:t}}else h.functionArguments={Colormap:Ft(d)}}return h.variableName="Raster",h.functionName="Colormap",h.functionArguments.Raster=u,o?new He({rasterFunctionDefinition:h$1(h)}):h}return o?new He({rasterFunctionDefinition:h$1(u)}):u}(e,r);case"class-breaks":return function S(e,t){const r=[],o=[],u=[],d=[],h=1e-4,{pixelType:g,rasterAttributeTable:f}=t,R=null==f?null:f.features,x=C(f);if(x&&R&&Array.isArray(R)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{var o;const u=null==(o=t.symbol)?void 0:o.color;let h;(null==u?void 0:u.a)&&null!=t.minValue&&null!=t.maxValue&&R.forEach((o=>{null!=t.minValue&&null!=t.maxValue&&(h=o.attributes[e.field],(h>=t.minValue&&h<t.maxValue||r===e.classBreakInfos.length-1&&h>=t.minValue)&&d.push([o.attributes[x],u.r,u.g,u.b]))}))}));const r=g?x$1(d,g):d,o=new He;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=r,o.variableName="Raster",t.convertToRFT?new He({rasterFunctionDefinition:h$1(o)}):o}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const g=e.symbol&&e.symbol.color;(null==g?void 0:g.a)?(0===t?r.push(e.minValue,e.maxValue+h):r.push(e.minValue+h,e.maxValue+h),o.push(t),d.push([t,g.r,g.g,g.b])):u.push(e.minValue,e.maxValue)}));const I=g?x$1(d,g):d,T=new He;T.functionName="Remap",T.functionArguments={InputRanges:r,OutputValues:o,NoDataRanges:u},T.variableName="Raster";const P=new He;return P.functionName="Colormap",P.functionArguments={Colormap:I,Raster:T},t.convertToRFT?new He({rasterFunctionDefinition:h$1(P)}):P}(e,r);case"unique-value":return function F(e,t){var r,o;const u=[],{pixelType:d,rasterAttributeTable:h}=t,g=null==h?null:h.features,f=C(h),R=null==(o=null==(r=e.defaultSymbol)?void 0:r.color)?void 0:o.toRgb(),x=e.uniqueValueInfos;if(x)if(g){if(f){const t=new Map;x.forEach((e=>{const r=e.value,o=A(e);null!=r&&(null==o?void 0:o.a)&&t.set(String(r),o.toRgb())}));const r=e.field;r&&g.forEach((({attributes:e})=>{const o=String(e[r]),d=e[f],h=t.get(o);h?u.push([d,...h]):R&&u.push([d,...R])}))}}else for(let P=0;P<x.length;P++){const e=x[P],t=A(e),r=+e.value;if(null==t?void 0:t.a){if(isNaN(r))return null;u.push([r,t.r,t.g,t.b])}}const I=d?x$1(u,d):u,T=new He;return T.functionName="Colormap",T.functionArguments={},T.functionArguments.Colormap=I,T.variableName="Raster",t.convertToRFT?new He({rasterFunctionDefinition:h$1(T)}):T}(e,r);case"raster-colormap":return function N(e,t){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:o}=t,u=o?x$1(r,o):r,d=new He;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=u,t.convertToRFT?new He({rasterFunctionDefinition:h$1(d)}):d}(e,r);case"vector-field":return function T$1(e,r){const o=new He;o.functionName="VectorFieldRenderer";const{dataType:u,bandNames:d}=r,h="vector-uv"===u;let g,f;if(d&&2===d.length){const e=d.map((e=>e.toLowerCase()));g=e.indexOf("magnitude"),f=e.indexOf("direction")}-1!==g&&null!==g||(g=0,f=1);const R="arithmetic"===e.rotationType?1:2,x="flow-from"===e.flowRepresentation?0:1,I=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new t,T={magnitudeBandID:g,directionBandID:f,isUVComponents:h,referenceSystem:R,massFlowAngleRepresentation:x,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Bt[e.style.toLowerCase().replace("-","_")],minimumMagnitude:I.minDataValue,maximumMagnitude:I.maxDataValue,minimumSymbolSize:I.minSize,maximumSymbolSize:I.maxSize};o.functionArguments=T;const P=h$1(o);return r.convertToRFT?He.fromJSON({rasterFunctionDefinition:P}):o}(e,r);case"raster-shaded-relief":return function v(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new He;const o=new He;o.functionName="Hillshade";const u="traditional"===e.hillshadeType?0:1,d="none"===e.scalingType?1:3,h={HillshadeType:u,SlopeType:d,ZFactor:e.zFactor};return 0===u&&(h.Azimuth=e.azimuth,h.Altitude=e.altitude),3===d&&(h.PSPower=e.pixelSizePower,h.PSZFactor=e.pixelSizeFactor),o.functionArguments=h,o.variableName="Raster",e.colorRamp&&(o.functionName="ShadedRelief",r?h.ColorRamp=It(e.colorRamp):h.Colormap=Ft(e.colorRamp)),r?new He({rasterFunctionDefinition:h$1(o)}):o}(e,r);case"flow":throw new Error("Unsupported rendering rule.")}}function b(e){const t=(null==e?void 0:e.Raster)??(null==e?void 0:e.raster);return t&&"esri.layers.support.RasterFunction"===t.declaredClass?b(t.functionArguments):e}const Qt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function x$1(e,t){const r=Ht.has(t)?jt(t):null;return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function C(e){if(null==e)return;const{fields:t}=e,r=null==t?void 0:t.find((e=>(null==e?void 0:e.name)&&"value"===e.name.toLowerCase()));return null==r?void 0:r.name}function A(e){var t,r,o,u,d;return"polygon-3d"===(null==(t=e.symbol)?void 0:t.type)?null==(u=null==(o=null==(r=e.symbol.symbolLayers)?void 0:r.find((e=>"fill"===e.type)))?void 0:o.material)?void 0:u.color:null==(d=e.symbol)?void 0:d.color}function V$1(e){const t=[];return null==e||e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}function D$1(e){const t=[],r=[];return e.forEach((e=>{t.push(e[0]),r.push(Pt([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:r}}let kt=class y extends h{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){var e;return"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new Qe({where:r})),t}get rasterFunction(){var e,t;const r=this.layer;let{rasterFunction:o}=r;const u=r.pixelFilter,d=!r.format||r.format.includes("jpg")||r.format.includes("png");o=this._addResampleRasterFunction(o);const h=null==(e=r.multidimensionalSubset)?void 0:e.areaOfInterest;return h&&(o=function d$2(e,t){const r=new He({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return g$1(r,e)}(o,h)),d&&!u&&"vector-field"!==(null==(t=r.renderer)?void 0:t.type)&&(o=this.combineRendererWithRenderingRule(o)),o}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:r,renderer:o}=t;return e=e||t.rasterFunction,o&&p$e(o)?g$1(y$8(o,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map((({name:e})=>e)),convertColorRampToColormap:t.version<10.6,convertToRFT:!!(null==e?void 0:e.rasterFunctionDefinition),bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,o=this.layer.serviceRasterInfo.pixelSize;let u=new He({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:o}});return u=(null==e?void 0:e.rasterFunctionDefinition)?new He({rasterFunctionDefinition:h$1(u)}):u,g$1(u,e)}};r([o()],kt.prototype,"layer",void 0),r([o({json:{write:!0}})],kt.prototype,"adjustAspectRatio",null),r([u("adjustAspectRatio")],kt.prototype,"writeAdjustAspectRatio",null),r([o({json:{write:!0}})],kt.prototype,"bandIds",null),r([o({json:{write:!0}})],kt.prototype,"compression",void 0),r([o({json:{write:!0}})],kt.prototype,"compressionQuality",null),r([u("compressionQuality")],kt.prototype,"writeCompressionQuality",null),r([o({json:{write:!0}})],kt.prototype,"compressionTolerance",null),r([u("compressionTolerance")],kt.prototype,"writeCompressionTolerance",null),r([o({json:{write:!0}})],kt.prototype,"format",null),r([o({type:String,json:{read:{reader:Be.read},write:{writer:Be.write}}})],kt.prototype,"interpolation",null),r([o({json:{write:!0}})],kt.prototype,"noData",null),r([o({type:String,json:{read:{reader:$e.read},write:{writer:$e.write}}})],kt.prototype,"noDataInterpretation",null),r([o({json:{write:!0}})],kt.prototype,"pixelType",void 0),r([o({json:{write:!0}})],kt.prototype,"lercVersion",void 0),r([u("lercVersion")],kt.prototype,"writeLercVersion",null),r([o({type:Number})],kt.prototype,"version",null),r([o({json:{write:!0}})],kt.prototype,"mosaicRule",null),r([o({json:{write:!0,name:"renderingRule"}})],kt.prototype,"rasterFunction",null),kt=r([d("esri.layers.support.ExportImageServiceParameters")],kt);let Wt=class i extends(g(h)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};r([o({type:f,json:{read:!0}})],Wt.prototype,"fromGeometry",void 0),r([o({type:f,json:{read:!0,write:!0}})],Wt.prototype,"toGeometry",void 0),r([o({json:{write:!0}})],Wt.prototype,"objectIds",void 0),r([o({type:String,json:{write:!0}})],Wt.prototype,"where",void 0),r([o({type:Number,json:{write:!0}})],Wt.prototype,"maxCount",void 0),Wt=r([d("esri.rest.support.FindImagesParameters")],Wt);const Zt=Wt,s=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return r([o({json:{write:!0}})],t.prototype,"make",void 0),r([o({json:{write:!0}})],t.prototype,"model",void 0),r([o({json:{write:!0}})],t.prototype,"focalLength",void 0),r([o({json:{write:!0}})],t.prototype,"pixelSize",void 0),r([o({json:{write:!0}})],t.prototype,"rows",void 0),r([o({json:{write:!0}})],t.prototype,"cols",void 0),t=r([d("esri.rest.support.CameraInfoMixin")],t),t};let Kt=class n extends(s(h)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=null==e?void 0:e.getTime()}};r([o({json:{write:!0}})],Kt.prototype,"id",void 0),r([o({json:{name:"uri",write:!0}})],Kt.prototype,"referenceUri",void 0),r([o({type:Date,json:{write:!0}})],Kt.prototype,"acquisitionDate",void 0),r([u("acquisitionDate")],Kt.prototype,"writeAcquisitionDate",null),r([o({json:{write:!0}})],Kt.prototype,"cameraID",void 0),r([o({type:f,json:{write:!0}})],Kt.prototype,"center",void 0),r([o({type:f,json:{write:!0}})],Kt.prototype,"perspectiveCenter",void 0),r([o({json:{write:!0}})],Kt.prototype,"orientation",void 0),Kt=r([d("esri.rest.support.ImageInspectionInfo")],Kt);const Xt=Kt;let Yt=class p extends h{constructor(){super(...arguments),this.images=null}};r([o({type:[Xt],json:{write:!0}})],Yt.prototype,"images",void 0),Yt=r([d("esri.rest.support.FindImagesResult")],Yt);const ei=Yt;var ti;let ii=ti=class extends h{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new ti(e({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};r([o({type:[String],json:{name:"angleName",write:!0}})],ii.prototype,"angleNames",void 0),r([o({type:f,json:{write:!0}})],ii.prototype,"point",void 0),r([o({type:R,json:{write:!0}})],ii.prototype,"spatialReference",void 0),r([o({type:x,json:{write:!0}})],ii.prototype,"rasterId",void 0),ii=ti=r([d("esri.rest.support.ImageAngleParameters")],ii);const ri=ii;let si=class p2 extends h{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};r([o({type:Number,json:{write:!0}})],si.prototype,"north",void 0),r([o({type:Number,json:{write:!0}})],si.prototype,"up",void 0),r([o({type:R,json:{write:!0}})],si.prototype,"spatialReference",void 0),si=r([d("esri.rest.support.ImageAngleResult")],si);const ni=si,oi=new I({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ai=class p3 extends h{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var li;r([o()],ai.prototype,"type",void 0),r([o({type:oi.apiValues,json:{read:oi.read,write:oi.write}})],ai.prototype,"measureOperation",void 0),r([o({type:Qe,json:{write:!0}})],ai.prototype,"mosaicRule",void 0),r([o({type:f,json:{write:!0}})],ai.prototype,"pixelSize",void 0),r([o({json:{write:!0}})],ai.prototype,"raster",void 0),ai=r([d("esri.rest.support.BaseImageMeasureParameters")],ai);let ui=li=class extends ai{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new li(e({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({types:T,json:{name:"fromGeometry",read:!0,write:!0}})],ui.prototype,"geometry",void 0),r([u("geometry")],ui.prototype,"writeGeometry",null),r([o({type:oi.apiValues,json:{write:oi.write}})],ui.prototype,"measureOperation",null),r([o({json:{read:!0}})],ui.prototype,"is3D",void 0),r([o({type:String,json:{read:P.read,write:P.write}})],ui.prototype,"linearUnit",void 0),r([o({type:String,json:{read:O.read,write:O.write}})],ui.prototype,"areaUnit",void 0),ui=li=r([d("esri.rest.support.ImageAreaParameters")],ui);const pi=ui;let ci=class i2 extends h{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};r([o({type:Number,json:{read:!0,write:!0}})],ci.prototype,"value",void 0),r([o({type:String,json:{read:!0,write:!0}})],ci.prototype,"displayValue",void 0),r([o({type:Number,json:{read:!0,write:!0}})],ci.prototype,"uncertainty",void 0),ci=r([d("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],ci);let mi=class p4 extends ci{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:P.read,write:P.write}})],mi.prototype,"unit",void 0),mi=r([d("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],mi);let di=class n2 extends ci{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:O.read,write:O.write}})],di.prototype,"unit",void 0),di=r([d("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],di);let yi=class l extends ci{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:J.read,write:J.write}})],yi.prototype,"unit",void 0),yi=r([d("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],yi);let hi=class c extends h{constructor(){super(...arguments),this.name=null,this.sensorName=null}};r([o({type:String,json:{read:!0,write:!0}})],hi.prototype,"name",void 0),r([o({type:String,json:{read:!0,write:!0}})],hi.prototype,"sensorName",void 0),hi=r([d("esri.rest.support.BaseImageMeasureResult")],hi);let gi=class a extends hi{constructor(){super(...arguments),this.area=null,this.perimeter=null}};r([o({type:di,json:{read:!0,write:!0}})],gi.prototype,"area",void 0),r([o({type:mi,json:{read:!0,write:!0}})],gi.prototype,"perimeter",void 0),gi=r([d("esri.rest.support.ImageAreaResult")],gi);const fi=gi;let vi=class a2 extends(g(h)){constructor(){super(...arguments),this.outSpatialReference=null}};r([o({type:R,json:{name:"outSR",write:!0}})],vi.prototype,"outSpatialReference",void 0),vi=r([d("esri.rest.support.ImageBoundaryParameters")],vi);const wi=vi;let Ri=class a3 extends h{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?G.fromJSON(e):L.fromJSON(e)}};r([o({type:Number,json:{write:!0}})],Ri.prototype,"area",void 0),r([o({json:{name:"shape",write:!0}})],Ri.prototype,"geometry",void 0),r([q("geometry")],Ri.prototype,"readGeometry",null),Ri=r([d("esri.rest.support.ImageBoundaryResult")],Ri);const bi=Ri;var Si;let xi=Si=class extends ai{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Si(e({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({type:f,json:{read:!0,write:!0}})],xi.prototype,"fromGeometry",void 0),r([u("fromGeometry")],xi.prototype,"writeFromGeometry",null),r([o({type:f,json:{read:!0,write:!0}})],xi.prototype,"toGeometry",void 0),r([o({type:oi.apiValues,json:{write:oi.write}})],xi.prototype,"measureOperation",null),r([o({json:{read:!0}})],xi.prototype,"is3D",void 0),r([o({type:String,json:{read:P.read,write:P.write}})],xi.prototype,"linearUnit",void 0),r([o({type:String,json:{read:J.read,write:J.write}})],xi.prototype,"angularUnit",void 0),xi=Si=r([d("esri.rest.support.ImageDistanceParameters")],xi);const Ii=xi;let Fi=class a4 extends hi{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};r([o({type:mi,json:{read:!0,write:!0}})],Fi.prototype,"distance",void 0),r([o({type:yi,json:{read:!0,write:!0}})],Fi.prototype,"azimuthAngle",void 0),r([o({type:yi,json:{read:!0,write:!0}})],Fi.prototype,"elevationAngle",void 0),Fi=r([d("esri.rest.support.ImageDistanceResult")],Fi);const Di=Fi;let Ti=class j extends(g(h)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=JSON.stringify(e.toJSON()))}};r([o({types:T,json:{read:U,write:!0}})],Ti.prototype,"geometry",void 0),r([u("geometry")],Ti.prototype,"writeGeometry",null),r([o({json:{write:!0}})],Ti.prototype,"objectIds",void 0),r([$(ee,{ignoreUnknown:!1,name:"spatialRel"})],Ti.prototype,"spatialRelationship",void 0),r([o({type:te,json:{name:"time",write:!0}})],Ti.prototype,"timeExtent",void 0),r([o({type:String,json:{write:!0}})],Ti.prototype,"where",void 0),Ti=r([d("esri.rest.support.ImageGPSInfoParameters")],Ti);const ji=Ti;let Pi=class p5 extends(s(h)){constructor(){super(...arguments),this.id=null}};r([o({json:{write:!0}})],Pi.prototype,"id",void 0),Pi=r([d("esri.rest.support.CameraInfo")],Pi);const Ci=Pi;let Ni=class p6 extends h{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=null==e?void 0:e.getTime()}};r([o({json:{write:!0}})],Ni.prototype,"id",void 0),r([o({json:{write:!0}})],Ni.prototype,"name",void 0),r([o({type:Date,json:{write:!0}})],Ni.prototype,"acquisitionDate",void 0),r([u("acquisitionDate")],Ni.prototype,"writeAcquisitionDate",null),r([o({json:{write:!0}})],Ni.prototype,"cameraID",void 0),r([o({type:f,json:{write:!0}})],Ni.prototype,"center",void 0),r([o({json:{write:!0}})],Ni.prototype,"gps",void 0),r([o({json:{write:!0}})],Ni.prototype,"orientation",void 0),Ni=r([d("esri.rest.support.ImageGPSInfo")],Ni);const Oi=Ni;let _i=class m extends h{constructor(){super(...arguments),this.images=null,this.cameras=null}};r([o({type:[Oi],json:{write:!0}})],_i.prototype,"images",void 0),r([o({type:[Ci],json:{write:!0}})],_i.prototype,"cameras",void 0),_i=r([d("esri.rest.support.ImageGPSInfoResult")],_i);const Ai=_i;var Vi;let Mi=Vi=class extends ai{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new Vi(e({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({type:f,json:{read:!0}})],Mi.prototype,"fromGeometry",void 0),r([u("fromGeometry")],Mi.prototype,"writeFromGeometry",null),r([o({type:f,json:{read:!0,write:!0}})],Mi.prototype,"toGeometry",void 0),r([o({type:oi.apiValues,json:{write:oi.write}})],Mi.prototype,"measureOperation",null),r([o({json:{read:!0}})],Mi.prototype,"operationType",void 0),r([o({type:String,json:{read:P.read,write:P.write}})],Mi.prototype,"linearUnit",void 0),Mi=Vi=r([d("esri.rest.support.ImageHeightParameters")],Mi);const Ji=Mi;let Ei=class p7 extends hi{constructor(){super(...arguments),this.height=null}};r([o({type:mi,json:{read:!0,write:!0}})],Ei.prototype,"height",void 0),Ei=r([d("esri.rest.support.ImageHeightResult")],Ei);const qi=Ei;var Gi;let Li=Gi=class extends h{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;(null==t?void 0:t.mosaicMethod)&&(t=Qe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}get renderingRule(){return ie(re.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){ie(re.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}get renderingRules(){return ie(re.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(e){ie(re.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",e)}set rasterFunction(e){let t=e;(null==t?void 0:t.rasterFunction)&&(t=He.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const o=null!=e.start?e.start.getTime():null,u=null!=e.end?e.end.getTime():null;t[r]=null!=o?null!=u?`${o},${u}`:`${o}`:null}}clone(){return new Gi(e({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};r([o({json:{write:!0}})],Li.prototype,"geometry",void 0),r([u("geometry")],Li.prototype,"writeGeometry",null),r([o({type:Qe,json:{write:!0}})],Li.prototype,"mosaicRule",null),r([u("mosaicRule")],Li.prototype,"writeMosaicRule",null),r([o({type:He})],Li.prototype,"renderingRule",null),r([o({type:[He]})],Li.prototype,"renderingRules",null),r([o({type:He,json:{write:!0,name:"renderingRule"}})],Li.prototype,"rasterFunction",null),r([u("rasterFunction")],Li.prototype,"writeRasterFunction",null),r([o({type:[He],json:{write:!0,name:"renderingRules"}})],Li.prototype,"rasterFunctions",void 0),r([u("rasterFunctions")],Li.prototype,"writeRasterFunctions",null),r([o({type:f,json:{write:!0}})],Li.prototype,"pixelSize",void 0),r([u("pixelSize")],Li.prototype,"writePixelSize",null),r([o({type:Boolean,json:{write:!0}})],Li.prototype,"returnGeometry",void 0),r([o({type:Boolean,json:{write:!0}})],Li.prototype,"returnCatalogItems",void 0),r([o({type:Boolean,json:{write:!0}})],Li.prototype,"returnPixelValues",void 0),r([o({type:Number,json:{write:!0}})],Li.prototype,"maxItemCount",void 0),r([o({type:te,json:{write:{target:"time"}}})],Li.prototype,"timeExtent",void 0),r([u("timeExtent")],Li.prototype,"writeTimeExtent",null),r([o({json:{write:!0}})],Li.prototype,"raster",void 0),r([o({json:{write:!0}})],Li.prototype,"viewId",void 0),r([o({type:Boolean,json:{write:!0}})],Li.prototype,"processAsMultidimensional",void 0),Li=Gi=r([d("esri.rest.support.ImageIdentifyParameters")],Li);const zi=Li;let Ui=class p8 extends h{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};r([o({json:{write:!0}})],Ui.prototype,"catalogItemVisibilities",void 0),r([o({type:se,json:{write:!0}})],Ui.prototype,"catalogItems",void 0),r([o({type:f,json:{write:!0}})],Ui.prototype,"location",void 0),r([o({json:{write:!0}})],Ui.prototype,"name",void 0),r([o({json:{write:!0}})],Ui.prototype,"objectId",void 0),r([o({json:{write:!0}})],Ui.prototype,"processedValues",void 0),r([o({json:{write:!0}})],Ui.prototype,"properties",void 0),r([o({json:{write:!0}})],Ui.prototype,"value",void 0),Ui=r([d("esri.rest.support.ImageIdentifyResult")],Ui);const Hi=Ui;var Bi;let $i=Bi=class extends h{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){var e;return new Bi({geometries:(null==(e=this.geometries)?void 0:e.map((e=>e.clone())))??[],rasterId:this.rasterId})}};r([o({type:[f],json:{write:!0}})],$i.prototype,"geometries",void 0),r([u("geometries")],$i.prototype,"writeGeometry",null),r([o({type:x,json:{write:!0}})],$i.prototype,"rasterId",void 0),$i=Bi=r([d("esri.rest.support.ImagePixelLocationParameters")],$i);const Qi=$i;let ki=class extends h{constructor(){super(...arguments),this.geometries=null}};r([o({json:{write:!0}})],ki.prototype,"geometries",void 0),ki=r([d("esri.rest.support.ImagePixelLocationResult")],ki);const Wi=ki;var Zi;let Ki=Zi=class extends ai{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new Zi(e({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({types:T,json:{name:"fromGeometry",read:U}})],Ki.prototype,"geometry",void 0),r([u("geometry")],Ki.prototype,"writeGeometry",null),r([o({type:oi.apiValues,json:{read:oi.read,write:oi.write}})],Ki.prototype,"measureOperation",null),r([o({json:{read:!0}})],Ki.prototype,"is3D",void 0),Ki=Zi=r([d("esri.rest.support.ImagePointParameters")],Ki);const Xi=Ki;let Yi=class p9 extends hi{constructor(){super(...arguments),this.point=null}};r([o({type:f,json:{name:"point.value",read:!0,write:!0}})],Yi.prototype,"point",void 0),Yi=r([d("esri.rest.support.ImagePointResult")],Yi);const er=Yi;var tr;let ir=tr=class extends h{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}set locations(e){if(null==e?void 0:e.length){const t=new ne({spatialReference:e[0].spatialReference,points:e.map((({x:e,y:t})=>[e,t]))});this._set("locations",e),this.geometry=t}}clone(){return new tr(e({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};r([o({types:T,json:{read:U}})],ir.prototype,"geometry",void 0),r([u("geometry")],ir.prototype,"writeGeometry",null),r([o()],ir.prototype,"locations",null),r([o({type:String,json:{type:Be.jsonValues,read:Be.read,write:Be.write}})],ir.prototype,"interpolation",void 0),r([o({type:Qe,json:{write:!0}})],ir.prototype,"mosaicRule",void 0),r([o({type:[String],json:{write:!0}})],ir.prototype,"outFields",void 0),r([o({type:f,json:{write:!0}})],ir.prototype,"pixelSize",void 0),r([o({type:String,json:{write:!0}})],ir.prototype,"raster",void 0),r([o({type:Boolean,json:{write:!0}})],ir.prototype,"returnFirstValueOnly",void 0),r([o({type:Number,json:{write:!0}})],ir.prototype,"sampleDistance",void 0),r([o({type:Number,json:{write:!0}})],ir.prototype,"sampleCount",void 0),r([o({type:Number,json:{write:!0}})],ir.prototype,"sliceId",void 0),r([o({type:te,json:{read:{source:"time"},write:{target:"time"}}})],ir.prototype,"timeExtent",void 0),ir=tr=r([d("esri.rest.support.ImageSampleParameters")],ir);const rr=ir;let sr=class i3 extends h{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};r([o({json:{write:!0}})],sr.prototype,"attributes",void 0),r([o({type:f,json:{write:!0}})],sr.prototype,"location",void 0),r([o({json:{write:!0}})],sr.prototype,"locationId",void 0),r([o({json:{write:!0}})],sr.prototype,"rasterId",void 0),r([o({json:{write:!0}})],sr.prototype,"resolution",void 0),r([o({json:{write:!0}})],sr.prototype,"pixelValue",void 0),sr=r([d("esri.rest.support.ImageSample")],sr);const nr=sr;let or=class p10 extends h{constructor(){super(...arguments),this.samples=null}};r([o({type:[nr],json:{write:!0}})],or.prototype,"samples",void 0),or=r([d("esri.rest.support.ImageSampleResult")],or);const ar=or;let lr=class l2 extends(g(h)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,r){t.geometries=(null==e?void 0:e.length)?{geometryType:M(e[0]),geometries:e.map((e=>({...e.toJSON(),spatialReference:void 0})))}:null}};r([o({types:[T]})],lr.prototype,"geometries",void 0),r([u("geometries")],lr.prototype,"writeGeometries",null),r([o({type:[x],json:{write:!0}})],lr.prototype,"rasterIds",void 0),r([o({type:R,json:{name:"outSR",write:!0}})],lr.prototype,"outSpatialReference",void 0),lr=r([d("esri.rest.support.ImageToMapMultirayParameters")],lr);const ur=lr;let pr=class n3 extends(g(h)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]={...e.toJSON(),spatialReference:void 0})}};r([o({types:T,json:{read:U,write:!0}})],pr.prototype,"geometry",void 0),r([u("geometry")],pr.prototype,"writeGeometry",null),r([o({json:{write:!0}})],pr.prototype,"rasterId",void 0),r([o({type:R,json:{name:"outSR",write:!0}})],pr.prototype,"outSpatialReference",void 0),r([o({json:{name:"options.DOff",write:!0}})],pr.prototype,"depthOffset",void 0),r([o({json:{name:"options.Adjust",write:!0}})],pr.prototype,"adjust",void 0),pr=r([d("esri.rest.support.ImageToMapParameters")],pr);const cr=pr;let mr=class p11 extends(g(h)){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};r([o({type:String,json:{name:"uri",write:!0}})],mr.prototype,"referenceUri",void 0),r([o({type:Number,json:{write:!0}})],mr.prototype,"rasterId",void 0),mr=r([d("esri.rest.support.ImageUrlParameters")],mr);const dr=mr;let yr=class extends h{constructor(){super(...arguments),this.url=null}};r([o({json:{name:"imageURL",write:!0}})],yr.prototype,"url",void 0),yr=r([d("esri.rest.support.ImageUrlResult")],yr);const hr=yr;let gr=class extends(g(h)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=JSON.stringify(e))}};r([o({types:T,json:{read:U,write:!0}})],gr.prototype,"geometry",void 0),r([u("geometry")],gr.prototype,"writeGeometry",null),r([o({json:{write:!0}})],gr.prototype,"rasterId",void 0),r([o({json:{name:"options.VisibleOnly",write:!0}})],gr.prototype,"visibleOnly",void 0),gr=r([d("esri.rest.support.MapToImageParameters")],gr);const fr=gr;let vr=class m2 extends h{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),f.fromJSON(e)}};r([o({types:T,json:{name:"Shape",read:U,write:!0}})],vr.prototype,"geometry",void 0),r([o({json:{name:"Length",write:!0}})],vr.prototype,"length",void 0),r([o({json:{name:"Area",write:!0}})],vr.prototype,"area",void 0),r([o({json:{name:"Center",write:!0}})],vr.prototype,"center",void 0),r([q("center")],vr.prototype,"readCenter",null),vr=r([d("esri.rest.support.MeasureAreaFromImageResult")],vr);const wr=vr;var Rr;let br=Rr=class extends h{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]={...e.toJSON(),spatialReference:void 0})}clone(){const t=e({geometry:this.geometry,rasterId:this.rasterId});return new Rr(t)}};r([o({types:T,json:{name:"fromGeometry",read:U,write:!0}})],br.prototype,"geometry",void 0),r([u("geometry")],br.prototype,"writeGeometry",null),r([o({json:{write:!0}})],br.prototype,"rasterId",void 0),br=Rr=r([d("esri.rest.support.MeasureFromImageParameters")],br);const Sr=br;let xr=class extends h{constructor(){super(...arguments),this.geometry=null,this.length=null}};r([o({types:T,json:{name:"Shape",read:U,write:!0}})],xr.prototype,"geometry",void 0),r([o({json:{name:"Length",write:!0}})],xr.prototype,"length",void 0),xr=r([d("esri.rest.support.MeasureLengthFromImageResult")],xr);const Ir=xr;function H(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null==t.end||r.includes(t.end)||r.push(t.end),e.time=r.join(",")}}async function B(e,t,r){t=oe(ke,t);const o=ae(e),u=t.geometry?[t.geometry]:[],d=await qt(u),h=t.toJSON();H(h);const g=null==d?void 0:d[0];null!=g&&(h.geometry=rt(g));const f=le({...o.query,f:"json",...h});return ue(f,r)}async function X(e,t,r){t=oe(zi,t);const o=ae(e),u=t.geometry?[t.geometry]:[];return qt(u).then((e=>{const u=t.toJSON(),d=null==e?void 0:e[0];null!=d&&(u.geometry=JSON.stringify(rt(d)));const h=le({...o.query,f:"json",...u}),g=ue(h,r);return pe(o.path+"/identify",g)})).then((e=>Hi.fromJSON(e.data)))}async function Z(e,t,r,o){const u=ae(e),d=await qt(r),h=t.toJSON();null!=d[0]&&(h.fromGeometry=JSON.stringify(rt(d[0]))),null!=d[1]&&(h.toGeometry=JSON.stringify(rt(d[1])));const g=le({...u.query,f:"json",...h}),f=ue(g,o),{data:R}=await pe(u.path+"/measure",f);return R}async function et(e,t,r){t=oe(Sr,t);const o=ae(e),u=t.toJSON(),d=le({...o.query,f:"json",...u}),h=ue(d,r),{data:g}=await pe(o.path+"/measureFromImage",h);return g}function rt(e){var t;const r=e.toJSON();return(null==(t=e.spatialReference)?void 0:t.imageCoordinateSystem)&&(r.spatialReference=ot(e.spatialReference)),r}function ot(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function at(e,t){if(!e.imageCoordinateSystem)return ce(e);const r=ot(e),{icsid:o,icsns:u}=r;return null==o||null!=u&&!(null==t?void 0:t.toLowerCase().includes("/"+u.toLowerCase()+"/"))?JSON.stringify(r):`0:${o}`}const Fr=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Dr=be(Se,{min:0,max:255});const Ce=t=>{let h=class extends t{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new kt({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?Qe.fromJSON(t):null}get fieldsIndex(){return this.fields?new he(this.fields):null}set format(e){e&&Fr.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;(null==t?void 0:t.mosaicMethod)&&(t=Qe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?Qe.fromJSON(r):this._isMosaicRuleSupported(t)?Qe.fromJSON(t):null}writeMosaicRule(e,t,r){let o=this.mosaicRule;const u=this.definitionExpression;o?u&&u!==o.where&&(o=o.clone(),o.where=u):u&&(o=new Qe({where:u})),this._isValidCustomizedMosaicRule(o)&&(t[r]=o.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Dr(e))}readObjectIdField(e,t){if(!e){const r=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=null==r?void 0:r.name}return e}get parsedUrl(){return ge(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){var o,u;const d=null==(u=null==(o=null==t?void 0:t.layerDefinition)?void 0:o.drawingInfo)?void 0:u.renderer,h=Ye(d,r);return null==h?null:("vector-field"===h.type&&t.symbolTileSize&&!d.symbolTileSize&&(h.symbolTileSize=t.symbolTileSize),p$e(h)||re.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),h)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var t;const r=this._rasterAttributeTableFieldPrefix,o=new me({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),u=new me({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new me({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let h=this.fields?e(this.fields):[];h.push(u),(null==(t=this.capabilities)?void 0:t.operations.supportsQuery)&&this.fields&&this.fields.length>0&&h.push(o),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&h.push(d),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{h.push(new me({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(h.push(new me({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),h.push(new me({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:g}=this.rasterInfo??{};if(null!=g){const t=g.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const o=e(t);return o.name=r+t.name,o}));h=h.concat(t)}return h}get renderingRule(){return ie(re.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){ie(re.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;(null==t?void 0:t.rasterFunction)&&(t=He.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||(null==r?void 0:r.length)&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?He.fromJSON({rasterFunctionDefinition:t.renderingRule}):He.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?R.fromJSON(r):null}readPixelType(e){return Xe.fromJSON(e)||e}writePixelType(e,t,r){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[r]=Xe.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;const{renderer:o,symbolizer:u,pixelFilter:d,bandIds:h}=this;if(!this._isPicture()&&o&&u&&!d){const d=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(o.toJSON()),g=this._rasterJobHandler.instance;if(g){d&&(u.bind(),await g.updateSymbolizer(u,t),this._cachedRendererJson=o.toJSON());const f=await g.symbolize({bandIds:h,...e},t);r={extent:e.extent,pixelBlock:f}}else r={extent:e.extent,pixelBlock:u.symbolize({bandIds:h,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsComputeAngles)throw new fe("imagery-layer:compute-angles","this operation is not supported on the input image service");return async function D(e,t,r){var o,u,d;const h=(t=oe(ri,t)).toJSON();null!=h.angleName&&(h.angleName=h.angleName.join(",")),(null==(u=null==(o=null==t?void 0:t.point)?void 0:o.spatialReference)?void 0:u.imageCoordinateSystem)&&(h.point.spatialReference=ot(t.point.spatialReference)),(null==(d=null==t?void 0:t.spatialReference)?void 0:d.imageCoordinateSystem)&&(h.spatialReference=at(t.spatialReference));const g=ae(e),f=le({...g.query,f:"json",...h}),x=ue(f,r),{data:I}=await pe(`${g.path}/computeAngles`,x);return I.spatialReference=I.spatialReference?null!=I.spatialReference.geodataXform?new R({wkid:0,imageCoordinateSystem:I.spatialReference}):R.fromJSON(I.spatialReference):null,"NaN"===I.north&&(I.north=null),"NaN"===I.up&&(I.up=null),new ni(I)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsComputePixelLocation)throw new fe("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function k(e,t,r){var o;const u=(t=oe(Qi,t)).toJSON(),{geometries:d}=t;if(d)for(let x=0;x<d.length;x++)(null==(o=d[x].spatialReference)?void 0:o.imageCoordinateSystem)&&(u.geometries.geometries[x].spatialReference=ot(d[x].spatialReference));const h=ae(e),g=le({...h.query,f:"json",...u}),f=ue(g,r),{data:R}=await pe(`${h.path}/computePixelLocation`,f);return Wi.fromJSON(R)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(t,r){if(!(await this._fetchCapabilities(null==r?void 0:r.signal)).operations.supportsComputeHistograms)throw new fe("imagery-layer:compute-histograms","this operation is not supported on the input image service");return t=e(t),this._applyMosaicAndRenderingRules(t),async function E(e,t,r){const o=await B(e,t,r),u=ae(e),{data:d}=await pe(`${u.path}/computeHistograms`,o);return{histograms:d.histograms}}(this.url,t,this._getRequestOptions(r))}async computeStatisticsHistograms(t,r){if(!(await this._fetchCapabilities(null==r?void 0:r.signal)).operations.supportsComputeStatisticsHistograms)throw new fe("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return t=e(t),this._applyMosaicAndRenderingRules(t),async function z(e,t,r){const o=await B(e,t,r),u=ae(e),{data:d}=await pe(`${u.path}/computeStatisticsHistograms`,o),{statistics:h}=d;return(null==h?void 0:h.length)&&h.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:h,histograms:d.histograms}}(this.url,t,this._getRequestOptions(r))}async measureHeight(t,r){const o=await this._fetchCapabilities(null==r?void 0:r.signal);if(!("base-and-top"===t.operationType?o.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===t.operationType?o.mensuration.supportsHeightFromBaseAndTopShadow:o.mensuration.supportsHeightFromTopAndTopShadow))throw new fe("imagery-layer:measure-height","this operation is not supported on the input image service");return t=e(t),this._applyMosaicAndRenderingRules(t),async function K(e,t,r){t=oe(Ji,t);const o=await Z(e,t,[t.fromGeometry,t.toGeometry],r);return qi.fromJSON(o)}(this.url,t,this._getRequestOptions(r))}async measureAreaAndPerimeter(t,r){const o=await this._fetchCapabilities(null==r?void 0:r.signal);if(!o.mensuration.supportsAreaAndPerimeter||t.is3D&&!o.mensuration.supports3D)throw new fe("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return t=e(t),this._applyMosaicAndRenderingRules(t),async function Q(e,t,r){t=oe(pi,t);const o=await Z(e,t,[t.geometry],r);return fi.fromJSON(o)}(this.url,t,this._getRequestOptions(r))}async measureDistanceAndAngle(t,r){const o=await this._fetchCapabilities(null==r?void 0:r.signal);if(!o.mensuration.supportsDistanceAndAngle||t.is3D&&!o.mensuration.supports3D)throw new fe("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return t=e(t),this._applyMosaicAndRenderingRules(t),async function Y(e,t,r){t=oe(Ii,t);const o=await Z(e,t,[t.fromGeometry,t.toGeometry],r);return Di.fromJSON(o)}(this.url,t,this._getRequestOptions(r))}async measurePointOrCentroid(t,r){const o=await this._fetchCapabilities(null==r?void 0:r.signal);if(!o.mensuration.supportsPointOrCentroid||t.is3D&&!o.mensuration.supports3D)throw new fe("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return t=e(t),this._applyMosaicAndRenderingRules(t),async function W(e,t,r){t=oe(Xi,t);const o=await Z(e,t,[t.geometry],r);return er.fromJSON(o)}(this.url,t,this._getRequestOptions(r))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new fe("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new fe("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function _(e,t,r){const o=await et(e,t,r);return Ir.fromJSON(o)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new fe("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new fe("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function tt(e,t,r){const o=await et(e,t,r);return wr.fromJSON(o)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}async fetchImage(e,t,r,o={}){if(null==e||null==t||null==r)throw new fe("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:o.signal});e&&(this.rasterInfo=e)}const u=this.getExportImageServiceParameters(e,t,r,o.timeExtent);if(null==u){if(o.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,o.returnImageBitmap?{imageBitmap:await Et(e,`${Ce2(this.parsedUrl)}/exportImage`,o.signal)}:{imageOrCanvasElement:e}}const{bandIds:u,rasterInfo:d}=this,h=((null==u?void 0:u.length)||d.bandCount)??0,g=t*r,f=d.pixelType,R=[];for(let e=0;e<h;e++)R.push(Ot.createEmptyBand(f,g));return{pixelData:{pixelBlock:new Ot({width:t,height:r,pixels:R,mask:new Uint8Array(g),pixelType:f}),extent:e}}}const d=!!o.requestAsImageElement&&!this.pixelFilter,h=d&&!!o.returnImageBitmap,g={imageServiceParameters:u,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:d,returnImageBitmap:h,signal:o.signal};return this._requestArrayBuffer(g)}fetchKeyProperties(e){return pe(Ce2(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new fe("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):pe(Ce2(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.rasterFunction:null})}).then((e=>se.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function n4(e,t,r){var o,u;const d=ae(e),h=le({...null==d?void 0:d.query,f:"json"}),g=ue(h,r),R=`${null==d?void 0:d.path}/${t}/info`,x=pe(`${R}`,g),I=pe(`${R}/keyProperties`,g),T=await Promise.allSettled([x,I]),P="fulfilled"===T[0].status?T[0].value.data:null,O="fulfilled"===T[1].status?T[1].value.data:null;let M=null;(null==(o=P.statistics)?void 0:o.length)&&(M=P.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const J=L.fromJSON(P.extent),q=Math.ceil(J.width/P.pixelSizeX-.1),G=Math.ceil(J.height/P.pixelSizeY-.1),U=J.spatialReference,$=new f({x:P.pixelSizeX,y:P.pixelSizeY,spatialReference:U}),ee=(null==(u=P.histograms)?void 0:u.length)?P.histograms:null,te=new Ct({origin:P.origin,blockWidth:P.blockWidth,blockHeight:P.blockHeight,firstPyramidLevel:P.firstPyramidLevel,maximumPyramidLevel:P.maxPyramidLevel});return new Nt({width:q,height:G,bandCount:P.bandCount,extent:J,spatialReference:U,pixelSize:$,pixelType:P.pixelType.toLowerCase(),statistics:M,histograms:ee,keyProperties:O,storageInfo:te})}(Ce2(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){var r,o,u,d,h;const{data:g}=await pe(Ce2(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),f=null==g?void 0:g.ics;if(!f)return;let x=null;try{x=(await pe(Ce2(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(null==x?void 0:x.spatialReference))return{ics:f,icsToPixelTransform:null,icsExtent:null,northDirection:null};const I=this.version>=10.7?pe(Ce2(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},T=x.spatialReference,P={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[x]}),inSR:ce(T),outSR:"0:"+e},O=pe(Ce2(this.parsedUrl)+"/project",{query:this._getQueryParams(P),...t}).then((e=>e.data)).catch((()=>({}))),M=(x.xmin+x.xmax)/2,J=(x.ymax-x.ymin)/6,q=x.ymin+J,G=[];for(let R=0;R<5;R++)G.push({x:M,y:q+J*R});const U={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:G}),inSR:ce(T),outSR:"0:"+e},$=pe(Ce2(this.parsedUrl)+"/project",{query:this._getQueryParams(U),...t}).then((e=>e.data)).catch((()=>({}))),ee=await Promise.all([I,O,$]);let te=ee[0].ipxf;if(null==te){const e=null==(r=f.geodataXform)?void 0:r.xf_0;"topup"===(null==(o=null==e?void 0:e.name)?void 0:o.toLowerCase())&&6===(null==(u=null==e?void 0:e.coefficients)?void 0:u.length)&&(te={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const ie=L.fromJSON(null==(h=null==(d=ee[1])?void 0:d.geometries)?void 0:h[0]);ie&&(ie.spatialReference=new R({wkid:0,imageCoordinateSystem:f}));const re=ee[2].geometries?ee[2].geometries.filter((e=>null!=(null==e?void 0:e.x)&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],se=re.length;if(se<3)return{ics:f,icsToPixelTransform:te,icsExtent:ie,northDirection:null};let ne=0,oe=0,ae=0,le=0;for(let R=0;R<se;R++)ne+=re[R].x,oe+=re[R].y,ae+=re[R].x*re[R].x,le+=re[R].x*re[R].y;const ue=(se*le-ne*oe)/(se*ae-ne*ne);let me=0;const de=re[4].x>re[0].x,ye=re[4].y>re[0].y;return ue===1/0?me=ye?90:270:0===ue?me=de?0:180:ue>0?me=de?180*Math.atan(ue)/Math.PI:180*Math.atan(ue)/Math.PI+180:ue<0&&(me=ye?180+180*Math.atan(ue)/Math.PI:360+180*Math.atan(ue)/Math.PI),{ics:f,icsToPixelTransform:te,icsExtent:ie,northDirection:me}}async generateRasterInfo(e,t){var r;if(e=oe(He,e),this.serviceRasterInfo&&(!e||"none"===(null==(r=e.functionName)?void 0:r.toLowerCase())||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const o=function Pe(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.slice(18,-1)));return r?r.join("/"):null}(e);if(!o)throw new fe("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[o])return this._functionRasterInfos[o];const u={...t,query:this._getQueryParams()},d=lt(Ce2(this.parsedUrl),e,u);this._functionRasterInfos[o]=d;try{return await d}catch(h){throw this._functionRasterInfos[o]=null,h}}getExportImageServiceParameters(e,t,r,o){var u;const d=at((e=e.clone().shiftCentralMeridian()).spatialReference,Ce2(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const h=this.exportImageServiceParameters.toJSON(),{bandIds:g,noData:f}=h;let{renderingRule:R}=h;const x=null==(u=this.rasterFunction)?void 0:u.rasterFunctionDefinition,I=!this.renderer||"raster-stretch"===this.renderer.type;if((null==g?void 0:g.length)&&this._hasRasterFunction(this.rasterFunction)&&!x&&I){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:g}};if("Stretch"===R.rasterFunction)e.rasterFunctionArguments.Raster=R.rasterFunctionArguments.Raster,R.rasterFunctionArguments.Raster=e;else if("Colormap"===R.rasterFunction){const t=R.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,R.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=R,R=e;h.bandIds=void 0}else h.bandIds=null==g?void 0:g.join(",");Array.isArray(f)&&f.length>0&&(h.noData=f.join(","));const T=this._processMultidimensionalIntersection(null,o,this.exportImageServiceParameters.mosaicRule);if(T.isOutSide)return null;h.mosaicRule=null!=T.mosaicRule?JSON.stringify(T.mosaicRule):null,o=T.timeExtent,h.renderingRule=this._getRenderingRuleString(He.fromJSON(R));const P={};if(null!=o){const{start:e,end:t}=o.toJSON();e&&t&&e===t?P.time=""+e:null==e&&null==t||(P.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:d,imageSR:d,size:t+","+r,...h,...P}}async getSamples(t,r){const o=await this._fetchCapabilities(null==r?void 0:r.signal);if(!(null==o?void 0:o.operations.supportsGetSamples))throw new fe("imagery-layer:get-samples","getSamples operation is not supported on the input image service");t=e(t);const{raster:u}=this;return u&&null==t.raster&&(t.raster=u),async function V(e,t,r){var o,u;const d=(t=oe(rr,t)).toJSON();H(d),(null==(o=d.outFields)?void 0:o.length)&&(d.outFields=d.outFields.join(","));const h=await qt(t.geometry),g=null==h?void 0:h[0];null!=g&&(d.geometry=rt(g));const f=ae(e),R=le({...f.query,f:"json",...d}),x=ue(R,r),{data:I}=await pe(`${f.path}/getSamples`,x),T=null==(u=null==I?void 0:I.samples)?void 0:u.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return ar.fromJSON({samples:T})}(this.url,t,this._getRequestOptions(r))}async identify(t,r){var o;if(!(await this._fetchCapabilities(null==r?void 0:r.signal)).operations.supportsIdentify)throw new fe("imagery-layer:identify","identify operation is not supported on the input image service");t=e(t),this.version<10.91&&"extent"===(null==(o=t.geometry)?void 0:o.type)&&(t.geometry=G.fromExtent(t.geometry));const u=this._processMultidimensionalIntersection(t.geometry,t.timeExtent,t.mosaicRule||this.mosaicRule);if(u.isOutSide)throw new fe("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");t.timeExtent=u.timeExtent,t.mosaicRule=u.mosaicRule;const{raster:d,rasterFunction:h}=this;return h&&null==t.rasterFunction&&(t.rasterFunction=h),d&&null==t.raster&&(t.raster=d),X(this.url,t,this._getRequestOptions(r))}async imageToMap(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsImageToMap)throw new fe("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function mt(e,t,r){const o=(t=oe(cr,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(o.geometry=rt(t.geometry)),t.depthOffset&&t.adjust||delete o.options;const u=ae(e),d=le({...u.query,f:"json",...o}),h=ue(d,r),{data:g}=await pe(`${u.path}/imageToMap`,h);return U(g)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new fe("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function it(e,t,r){var o;const u=(t=oe(ur,t)).toJSON();(null==(o=t.rasterIds)?void 0:o.length)&&(u.rasterIds=t.rasterIds.join(","));const d=ae(e),h=le({...d.query,f:"json",...u}),g=ue(h,r),{data:f}=await pe(`${d.path}/imageToMapMultiray`,g);return U(f)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsMapToImage)throw new fe("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function pt(e,t,r){var o;const u=(t=oe(fr,t)).toJSON(),d=await qt(t.geometry),h=null==d?void 0:d[0];null!=h&&(u.geometry=rt(h)),t.visibleOnly||delete u.options;const g=(null==h?void 0:h.spatialReference)??(null==(o=t.geometry)?void 0:o.spatialReference);g&&(u.inSR=at(g));const f=ae(e),R=le({...f.query,f:"json",...u}),x=ue(R,r),{data:I}=await pe(`${f.path}/mapToImage`,x);return U(I)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsFindImages)throw new fe("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function ct(e,t,r){var o;const u=(t=oe(Zt,t)).toJSON(),d=await qt([t.fromGeometry,t.toGeometry]);null!=d[0]&&(u.fromGeometry=rt(d[0]),d[0].spatialReference&&(u.inSR=at(d[0].spatialReference))),null!=d[1]&&(u.toGeometry=rt(d[1])),(null==(o=t.objectIds)?void 0:o.length)&&(u.objectIds=u.objectIds.join(","));const h=ae(e),g=le({...h.query,f:"json",...u}),f=ue(g,r),{data:R}=await pe(`${h.path}/find`,f);return ei.fromJSON(R)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsGetImageUrl)throw new fe("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function ut(e,t,r){const o=(t=oe(dr,t)).toJSON(),u=ae(e),d=le({...u.query,f:"json",...o}),h=ue(d,r),{data:g}=await pe(`${u.path}/getImageUrl`,h);return hr.fromJSON(g)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new ve({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsQueryBoundary)throw new fe("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},async function st(e,t,r){t=oe(wi,t);const o=ae(e),u=t.toJSON();t.outSpatialReference&&(u.outSR=at(t.outSpatialReference));const d=le({...o.query,f:"json",...u}),h=ue(d,r),{data:g}=await pe(o.path+"/queryBoundary",h);return bi.fromJSON(g)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Gt(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Lt(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new fe("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},async function nt(e,t,r){var o,u;const d=(t=oe(ji,t)).toJSON();H(d),(null==(o=d.objectIds)?void 0:o.length)&&(d.objectIds=d.objectIds.join(",")),d.geometry||d.objectIds||d.time||d.where||(d.where="1=1");const h=await qt(t.geometry),g=null==h?void 0:h[0];null!=g&&(d.geometry=rt(g));const f=(null==g?void 0:g.spatialReference)??(null==(u=t.geometry)?void 0:u.spatialReference);f&&(d.inSR=at(f));const R=ae(e),x=le({...R.query,f:"json",...d}),I=ue(x,r),{data:T}=await pe(`${R.path}/queryGPSInfo`,I);return Ai.fromJSON(T)}(Ce2(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),zt(this.url,e,t)}async queryVisibleRasters(e,t){var r,o,u,d;if(!e)throw new fe("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:h,returnDomainValues:g,returnTopmostRaster:f,showNoDataRecords:R}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let x=!1,I=null,T=null;const P="raster.servicepixelvalue",O=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(x=e.outFields.some((e=>!e.toLowerCase().includes(P))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(P)&&e.length>24)).map((e=>{const t=e.slice(25);return[this._updateRenderingRulesFunctionName(t,O),t]}));I=t.map((e=>new He({functionName:e[0]}))),T=t.map((e=>e[1]));const{rasterFunction:r}=this;0===I.length?(null==r?void 0:r.functionName)?(I.push(r),T.push(r.functionName)):I=null:(null==r?void 0:r.functionName)&&!I.some((e=>e.functionName===r.functionName))&&(I.push(r),T.push(r.functionName))}const M=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:J}=this;let q=e.timeExtent||this.timeExtent;if(J){const{isOutside:t,intersection:o}=dt(J,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:null==(r=this.exportImageServiceParameters.mosaicRule)?void 0:r.multidimensionalDefinition});if(t)throw new fe("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=(null==o?void 0:o.timeExtent)&&(q=o.timeExtent)}const L=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,q);let U=e.geometry;this.version<10.91&&"extent"===(null==U?void 0:U.type)&&(U=G.fromExtent(U));const $=this._getQueryParams({geometry:U,timeExtent:q,mosaicRule:L,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:I,pixelSize:h,returnCatalogItems:x,returnGeometry:M,raster:this.raster,maxItemCount:f?1:null});delete $.f;const ee=new zi($);try{await this._generateRasterInfo(this.rasterFunction);const r=await X(this.url,ee,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}),h=e.outFields,f=null!=r.value&&r.value.toLowerCase().includes("nodata");if(!x||M||!(null==(o=null==r?void 0:r.catalogItems)?void 0:o.features.length)||!R&&f)return this._processVisibleRastersResponse(r,{returnDomainValues:g,templateRRFunctionNames:T,showNoDataRecords:R,templateFields:h});const I=this.objectIdField||"ObjectId",P=(null==(u=r.catalogItems)?void 0:u.features)??[],O=P.map((e=>{var t;return null==(t=e.attributes)?void 0:t[I]})),J=new ve({objectIds:O,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[I]}),q=await this.queryRasters(J);return(null==(d=null==q?void 0:q.features)?void 0:d.length)&&q.features.forEach((t=>{P.forEach((r=>{r.attributes[I]===t.attributes[I]&&(r.geometry=new G(t.geometry),null!=e.outSpatialReference&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:g,templateRRFunctionNames:T,showNoDataRecords:R,templateFields:h})}catch{throw new fe("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=pe(Ce2(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),o=pe(Ce2(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=await Promise.all([r,o]);return u[0]&&u[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):_t(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return yt(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):ht(Ce2(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),gt(e,t),e))),o=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([r,o,u]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),re.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([we((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){var r;const o=this.timeInfo,{multidimensionalInfo:u}=this.serviceRasterInfo;if(null==e||null==u||null==t||null==(null==o?void 0:o.startField))return e;const{startField:d}=o,h=u.variables.some((e=>e.dimensions.some((e=>e.name===d))))?d:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=null==(r=e.multidimensionalDefinition)?void 0:r.filter((e=>e.dimensionName!==h)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const g=e.multidimensionalDefinition.filter((e=>e.dimensionName===h)),f=null!=t.start?t.start.getTime():null,R=null!=t.end?t.end.getTime():null,x=null==f||null==R||f===R,I=x?[f||R]:[[f,R]],T=this.version>=10.8;if(g.length)g.forEach((e=>{e.dimensionName===h&&(T?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=x,e.values=I))}));else if(!T){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=h,e.isSlice=x,e.values=I})):e.multidimensionalDefinition.push(new ft({variableName:"",dimensionName:h,isSlice:x,values:I}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(null==t?void 0:t.signal)).operations.supportsQuery)throw new fe("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?oe(ve,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new xt;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:r}=this;return"unique-value"===e.type&&this._hasRasterFunction(r)&&1===(null==t?void 0:t.bandCount)&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&vt(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:o}=await pe(Ce2(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,o&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new fe("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),o=e.currentVersion>=10.71&&e.hasMultidimensions&&!((null==(t=e.fields)?void 0:t.length)>1);return r||o}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:r}=e,o="resample"===(null==t?void 0:t.toLowerCase()),u=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return o&&(7===u||10===u)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var t,r;const o=this._isPicture(),{rasterInfo:u}=this;if(!o&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&u.bandCount>=3){const e=wt(u);!e||3===u.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=Rt(u,{bandIds:this.bandIds,variableName:this.rasterFunction?null:null==(r=null==(t=this.mosaicRule)?void 0:t.multidimensionalDefinition)?void 0:r[0].variableName}));const o=bt(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=u):this.symbolizer=new At({rendererJSON:o,rasterInfo:u}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=(null==e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Vt(e,t,r)}async _getRasterFunctionInfos(e){var t;const r=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return r;if(r&&this.version>=10.3){if(1===r.length&&"none"===r[0].name.toLowerCase())return r;return null==(t=(await pe(Ce2(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)?void 0:t.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:o,signal:u}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${Ce2(this.parsedUrl)}/exportImage`,{data:d}=await pe(r,{responseType:o?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return d instanceof Blob?{imageBitmap:await Et(d,r,u),params:t}:{imageOrCanvasElement:d,params:t}}const d=this._initJobHandler(),h=pe(Ce2(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),g=(await Promise.all([h,d]))[0].data,f=t.format||"jpgpng";let R=f;if("bsq"!==R&&"bip"!==R&&(R=Mt(g)),!R)throw new fe("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(g)));const x={signal:u},I="gif"===f||"bmp"===f||f.includes("png")&&("png"===R||"jpg"===R)?Vt(g,{useCanvas:!0,...t},x):this._decodePixelBlock(g,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:f},x);return{pixelData:{pixelBlock:await I,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null==(t=this.defaultMosaicRule)?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var t;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let r=St(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=r&&r.length>0){this.mosaicRule=this.mosaicRule||new Qe;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==(null==(t=this.rasterFunction.functionName)?void 0:t.toLowerCase())&&r.forEach((e=>e.variableName="")),r=r.filter((({variableName:e,dimensionName:t})=>e&&"*"!==e||t)),!(null==e?void 0:e.length)&&r.length&&(this.mosaicRule.multidimensionalDefinition=r)}}_processVisibleRastersResponse(e,t){var r,o,u;t=t||{};const d=e.value,{templateRRFunctionNames:h,showNoDataRecords:g,returnDomainValues:f,templateFields:R}=t,x=e.processedValues;let I=null==(r=e.catalogItems)?void 0:r.features,T=(null==(u=null==(o=e.properties)?void 0:o.Values)?void 0:u.map((e=>e.replaceAll(/ /gi,", "))))||[];const P=this.objectIdField||"ObjectId",O="string"==typeof d&&d.toLowerCase().includes("nodata"),M=[];if(d&&!I&&!O){const e={};e[P]=0,T=[d],I=[new Re({geometry:this.fullExtent,attributes:e})]}if(!I)return[];let J,q,G;this._updateResponseFieldNames(I,R),O&&!g&&(I=[]);for(let L=0;L<I.length;L++){if(J=I[L],null!=d){if(q=T[L],G=this.rasterFunction&&x&&x.length>0&&h&&h.length>0&&h.includes(this.rasterFunction.functionName)?x[h.indexOf(this.rasterFunction.functionName)]:d,"nodata"===q.toLowerCase()&&!g)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";J.attributes[e]=q,J.attributes[t]=G,this._updateFeatureWithMagDirValues(J,q);const r=this.fields&&this.fields.length>0;let o=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?r?q:d:G;this.rasterFunction||(o=r?q:d),this._updateFeatureWithRasterAttributeTableValues(J,o)}if(J.sourceLayer=J.layer=this,f&&this._updateFeatureWithDomainValues(J),h&&x&&h.length===x.length)for(let e=0;e<h.length;e++){const t="Raster.ServicePixelValue."+h[e];J.attributes[t]=x[e]}M.push(I[L])}return M}_processMultidimensionalIntersection(e,t,r){const{multidimensionalSubset:o}=this;if(!o)return{isOutSide:!1,timeExtent:t,mosaicRule:r=this._combineMosaicRuleWithTimeExtent(r,t)};if(o){const{isOutside:r,intersection:u}=dt(o,{geometry:e,timeExtent:t});if(r)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=(null==u?void 0:u.timeExtent)&&(t=u.timeExtent)}if(null==(r=this._combineMosaicRuleWithTimeExtent(r,t))?void 0:r.multidimensionalDefinition){const{isOutside:e}=dt(o,{multidimensionalDefinition:r.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:r}}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==r)return;const{features:o,fields:u}=r,d=u.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!d)return;const h=o.filter((e=>e.attributes[d]===(null!=t?parseInt(t,10):null)));h&&h[0]&&u.forEach((t=>{const r=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=h[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),o=r.map((e=>[e])),u=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),d=new Ot({height:1,width:1,pixelType:"f32",pixels:o,statistics:u});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:d,extent:new L(0,0,0,0,this.spatialReference)});const h="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[d.pixels[0][0],d.pixels[1][0]]:Jt([d.pixels[0][0],d.pixels[1][0]]);e.attributes["Raster.Magnitude"]=h[0],e.attributes["Raster.Direction"]=h[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const o=t.domain.codedValues.find((e=>e.code===r));o&&(e.attributes[t.name]=o.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;null!=r&&e.forEach((e=>{var o;if(null==e?void 0:e.attributes)for(const u of t){const t=null==(o=r.get(u))?void 0:o.name;t&&t!==u&&(e.attributes[u]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=(null==e?void 0:e.functionName)&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return(null==e?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:r,rasterFunction:o}=this;o&&"rasterFunction"in e&&null==e.rasterFunction&&(e.rasterFunction=o),r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){var t;const r=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:o,advancedQueryCapabilities:u,maxRecordCount:d}=e,h=r.includes("image"),g="esriImageServiceDataTypeElevation"===e.serviceDataType,f=!(!e.spatialReference&&!(null==(t=e.extent)?void 0:t.spatialReference)),R=r.includes("edit"),x=r.includes("mensuration")&&f,I=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),T=x&&I.includes("basic"),P=this._isMosaicDataset(e)&&r.includes("catalog"),O=r.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:h,supportsExportImage:h,supportsIdentify:h,supportsImageToMap:o>=11.2&&P,supportsImageToMapMultiray:o>=11.2&&P,supportsMapToImage:o>=11.2&&P,supportsFindImages:o>=11.2&&P,supportsGetImageUrl:o>=11.3&&O,supportsMeasure:x,supportsMeasureFromImage:o>=11.2,supportsDownload:O,supportsQuery:P&&e.fields&&e.fields.length>0,supportsGetSamples:o>=10.2&&h,supportsProject:o>=10.3&&h,supportsComputeStatisticsHistograms:o>=10.4&&h,supportsQueryBoundary:o>=10.6&&h,supportsCalculateVolume:o>=10.7&&g,supportsComputePixelLocation:o>=10.7&&P,supportsComputeAngles:o>=10.91,supportsQueryGPSInfo:o>=11.2&&P,supportsAdd:R,supportsDelete:R,supportsEditing:R,supportsUpdate:R,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:d,maxRecordCountFactor:void 0,supportsStatistics:!!(null==u?void 0:u.supportsStatistics),supportsOrderBy:!!(null==u?void 0:u.supportsOrderBy),supportsDistinct:!!(null==u?void 0:u.supportsDistinct),supportsPagination:!!(null==u?void 0:u.supportsPagination),supportsStandardizedQueriesOnly:!!(null==u?void 0:u.useStandardizedQueries),supportsPercentileStatistics:!!(null==u?void 0:u.supportsPercentileStatistics),supportsCentroid:!!(null==u?void 0:u.supportsReturningGeometryCentroid),supportsDistance:!!(null==u?void 0:u.supportsQueryWithDistance),supportsExtent:!!(null==u?void 0:u.supportsReturningQueryExtent),supportsGeometryProperties:!!(null==u?void 0:u.supportsReturningGeometryProperties),supportsHavingClause:!!(null==u?void 0:u.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(null==u?void 0:u.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:T,supportsAreaAndPerimeter:T,supportsPointOrCentroid:T,supportsHeightFromBaseAndTop:x&&I.includes("base-top height"),supportsHeightFromBaseAndTopShadow:x&&I.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:x&&I.includes("top-top shadow height"),supports3D:x&&I.includes("3d")}}}};function Ce2(e){return(null==e?void 0:e.path)??""}return r([o({clonable:!1})],h.prototype,"_functionRasterInfos",void 0),r([o({clonable:!1})],h.prototype,"_rasterJobHandler",void 0),r([o({clonable:!1})],h.prototype,"_cachedRendererJson",void 0),r([o({readOnly:!0})],h.prototype,"_serviceSupportsMosaicRule",void 0),r([q("_serviceSupportsMosaicRule",["currentVersion","fields"])],h.prototype,"readServiceSupportsMosaicRule",null),r([o({readOnly:!0})],h.prototype,"_rasterAttributeTableFieldPrefix",void 0),r([o({readOnly:!0})],h.prototype,"_rasterFunctionNamesIndex",null),r([o()],h.prototype,"adjustAspectRatio",void 0),r([o({type:[x],json:{write:!0}})],h.prototype,"bandIds",void 0),r([q("bandIds")],h.prototype,"readBandIds",null),r([o({readOnly:!0,json:{read:!1}})],h.prototype,"capabilities",void 0),r([q("service","capabilities",["capabilities","currentVersion","serviceDataType"])],h.prototype,"readCapabilities",null),r([o({type:Number})],h.prototype,"compressionQuality",void 0),r([u("compressionQuality")],h.prototype,"writeCompressionQuality",null),r([o({type:Number})],h.prototype,"compressionTolerance",void 0),r([u("compressionTolerance")],h.prototype,"writeCompressionTolerance",null),r([o({json:{read:{source:"copyrightText"}}})],h.prototype,"copyright",void 0),r([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],h.prototype,"defaultMosaicRule",void 0),r([q("defaultMosaicRule",["defaultMosaicMethod"])],h.prototype,"readDefaultMosaicRule",null),r([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],h.prototype,"definitionExpression",void 0),r([o({readOnly:!0,constructOnly:!0})],h.prototype,"exportImageServiceParameters",void 0),r([o()],h.prototype,"rasterInfo",void 0),r([o({readOnly:!0,type:[me]})],h.prototype,"fields",void 0),r([o({readOnly:!0})],h.prototype,"fieldsIndex",null),r([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],h.prototype,"format",null),r([q("service","format",["serviceDataType"])],h.prototype,"readFormat",null),r([o({type:L})],h.prototype,"fullExtent",void 0),r([o({readOnly:!0})],h.prototype,"hasMultidimensions",void 0),r([o({json:{read:{source:"maxImageHeight"}}})],h.prototype,"imageMaxHeight",void 0),r([o({json:{read:{source:"maxImageWidth"}}})],h.prototype,"imageMaxWidth",void 0),r([o({type:String,json:{type:Be.jsonValues,read:Be.read,write:Be.write}})],h.prototype,"interpolation",void 0),r([o()],h.prototype,"minScale",void 0),r([q("service","minScale")],h.prototype,"readMinScale",null),r([o()],h.prototype,"maxScale",void 0),r([q("service","maxScale")],h.prototype,"readMaxScale",null),r([o({type:Qe})],h.prototype,"mosaicRule",null),r([q("mosaicRule",["mosaicRule","defaultMosaicMethod"])],h.prototype,"readMosaicRule",null),r([u("mosaicRule")],h.prototype,"writeMosaicRule",null),r([o()],h.prototype,"multidimensionalInfo",void 0),r([o({type:We,json:{write:!0}})],h.prototype,"multidimensionalSubset",void 0),r([o({json:{type:x}})],h.prototype,"noData",void 0),r([u("noData")],h.prototype,"writeNoData",null),r([o({type:String,json:{type:$e.jsonValues,read:$e.read,write:$e.write}})],h.prototype,"noDataInterpretation",void 0),r([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],h.prototype,"objectIdField",void 0),r([q("objectIdField")],h.prototype,"readObjectIdField",null),r([o({readOnly:!0})],h.prototype,"geometryType",void 0),r([o({})],h.prototype,"typeIdField",void 0),r([o({})],h.prototype,"types",void 0),r([o({readOnly:!0})],h.prototype,"parsedUrl",null),r([o({type:Function})],h.prototype,"pixelFilter",void 0),r([o()],h.prototype,"raster",void 0),r([o({readOnly:!0})],h.prototype,"sourceType",void 0),r([q("sourceType",["serviceSourceType","fields"])],h.prototype,"readSourceType",null),r([o()],h.prototype,"viewId",void 0),r([o({types:Ze,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Ke,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],h.prototype,"renderer",null),r([q("renderer")],h.prototype,"readRenderer",null),r([u("renderer")],h.prototype,"writeRenderer",null),r([o({clonable:!1})],h.prototype,"symbolizer",void 0),r([o(de)],h.prototype,"opacity",void 0),r([o({readOnly:!0})],h.prototype,"rasterFields",null),r([o({constructOnly:!0})],h.prototype,"rasterFunctionInfos",void 0),r([o({type:He})],h.prototype,"renderingRule",null),r([o({type:He,json:{name:"renderingRule"}})],h.prototype,"rasterFunction",null),r([q("rasterFunction",["renderingRule","rasterFunctionInfos"])],h.prototype,"readRasterFunction",null),r([o({readOnly:!0})],h.prototype,"serviceDataType",void 0),r([o({readOnly:!0,type:R})],h.prototype,"spatialReference",void 0),r([q("spatialReference",["spatialReference","extent"])],h.prototype,"readSpatialReference",null),r([o({json:{type:Xe.jsonValues}})],h.prototype,"pixelType",void 0),r([q("pixelType")],h.prototype,"readPixelType",null),r([u("pixelType")],h.prototype,"writePixelType",null),r([o({constructOnly:!0,type:Nt})],h.prototype,"serviceRasterInfo",void 0),r([o()],h.prototype,"sourceJSON",void 0),r([o(ye)],h.prototype,"url",void 0),r([o({readOnly:!0})],h.prototype,"version",void 0),r([q("version",["currentVersion","fields","timeInfo"])],h.prototype,"readVersion",null),h=r([d("esri.layers.mixins.ArcGISImageService")],h),h};let Tr=class extends(xe(Ie(Fe(De(Te(Ce(je(Ne(Oe(_e(g(ze)))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Ae((async(e,t,r)=>{const{save:o,saveAs:u}=await Ue((()=>import("./imageryUtils-BKfCadHR.js")),__vite__mapDeps([0,1,2,3]));switch(e){case Je.SAVE:return o(this,t);case Je.SAVE_AS:return u(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(Ve).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,r){var o;const u="vector-field"===(null==(o=this.renderer)?void 0:o.type);t[r]=u?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var e;return!(!this.raster||!(null==(e=this.url)?void 0:e.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(e){var t;const r=this.rasterFields,o=this.title,u=new Set;let d=!1,h=!1;this.capabilities&&(d=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,h="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const g=new Set;d&&g.add("raster.itempixelvalue");for(const R of r){const e=R.name.toLowerCase();g.has(e)||e.includes("raster.servicepixelvalue.")||u.add(R.name)}h&&u.add("raster.magnitude").add("raster.direction");const f=Me({fields:r,title:o},{...e,visibleFieldNames:u});return(null==f?void 0:f.fieldInfos)&&(null==(t=this.rasterInfo)?void 0:t.pixelType.startsWith("f"))&&f.fieldInfos.forEach((({format:e,fieldName:t})=>{e&&t&&/^raster\.(item|service)pixelvalue/i.test(t)&&(e.places=2)})),f}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null==e?void 0:e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Je.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Je.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return Ee(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(null==t?void 0:t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new fe("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};r([o(qe)],Tr.prototype,"legendEnabled",null),r([o({type:["show","hide"]})],Tr.prototype,"listMode",null),r([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Tr.prototype,"isReference",void 0),r([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Tr.prototype,"operationalLayerType",void 0),r([u("web-map","operationalLayerType")],Tr.prototype,"writeOperationalLayerType",null),r([o(Ge)],Tr.prototype,"popupEnabled",void 0),r([o({type:Le,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Tr.prototype,"popupTemplate",void 0),r([o({readOnly:!0})],Tr.prototype,"defaultPopupTemplate",null),r([o({readOnly:!0,json:{read:!1}})],Tr.prototype,"type",void 0),r([o({readOnly:!0})],Tr.prototype,"_isPreviewLayer",null),Tr=r([d("esri.layers.ImageryLayer")],Tr);const jr=Tr;export{jr as default};
