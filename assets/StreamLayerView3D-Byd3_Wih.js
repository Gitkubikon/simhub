import{e,y as t,a as s,bb as i,S as o,u as n,fQ as a,g as c,v as l,ab as p,C as d,b as h,a2 as y}from"./index-DSIPxOWi.js";import{o as v}from"./StreamFeatureManager-BCRzo0LN.js";import{createConnection as _}from"./createConnection-BF5tMznP.js";import{h as g}from"./EventedSet-D3TBRYG7.js";import{C as f,u as j}from"./HeatmapDensity.glsl-jGaN0eX9.js";import{l as I}from"./LayerView3D-ApO6iJqK.js";import{y as S}from"./LayerView-DMoB2q_T.js";import"./query-C2USZ63O.js";import"./normalizeUtils-BrH-PrZy.js";import"./normalizeUtilsCommon-BU8xfl77.js";import"./pbfQueryUtils-DUjEbwA9.js";import"./pbf-B53Txr8m.js";import"./timeSupport-CU-EQyfu.js";import"./projectExtentUtils-KG39_WUt.js";import"./dehydratedFeatureComparison-dI04k89u.js";import"./queryForSymbologySnapping-CEKgwdf_.js";import"./hash-BjBdcEEU.js";import"./Graphics3DObjectStates-B77mD6jz.js";import"./optimizedFeatureQueryEngineAdapter--U1rvwBV.js";import"./PooledRBush-DOZnXWx2.js";import"./quickselect-D9ta8ndX.js";import"./floorFilterUtils-2NbRkqHK.js";import"./QueryEngine-DAD9skS_.js";import"./WhereClause-DYd7Xwn9.js";import"./TimeOnly-C5lZbbIX.js";import"./json-omtrO2vq.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-B-uQJqPz.js";import"./utils-DEUXBrCj.js";import"./utils-1_4Re7um.js";import"./ClassBreaksDefinition-Dt1HCCB7.js";import"./FeatureStore-Dpo5Syxq.js";import"./BoundsStore-BQ0MOdb7.js";let w=class u extends l{constructor(e){super(e)}getObjectId(){return this.objectId}};e([t({type:Number,json:{read:!0}})],w.prototype,"objectId",void 0),w=e([s("esri.layers.graphics.controllers.StreamController.StreamGraphic")],w);class m{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const t=this._idToGraphic.get(e);return t?(t.sourceLayer=t.layer=null,this._idToGraphic.delete(e),t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._idToGraphic.size}}let b=class extends(i(o)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new g,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when((()=>this._startup())))}destroy(){this.clear()}_clearInterval(){null!==this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||"connected"===this.connection.connectionStatus}_shutdown(){this._clearInterval(),this.connection=n(this.connection),this.store=n(this.store),this.removeAllHandles()}_startup(){const{layer:e,layerView:t}=this,{spatialReference:s,definitionExpression:i,geometryDefinition:o,objectIdField:n,timeInfo:l,purgeOptions:p,maxReconnectionAttempts:d,maxReconnectionInterval:h,customParameters:y}=e,g=e.geometryType?a.toJSON(e.geometryType):null,f=s,j=t.view.spatialReference;this.clear(),this._set("connection",_(e.parsedUrl,f,j,g,i,o,d,h,y??void 0)),this._outSpatialReference=j.toJSON(),this.store=new m(this._onUpdate.bind(this)),this.featuresManager=new v(this.store,n,l.toJSON(),p);const I="startup-watches";this.removeHandles(I),this.addHandles([e.on("send-message-to-socket",(e=>this.connection.sendMessageToSocket(e))),e.on("send-message-to-client",(e=>this.connection.sendMessageToClient(e))),this.connection.on("data-received",(e=>this._onFeature(e))),this.connection.on("message-received",(e=>this._onWebSocketMessage(e))),c((()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions]),(()=>this._startup()))],I),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach((e=>this.featuresManager.removeById(e.objectId)))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{null==e.geometry||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=w.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){null!=t&&this.graphics.removeMany(t),null!=e&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval((()=>{const e=performance.now(),s=e-t;if(s>2500){t=e;const i=Math.round(this._updateInfo.client/(s/1e3)),o=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:i,websocket:o})}this.featuresManager.checkForUpdates()}),e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){null==this.connection&&this._startup()}clearGraphics(){this.graphics.clear()}};e([t()],b.prototype,"isPaused",void 0),e([t({constructOnly:!0})],b.prototype,"layer",void 0),e([t({constructOnly:!0})],b.prototype,"layerView",void 0),e([t()],b.prototype,"connection",void 0),e([t({readOnly:!0})],b.prototype,"updating",null),b=e([s("esri.layers.graphics.controllers.StreamController")],b);let P=class extends f{constructor(e){super(e),this.suspendResumeExtentMode="computed"}get connection(){var e;return null==(e=this.controller)?void 0:e.connection}createController(){return new b({layer:this.layer,layerView:this.layerView})}beforeSetController(){}pause(){var e;null==(e=this.controller)||e.pauseStream()}resume(){var e;null==(e=this.controller)||e.resumeStream()}disconnect(){var e;null==(e=this.controller)||e.disconnect()}connect(){var e;null==(e=this.controller)||e.connect()}clear(){var e;null==(e=this.controller)||e.clearGraphics()}};e([t()],P.prototype,"controller",void 0),e([t()],P.prototype,"connection",null),e([t()],P.prototype,"suspendResumeExtentMode",void 0),P=e([s("esri.views.3d.layers.graphics.StreamGraphics3DGraphicsPipeline")],P);const r=i=>{let o=class extends i{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...e){super(...e),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&"connected"===this._streamConnectionStatus?"paused":this._streamConnectionStatus}_onSuspendedChange(e){e?this._doPause():this._isUserPaused||this._doResume()}};return e([t()],o.prototype,"_isUserPaused",void 0),e([t({readOnly:!0})],o.prototype,"connectionStatus",null),e([t({type:p})],o.prototype,"filter",void 0),o=e([s("esri.views.layers.StreamLayerView")],o),o};let C=class extends(r(j(I(S)))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=d.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(c((()=>this.suspended),(e=>{this.graphicsPipeline&&this._onSuspendedChange(e)})))}get connectionError(){var e,t;const s=null==(t=null==(e=this.graphicsPipeline)?void 0:e.connection)?void 0:t.errorString;return s?new h("stream-controller",s):null}createQuery(){return new y({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),null==t?void 0:t.signal)}get _streamConnectionStatus(){var e,t;return(null==(t=null==(e=this.graphicsPipeline)?void 0:e.connection)?void 0:t.connectionStatus)??"disconnected"}createGraphicsPipeline(){return new P({layerView:this})}createController(){return new b({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var e;null==(e=this.graphicsPipeline)||e.pause()}_doResume(){var e;null==(e=this.graphicsPipeline)||e.resume()}_doDisconnect(){var e;null==(e=this.graphicsPipeline)||e.disconnect(),this._doPause()}_doConnect(){var e;null==(e=this.graphicsPipeline)||e.connect(),this.resume()}_doClear(){var e;null==(e=this.graphicsPipeline)||e.clear()}};e([t({readOnly:!0})],C.prototype,"updatePolicy",void 0),e([t({readOnly:!0})],C.prototype,"connectionError",null),e([t()],C.prototype,"graphicsPipeline",void 0),e([t({readOnly:!0})],C.prototype,"hasZ",void 0),e([t({readOnly:!0})],C.prototype,"hasM",void 0),e([t({readOnly:!0})],C.prototype,"_streamConnectionStatus",null),C=e([s("esri.views.3d.layers.StreamLayerView3D")],C);const M=C;export{M as default};
