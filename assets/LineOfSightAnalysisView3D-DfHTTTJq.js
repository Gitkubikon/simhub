import{e as t,y as n,a as o,S as a,Q as r,bn as c,bO as p,ku as g,p1 as v,bY as m,p2 as _,dl as y,dj as b,dk as w,dm as T,dp as I,dq as P,p3 as L,aw as V,p4 as S,dG as E,p5 as A,p6 as H,p7 as M,p8 as k,nG as x,du as z,N as F,dC as G,dD as U,dK as N,bc as W,h as $,om as J,ke as K,a8 as Q,e6 as Y,cx as X,oT as ee,n as te,p9 as ie,cU as ne,gz as se,P as oe,z as ae,x as re,h6 as le,a0 as ue,pa as de,pb as ce,gi as he,cI as pe,pc as ge,pd as ve,pe as me,ak as _e,oI as ye,pf as be,ol as fe,g as Ce,pg as we,dI as Te,A as Oe,u as Ie,dR as Pe,ph as Le,mS as Ve,ji as Re,pi as Se,pj as Ee,bK as Ae,bV as He,V as De}from"./index-DSIPxOWi.js";import{s as Me}from"./AnalysisView3D-CNsY6W7Z.js";import{t as ke,u as xe,f as ze}from"./LineOfSightAnalysisTarget-DgKp4JZr.js";import{t as je}from"./projectionUtils-B1mpMSec.js";import{e as Fe,d as Ge,c as Ue,p as Ne}from"./ShadedColorMaterial.glsl-C-XXTK_B.js";import{r as Be}from"./manipulatorUtils-ypp-R_oV.js";import{c as We}from"./Laserlines.glsl-C_dc6leb.js";import{o as $e,a as Ze,v as qe}from"./analysisViewUtils-9rYF9O9W.js";import{f as Je}from"./LineVisualElement-EjMrPPob.js";import{x as Ke}from"./PointVisualElement-kTFgcxXB.js";import"./persistable-Bz3xp-b5.js";import"./resourceExtension-BScMZjEL.js";import"./EditGeometryOperations-sseMUvB1.js";import"./geometry2dUtils-4c9qUvJ6.js";let Qe=class s extends a{constructor(t){super(t),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};t([n()],Qe.prototype,"target",void 0),t([n()],Qe.prototype,"intersectedGraphic",void 0),t([n()],Qe.prototype,"intersectedLocation",void 0),t([n()],Qe.prototype,"elevationAlignedTargetLocation",void 0),t([n({type:Boolean})],Qe.prototype,"visible",void 0),Qe=t([o("esri.views.3d.analysis.LineOfSightAnalysisResult")],Qe);let Ye=class i extends a{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:r(),observerSurfaceNormal:null,observerFeatureId:null,target:r(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:r(),targetAdjusted:r()},this.computationResult={start:r(),end:r(),intersection:r(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};var Xe;t([n()],Ye.prototype,"target",void 0),t([n()],Ye.prototype,"elevationAlignedTargetLocation",void 0),t([n()],Ye.prototype,"inputPoints",void 0),t([n()],Ye.prototype,"computationResult",void 0),t([n()],Ye.prototype,"result",void 0),Ye=t([o("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],Ye);let et=Xe=class extends a{constructor(t){super(t)}clone(){return new Xe({type:this.type,id:c(this.id),mapPoint:c(this.mapPoint),renderPoint:p(this.renderPoint),normal:c(this.normal),ray:c(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&g(this.mapPoint,t.mapPoint)&&v(this.renderPoint,t.renderPoint)&&m(this.normal,t.normal)&&_(this.ray,t.ray)&&this.graphic===t.graphic}};t([n()],et.prototype,"type",void 0),t([n({constructOnly:!0})],et.prototype,"id",void 0),t([n({constructOnly:!0})],et.prototype,"mapPoint",void 0),t([n({constructOnly:!0})],et.prototype,"renderPoint",void 0),t([n({constructOnly:!0})],et.prototype,"normal",void 0),t([n({constructOnly:!0})],et.prototype,"graphic",void 0),t([n({constructOnly:!0})],et.prototype,"ray",void 0),et=Xe=t([o("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],et);let tt=class C extends a{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=b(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=w.MIN}getScreenPointIntersection(t){const n=T(t,I.get()),o=P(this.view.state.camera,n,at);return this._getRayIntersection(o)}_getRayIntersection(t,n){if(null==t||null==this.view.sceneIntersectionHelper)return null;const{intersector:o}=this;o.options.store=w.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,o,n);const a=o.results.min,c=r();if(!a.getIntersectionPoint(c))return null;if(null!=(null==n?void 0:n.maxDistance)&&L(c,t.origin)>n.maxDistance**2)return null;const g=this.view.renderCoordsHelper.fromRenderCoords(c,new V({spatialReference:this.view.spatialReference})),v=p(a.normal);if(S(a))return new et({type:E.OBJECT,id:`${a.target.layerUid}/${a.target.nodeIndex}/${a.target.componentIndex}`,mapPoint:g,renderPoint:c,normal:v,ray:A(t),graphic:null});if(H(a))return new et({type:E.OBJECT,id:`${a.target.layerUid}/${a.target.graphicUid}`,mapPoint:g,renderPoint:c,normal:v,ray:A(t),graphic:null});if(M(a))return new et({type:E.TERRAIN,id:a.target.lij.slice(),mapPoint:g,renderPoint:c,normal:v,ray:A(t),graphic:null});const m=k(a,this.view);if(null!=m){const n=m.layer,o=m.sourceLayer;let a;return a=o&&"scene"===o.type?x(m,o.objectIdField):m.uid,new et({type:E.OBJECT,id:`${null==n?void 0:n.uid}/${a}`,mapPoint:g,renderPoint:c,normal:v,ray:A(t),graphic:m})}return null}updateFromGroundIntersection(t,n,o){const a=it,r=nt,c=st,g=ot;z(r,t),this.view.renderCoordsHelper.worldUpAtPosition(r,c),F(c,c);const v=this.view.basemapTerrain.visibleElevationBounds,m=(n>=0?1:-1)*((v?Math.abs(v.max-v.min):100)+Math.abs(n));G(g,c,m),U(a,r,g),N(a,r,at);const _=this._getRayIntersection(at,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:m});if(null!=_){const t=ot;return G(t,c,n),U(o,_.renderPoint,t),p(_.normal)}return z(o,t),null}};t([n()],tt.prototype,"view",void 0),t([n()],tt.prototype,"intersector",void 0),tt=t([o("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],tt);const it=r(),nt=r(),st=r(),ot=r(),at=y();let rt=class extends(W.EventedMixin(a)){constructor(t){super(t),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new $,this._frameTask=J,this._computationHandles=new K,this._externalObserverUpdate=!0}initialize(){var t;const n=null==(t=this.view.resourceController)?void 0:t.scheduler;this._frameTask=n?n.registerTask(Q.LINE_OF_SIGHT_TOOL):J,this._intersector=new tt({view:this.view}),this.addHandles([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const n=t.computation,{inputPoints:o,computationResult:a}=n,{observerAdjusted:r,targetAdjusted:c}=o,{start:p,end:g}=a;z(p,r),z(g,c),this._canCompute(n)?this._computeIntersection(t):function q({computation:t,interpolationInfo:n}){const{computationResult:o,inputPoints:a}=t,{start:r,end:c,intersection:p}=o,{originalIntersection:g,originalObserver:v,originalTarget:m}=n;if(z(p,g),a.isValid){const t=ut,n=ee(v,g)/ee(v,m);he(t,r,v),G(t,t,1-n),U(p,p,t),he(t,c,m),G(t,t,n),U(p,p,t),o.isValid=!0}else t.result=null,o.isValid=!1,o.isTargetVisible=!1}(t),n.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:n.result})}_updateAdjustedPointsFromFeatures(t){const n=this.view,{sceneIntersectionHelper:o}=n,{inputPoints:a}=t,{observerAdjusted:c,observerFeatureId:p,targetFeatureId:g,targetAdjusted:v}=a;if(null==p&&null==g)return;const m=Y(c,v),_=this._intersector.intersector,y=N(a.observer,a.target,dt);_.options.store=w.ALL,o.intersectToolIntersectorRay(y,_);let b=null,T=null,I=null,P=null;for(const r of _.results.all){const t=k(r,this.view);if(null==t||null==r.distanceInRenderSpace)continue;const o=ke(t);null!=o&&(null!=p&&o===p&&(null==b&&(b=Z(r,n,m)),r.distanceInRenderSpace<b&&(I=r)),null!=g&&o===g&&(null==T&&(T=Z(r,n,m)),null==P&&r.distanceInRenderSpace<m&&m-r.distanceInRenderSpace<T&&(P=r)))}null!=I&&I.getIntersectionPoint(c)&&(a.observerSurfaceNormal=I.getTransformedNormal(r())),null!=P&&P.getIntersectionPoint(v)&&(a.targetSurfaceNormal=P.getTransformedNormal(r()))}_adjustStartEndPositions(t){const n=this._screenPixelSize,o=this.view,{inputPoints:a}=t,{observer:r,observerSurfaceNormal:c,target:p,targetSurfaceNormal:g,observerAdjusted:v,targetAdjusted:m}=a,_=ut;z(v,r),z(m,p),this._updateAdjustedPointsFromFeatures(t),null!=c?z(_,c):X(_,m,v);const y=n;F(_,_),G(_,_,Math.min(y,1)),U(v,v,_),null!=g?z(_,g):X(_,v,m);const b=o.state.camera.computeScreenPixelSizeAt(m);F(_,_),G(_,_,Math.min(b,1)),U(m,m,_)}_computeIntersection({computation:t,interpolationInfo:n}){const{view:o}=this,{sceneIntersectionHelper:a,renderCoordsHelper:r}=o;if(null==a)return;const c=this._intersector.intersector,{computationResult:p,inputPoints:g}=t,{observer:v,target:m}=g,{start:_,end:y}=p,b=N(_,y,dt);c.options.store=w.MIN,a.intersectToolIntersectorRay(b,c);const T=c.results.min,I=p.intersection,P=ut;let L=!0;if(null!=T&&T.getIntersectionPoint(I)){z(n.originalIntersection,I),z(n.originalObserver,_),z(n.originalTarget,y),r.fromRenderCoords(I,P,o.spatialReference);const t=1-ee(y,m)/ee(_,m);L=ee(v,I)>=t*ee(v,m)}const S=new V(P,o.spatialReference);{const{result:n,target:a}=t;null!=n?(n.target=a,n.intersectedGraphic=L?null:k(T,o),n.intersectedLocation=L?null:S,n.visible=L):t.result=new Qe({target:a,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:L?null:k(T,o),intersectedLocation:L?null:S,visible:L})}p.isValid=g.isValid=!0,p.isTargetVisible=L}_canCompute(t){const n=this.analysisViewData.elevationAlignedObserver,o=this.view.frustum;if(null==n||null==t.elevationAlignedTargetLocation||null==o)return!1;const{observerAdjusted:a,targetAdjusted:r}=t.inputPoints,c=o.intersectsPoint(a),p=o.intersectsPoint(r);return c&&p}_onObserverPositionChange(t,n,o,a,c){if(this._externalObserverUpdate=c,null==t)return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(null==n)return je(this.analysis,t.spatialReference,te.getLogger(this)),void(this.analysisViewData.elevationAlignedObserver=null);const p=B(n,o),{absoluteZ:g,elevation:v}=ie(n.x,n.y,n.z,this.view.spatialReference,this.view,p),m=n.clone();m.z=g,this._effectiveObserverElevationMode=p.mode,this.analysisViewData.elevationAlignedObserver=m;const _=r();this.view.renderCoordsHelper.toRenderCoords(m,_),this._elevationAlignedObserverPositionRenderSpace=_,this._observerGroundOffsetRenderSpace=g-v,this._observerFeatureId=ke(a),this.priority=Q.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,n,o,a,r){const{inputPoints:c}=t;switch(z(c.observer,n),c.observerFeatureId=r,c.observerSurfaceNormal=null,a){case"on-the-ground":case"relative-to-ground":{const t=this._intersector.updateFromGroundIntersection(c.observer,o,c.observer);null==c.observerFeatureId&&(c.observerSurfaceNormal=t)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=Q.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,n,o,a,r,c=!0){const p=t.inputPoints;if(c&&(p.isValid=!1),null==o)return null!=n&&je(this.analysis,n.spatialReference,te.getLogger(this)),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const g=B(o,a),{absoluteZ:v,elevation:m}=ie(o.x,o.y,o.z,this.view.spatialReference,this.view,g),_=o.clone();switch(_.z=v,t.elevationAlignedTargetLocation=_,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,p.target),p.targetFeatureId=ke(r),p.targetSurfaceNormal=null,g.mode){case"on-the-ground":case"relative-to-ground":{const t=this._intersector.updateFromGroundIntersection(p.target,v-m,p.target);null==p.targetFeatureId&&(p.targetSurfaceNormal=t)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=Q.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return ne([this._updatingHandles.add((()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:se(t.target.position,this.view.spatialReference)})),(({computation:t,targetPosition:n,targetElevationInfo:o,targetFeatureInfo:a,projectedTargetPosition:r})=>{null==r.pending?this._onTargetPositionChange(t,n,r.geometry,o,a):this._updatingHandles.addPromise(r.pending)}),oe)])}_connectComputationToObserver(t){return this._updatingHandles.add((()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver})),(({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())}),oe)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add((()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId})),(({computation:t,observer:n,observerGroundOffset:o,observerElevationMode:a,observerFeatureId:r})=>{this._onObserverRenderSpacePositionChangeForComputation(t,n,o,a,r)}),oe)}_connectComputationToCamera(t){return this._updatingHandles.add((()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty})),(({isDirty:n})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!n||t.notifyInputPointsChanged()}))}_connectComputationToSlicePlane(t){return this._updatingHandles.add((()=>this.view.slicePlane),(()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()}))}_connectComputationToElevation(t){const t2=(n,o)=>{const a=this.analysis.observer,r=t.target;let c=null,p=null,g=null,v=null,m=null,_=null;if(null!=(null==a?void 0:a.position)){const t=se(a.position,this.view.spatialReference);if(null!=t.pending)return this._updatingHandles.addPromise(t.pending),void t.pending.finally((()=>t2(n,o)));c=t.geometry,p=a.elevationInfo,g=a.feature}if(null!=r.position){const t=se(r.position,this.view.spatialReference);if(null!=t.pending)return this._updatingHandles.addPromise(t.pending),void t.pending.finally((()=>t2(n,o)));v=t.geometry,m=r.elevationInfo,_=r.feature}null==c&&null==v||(ge(n,o,ct,this.view.spatialReference),null!=c&&ve(ct,c)&&this._onObserverPositionChange(null!=a?a.position:null,c,p,g,!1),null!=v&&ve(ct,v)&&this._onTargetPositionChange(t,r.position,v,m,_,!1),null!=c&&null!=v&&me(ct,c,v)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",(({extent:t,spatialReference:n})=>t2(t,n)))}_connectComputationToTask(t){let n=null;const o={computation:t,interpolationInfo:{originalIntersection:r(),originalObserver:r(),originalTarget:r()}};return ne([this._updatingHandles.add((()=>t.inputPoints),(()=>{n=ae(n),n=re((async t=>{await le(this._frameTask.schedule((()=>this._computeResult(o)),t))}))}),{initial:!0,equals:()=>!1}),ue((()=>n=ae(n)))])}_connectComputation(t){const n=this._computationHandles;n.has(t)||n.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:n}){for(const o of n)this._disconnectComputation(o);for(const o of t)this._connectComputation(o)}_onTargetCollectionChange({added:t,removed:n}){for(const o of n)this._removeTarget(o);for(const o of t)this._addTarget(o)}_onCursorTargetChange(t,n){null!=n&&this._removeTarget(n),null!=t&&this._addTarget(t)}_addTarget(t){this._computations.some((n=>n.target===t))||this._computations.add(new Ye({target:t}))}_removeTarget(t){const n=this._computations.findIndex((n=>n.target===t));this._computations.removeAt(n)}_connectObserver(){return ne([this._updatingHandles.add((()=>({observerPosition:null!=this.analysis.observer?this.analysis.observer.position:null,projectedObserverPosition:se(null!=this.analysis.observer?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:null!=this.analysis.observer?this.analysis.observer.elevationInfo:null,observerFeatureInfo:null!=this.analysis.observer?this.analysis.observer.feature:null})),(({observerPosition:t,projectedObserverPosition:n,observerElevationInfo:o,observerFeatureInfo:a})=>{null==n.pending?this._onObserverPositionChange(t,n.geometry,o,a,!0):this._updatingHandles.addPromise(n.pending)}),oe)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this._computations),(t=>this._onComputationCollectionChange(t)),{initial:!0,final:!0})}_connectTargets(){return ne([this._updatingHandles.addOnCollectionChange((()=>this.analysis.targets),(t=>this._onTargetCollectionChange(t)),{initial:!0,final:!0}),this._updatingHandles.add((()=>this.analysisViewData.cursorTarget),((t,n)=>{this._onCursorTargetChange(t,n)}))])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:n}=this,{renderCoordsHelper:o}=n;if(null==t||null==o)return!1;const a=ut;o.toRenderCoords(t,a);const r=n.state.camera.computeScreenPixelSizeAt(a);return Math.abs((r-this._screenPixelSize)/this._screenPixelSize)>lt}};function Z(t,n,o){if(de(t)){const a=ce(t,n);if(null!=a)return Math.min(a*ht,o)}return 1e-5*o}function B(t,n){return t.hasZ?n??{mode:"absolute-height",offset:0}:{mode:"on-the-ground",offset:0}}t([n({constructOnly:!0})],rt.prototype,"analysis",void 0),t([n({constructOnly:!0})],rt.prototype,"analysisViewData",void 0),t([n({constructOnly:!0})],rt.prototype,"view",void 0),t([n()],rt.prototype,"updating",null),t([n()],rt.prototype,"priority",null),t([n()],rt.prototype,"updateOnCameraChange",void 0),t([n()],rt.prototype,"_computations",null),t([n()],rt.prototype,"_elevationAlignedObserverPositionRenderSpace",null),t([n()],rt.prototype,"_observerGroundOffsetRenderSpace",void 0),t([n()],rt.prototype,"_effectiveObserverElevationMode",void 0),t([n()],rt.prototype,"_observerFeatureId",void 0),t([n()],rt.prototype,"_screenPixelSize",null),t([n({readOnly:!0})],rt.prototype,"_updatingHandles",void 0),t([n()],rt.prototype,"_frameTask",void 0),t([n()],rt.prototype,"_isCameraDirty",null),rt=t([o("esri.views.3d.analysis.LineOfSight.LineOfSightController")],rt);const lt=.1,ut=r(),dt=y(),ct=pe(),ht=.05;const pt=new class e{constructor(){this.glowWidth=8,this.innerWidth=.75}};const gt=new class i2{constructor(){this.size=.5}};function l(t){return be(t.accentColor,.75)}const vt=new class h{constructor(){this.size=.5,this.visibleColor=new _e([3,252,111,.75]),this.occludedColor=new _e([252,3,69,.75]),this.undefinedColor=new _e([127,127,127,.75])}};const mt=new class d{constructor(){this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new _e([3,252,111,1]),this.visibleOuterColor=new _e([3,252,111,.15]),this.occludedInnerColor=new _e([252,3,69,1]),this.occludedOuterColor=new _e([252,3,69,.1]),this.undefinedInnerColor=new _e([255,255,255,1]),this.undefinedOuterColor=new _e([127,127,127,.2])}};class f extends Fe{constructor(t,n){const o=Ge(l(t.effectiveTheme)),a=fe(o,gt.size,32,32),r=new Ue(a);super({view:t,renderObjects:[r],metadata:n,elevationInfo:{mode:"absolute-height",offset:0}}),Be(this),this.themeHandle=Ce((()=>({color:l(t.effectiveTheme)})),(t=>{o.setParameters(t)}))}destroy(){this.themeHandle.remove(),super.destroy()}}let _t=class d2 extends Fe{constructor(t,n){const{size:o,visibleColor:a,occludedColor:r,undefinedColor:c}=vt;super({view:t,renderObjects:[u(o,a,we.Custom1),u(o,r,we.Custom2),u(o,c,we.Custom3)],metadata:n,elevationInfo:{mode:"absolute-height",offset:0}}),Be(this)}};function u(t,n,o){return new Ue(fe(Ge(_e.toUnitRGBA(n)),t,32,32),o)}var yt,bt;(bt=yt||(yt={})).Ready="ready",bt.Creating="creating",bt.Created="created";let ft=class O extends $e{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new K,this._updatingHandles=new $,this._manipulatorHandles=new K,this._targetTrackerManipulator=null}initialize(){this._intersector=new tt({view:this.view}),this.addHandles(Ce((()=>this.state),(t=>{t===yt.Created&&this.finishToolCreation()}),Oe)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add((()=>{var t;return null==(t=this.analysisViewData)?void 0:t.elevationAlignedObserver}),(t=>this._onObserverLocationChange(t)),oe),this._updatingHandles.add((()=>function s2(t){const n=t.accentColor;return{glowColor:n,innerColor:ye(n),globalAlpha:.75*n.a}}(this.view.effectiveTheme)),(({glowColor:t,innerColor:n,globalAlpha:o})=>this._updateLaserLineStyle(t,n,o)),oe),this._updatingHandles.add((()=>this._laserLineRendererDependencies()),(t=>this._updateLaserLineRenderer(t))),this._connectComputations(),this._updatingHandles.addWhen((()=>!this._shouldRenderTracker),(()=>this._clearCursorTracker()),oe)])}destroy(){this._updatingHandles=Ie(this._updatingHandles),this._manipulatorHandles=Ie(this._manipulatorHandles),this._analysisHandles=Ie(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){var t;return this.active?this.hasGrabbedManipulators?yt.Created:yt.Creating:null!=(null==(t=this.analysis.observer)?void 0:t.position)?yt.Created:yt.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return null!=this.analysisViewData&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&"mouse"===this._latestPointerMovePointerType}get _shouldRenderTracker(){var t;return this._showTracker&&null!=(null==(t=this.analysis.observer)?void 0:t.position)&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){"immediate-click"===t.type&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(t=>this._onComputationsCollectionChange(t)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:n}){for(const o of n)this._disconnectComputation(o);for(const o of t)this._connectComputation(o)}_connectComputation(t){if(this.destroyed)return void te.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const n=this._analysisHandles;if(n.has(t))return;const o=this._createTargetManipulator(t.target);null==this._targetTrackerManipulator&&o.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=o,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),n.add([this._updatingHandles.add((()=>function j(t){const{isValid:n,isTargetVisible:o}=t.computationResult;return{isValid:n,isTargetVisible:o}}(t)),(()=>function D(t,n){const{isValid:o,isTargetVisible:a}=n.computationResult;t.state=o?a?we.Custom1:we.Custom2:we.Custom3}(o,t)),oe),this._updatingHandles.add((()=>t.elevationAlignedTargetLocation),(t=>this._onTargetLocationChange(t,o)),oe)],t)}_disconnectComputation(t){if(this.destroyed)return void te.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const n=this._getTargetManipulator(t.target);null!=n&&(this.manipulators.remove(n),this._manipulatorHandles.remove(n),null!=this._targetTrackerManipulator&&this._targetTrackerManipulator===n&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=Ie(this.analysisViewData.cursorTarget)}_createTargetManipulator(t){const n={target:t,type:"target"},o=new _t(this.view,n);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(o),o.events.on("grab-changed",(t=>this._manipulatorGrabChanged(o,t))),o.events.on("immediate-click",(t=>this._manipulatorClick(o,t)))],o),this.manipulators.add(o),null!=t.position?o.elevationAlignedLocation=t.position:o.available=!1,o}_getTargetManipulator(t){let n=null;return this.manipulators.forEach((o=>{const a=o.manipulator;null==n&&"target"===a.metadata.type&&a.metadata.target===t&&(n=a)})),n}_createObserverManipulator(){const t=new f(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(t),t.events.on("grab-changed",(n=>this._manipulatorGrabChanged(t,n))),t.events.on("immediate-click",(n=>this._manipulatorClick(t,n)))],t),this.manipulators.add(t),t}_screenToIntersection(){return t=>{const n=this._intersector.getScreenPointIntersection(t.screenEnd);return null==n?null:{...t,intersection:n}}}_createTargetManipulatorDragPipeline(t){return Ne(t,((n,o,a)=>{o.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next((()=>this._updateLaserLineRenderer())),a.next(function R(t){var n;const o=null==(n=t.position)?void 0:n.clone();return n=>(t.position=o,n)}(t.metadata.target)).next((()=>this._updateLaserLineRenderer()))}))}_createObserverManipulatorDragPipeline(t){return Ne(t,((t,n,o)=>{n.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next((()=>this._updateLaserLineRenderer())),o.next(this._cancelObserverDragStep()).next((()=>this._updateLaserLineRenderer()))}))}_updateObserverDragStep(){return t=>(null!=t.intersection.mapPoint?(null==this.analysis.observer&&(this.analysis.observer=new xe),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){var t;const n=null!=(null==(t=this.analysis.observer)?void 0:t.position)?this.analysis.observer.clone():null;return t=>(this.analysis.observer=n,t)}_updateTargetDragStep(t){return n=>{this._updateFromIntersection(t.metadata.target,n.intersection);const o=n.intersection.mapPoint;return null!=o&&(t.elevationAlignedLocation=o),n}}_manipulatorGrabChanged(t,n){switch(n.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:null!=this.analysis.observer?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:n,grabbedManipulator:o,shouldRenderTracker:a,observerPosition:r,visible:c}=t;if(null==n)return;const p=null!=o?o:a&&null!=r?this._targetTrackerManipulator:null;null!=p&&c?(n.visible=!0,n.heightManifoldTarget=p.renderLocation,p!==this._observerManipulator?n.lineVerticalPlaneSegment=Pe(this._observerManipulator.renderLocation,p.renderLocation,Ct):n.lineVerticalPlaneSegment=null):(n.visible=!1,n.heightManifoldTarget=null,n.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:t,innerWidth:n}=pt;this._laserlineVisualElement=new We({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:t,innerWidth:n},isDecoration:!0})}_removeLaserLine(){null!=this._laserlineVisualElement&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(t,n,o){const a=this._laserlineVisualElement;if(null==a)return;const r=a.style;a.style={...r,glowColor:_e.toUnitRGB(t),innerColor:_e.toUnitRGB(n),globalAlpha:o}}_onObserverLocationChange(t){null!=t?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t):this._observerManipulator.available=!1}_onTargetLocationChange(t,n){null!=t?(n.elevationAlignedLocation=t,n!==this._targetTrackerManipulator&&(n.available=!0)):n.available=!1}_addPointFromClickEvent(t){var n;const o=this._intersector.getScreenPointIntersection(t);if(null!=(null==o?void 0:o.mapPoint))if(null!=(null==(n=this.analysis.observer)?void 0:n.position)){this._clearCursorTracker();const t=new ze;this._updateFromIntersection(t,o),this.analysis.targets.add(t)}else{const t=new xe;this._updateFromIntersection(t,o),this.analysis.observer=t}}_clickHandler(t){this.active&&t.button!==Le.Right&&(this._addPointFromClickEvent(Ve(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==Le.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&"Escape"===t.key&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){var n;if(this.hasGrabbedManipulators)return;if(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||null==(null==(n=this.analysis.observer)?void 0:n.position))return;const o=Ve(t),a=this._intersector.getScreenPointIntersection(o);null!=(null==a?void 0:a.mapPoint)&&(null==this.analysisViewData.cursorTarget&&(this.analysisViewData.cursorTarget=new ze),this._updateFromIntersection(this.analysisViewData.cursorTarget,a),this._updateLaserLineRenderer())}_updateFromIntersection(t,n){if(null==n.mapPoint)return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(n.type){case E.OBJECT:if(null!=n.graphic){const o=n.graphic,a=Se(o);"on-the-ground"===a.mode&&(a.mode="relative-to-ground",a.offset=0),t.elevationInfo=new Re(a),t.feature=o}else t.elevationInfo=null,t.feature=null;break;case E.TERRAIN:t.elevationInfo=new Re({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const o=n.mapPoint.clone();o.z=Ee(this.view,o,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=o}_manipulatorClick(t,n){if("observer"===t.metadata.type||t.grabbing||t.dragging||n.button!==Le.Right||this.analysis.targets.length<=1)return;const{target:o}=t.metadata;this.analysis.targets.remove(o),n.stopPropagation()}get testInfo(){}};t([n({constructOnly:!0})],ft.prototype,"view",void 0),t([n({constructOnly:!0})],ft.prototype,"analysis",void 0),t([n({readOnly:!0})],ft.prototype,"state",null),t([n({readOnly:!0})],ft.prototype,"cursor",null),t([n()],ft.prototype,"removeIncompleteOnCancel",void 0),t([n({readOnly:!0})],ft.prototype,"updating",null),t([n({constructOnly:!0})],ft.prototype,"analysisViewData",void 0),t([n({readOnly:!0})],ft.prototype,"_showTracker",null),t([n()],ft.prototype,"_latestPointerMovePointerType",void 0),t([n()],ft.prototype,"_shouldRenderTracker",null),t([n()],ft.prototype,"_laserlineVisualElement",void 0),t([n()],ft.prototype,"_grabbedManipulator",void 0),ft=t([o("esri.views.3d.analysis.LineOfSight.LineOfSightTool")],ft);const Ct=Te();class e2{constructor(t,n,o,a){this.visibleLineVisualElement=t,this.occludedLineVisualElement=n,this.undefinedLineVisualElement=o,this.targetVisualElement=a}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let wt=class extends a{constructor(t){super(t),this._lineOfSightVisualElements=new Array,this._computationHandles=new K,this._updatingHandles=new $}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=Ie(this._updatingHandles),this._computationHandles=Ie(this._computationHandles),this._observerVisualElement=Ie(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){}_createLineOfSightVisualization(){const t=mt,n=this.view,o=this.isDecoration,a={view:n,attached:!0,width:t.outerWidth,innerWidth:t.innerWidth,isDecoration:o},r=_e.toUnitRGBA(t.visibleOuterColor),c=_e.toUnitRGBA(t.visibleInnerColor),p=_e.toUnitRGBA(t.occludedOuterColor),g=_e.toUnitRGBA(t.occludedInnerColor),v=_e.toUnitRGBA(t.undefinedOuterColor),m=_e.toUnitRGBA(t.undefinedInnerColor),_=new Je({...a,color:r,innerColor:c}),y=new Je({...a,color:p,innerColor:g}),b=new Je({...a,color:v,innerColor:m}),w=new Ke({view:n,attached:!0,...Tt,size:8,isDecoration:o}),T=new e2(_,y,b,w);return this._lineOfSightVisualElements.push(T),T}_destroyLineOfSightVisualization(t){t.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(t),1)}_updateLineOfSightVisualization(t,n,o){const a=mt,{computationResult:r,inputPoints:c}=t,{start:p,end:g,intersection:v,isValid:m,isTargetVisible:_}=r,{observer:y}=c,b=Lt;b[12]=y[0],b[13]=y[1],b[14]=y[2];const w=X(Ot,p,y),T=X(It,g,y),I=X(Pt,v,y),{visibleLineVisualElement:P,occludedLineVisualElement:L,undefinedLineVisualElement:V,targetVisualElement:S}=n,E=null==this.analysisViewData.elevationAlignedObserver||null==t.elevationAlignedTargetLocation,A=this.visible&&!E;P.visible=A,L.visible=A,V.visible=A,S.visible=A,S.attached=!o.interactiveAndEditable,A&&(P.geometry=null,L.geometry=null,V.geometry=null,S.geometry=t.elevationAlignedTargetLocation,m?_?(P.geometry=[[Ae(w),Ae(T)]],P.transform=b,P.color=_e.toUnitRGBA(a.visibleOuterColor),S.color=_e.toUnitRGBA(a.visibleInnerColor)):(P.geometry=[[Ae(w),Ae(I)]],P.transform=b,P.color=_e.toUnitRGBA(a.occludedOuterColor),L.geometry=[[Ae(I),Ae(T)]],L.transform=b,S.color=_e.toUnitRGBA(a.occludedInnerColor)):(V.geometry=[[Ae(w),Ae(T)]],V.transform=b,S.color=_e.toUnitRGBA(a.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(t){const{computationResult:n}=t,{occludedOuterColor:o,visibleOuterColor:a}=mt;return{computationResult:n,occludedOuterColor:o,visibleOuterColor:a,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(t){const n=this._computationHandles;if(n.has(t))return;const o=this._createLineOfSightVisualization();n.add([this._updatingHandles.add((()=>this._getLineOfSightVisualizationDependencies(t)),(n=>this._updateLineOfSightVisualization(t,o,n)),{initial:!0,equals:()=>!1}),ue((()=>this._destroyLineOfSightVisualization(o)))],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(t=>this._onComputationsCollectionChange(t)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:n}){for(const o of n)this._disconnectComputation(o);for(const o of t)this._connectComputation(o)}_createObserverVisualization(){const t=_e.toUnitRGBA(mt.visibleInnerColor),n=new Ke({view:this.view,color:t,...Tt,isDecoration:this.isDecoration});this._observerVisualElement=n,this.addHandles(this._updatingHandles.add((()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible})),(({observer:t,interactiveAndEditable:o,visible:a})=>{null!=t&&!o&&a?(n.geometry=t,this._observerVisualElement.attached=!0):n.attached=!1}),oe))}};t([n({constructOnly:!0})],wt.prototype,"analysis",void 0),t([n({constructOnly:!0})],wt.prototype,"analysisViewData",void 0),t([n({constructOnly:!0})],wt.prototype,"view",void 0),t([n({readOnly:!0})],wt.prototype,"visible",null),t([n({constructOnly:!0})],wt.prototype,"isDecoration",void 0),t([n()],wt.prototype,"updating",null),t([n()],wt.prototype,"interactiveAndEditable",null),t([n()],wt.prototype,"test",null),wt=t([o("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],wt);const Tt={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},Ot=r(),It=r(),Pt=r(),Lt=He();let Vt=class extends(Me(W.EventedMixin(a))){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new De,this.elevationAlignedObserver=null,this.observerEngineLocation=r(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,n=this.analysis;this._analysisController=new rt({analysis:n,analysisViewData:this,view:t}),this._analysisVisualization=new wt({analysis:n,analysisViewData:this,view:t,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",(t=>{t.target!==this.cursorTarget&&this.emit("result-changed",t)})),Ze(this,ft)])}destroy(){qe(this),this._analysisController=Ie(this._analysisController),this._analysisVisualization=Ie(this._analysisVisualization)}get results(){return this.computations.map((t=>t.result))}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return null!=this._analysisController&&this._analysisController.updating||null!=this._analysisVisualization&&this._analysisVisualization.updating}getResultForTarget(t){var n;return null==(n=this.computations.find((n=>n.target===t)))?void 0:n.result}get testInfo(){}};t([n({readOnly:!0})],Vt.prototype,"type",void 0),t([n({constructOnly:!0,nonNullable:!0})],Vt.prototype,"analysis",void 0),t([n()],Vt.prototype,"tool",void 0),t([n({readOnly:!0})],Vt.prototype,"results",null),t([n()],Vt.prototype,"priority",null),t([n()],Vt.prototype,"computations",void 0),t([n()],Vt.prototype,"elevationAlignedObserver",void 0),t([n()],Vt.prototype,"observerEngineLocation",void 0),t([n()],Vt.prototype,"cursorTarget",void 0),t([n()],Vt.prototype,"updating",null),t([n()],Vt.prototype,"editable",void 0),t([n()],Vt.prototype,"_analysisController",void 0),t([n()],Vt.prototype,"_analysisVisualization",void 0),Vt=t([o("esri.views.3d.analysis.LineOfSightAnalysisView3D")],Vt);const Rt=Vt;export{Rt as default};
