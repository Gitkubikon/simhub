import{ek as r,eO as y,b as m,el as f,ey as b}from"./index-DSIPxOWi.js";import{t as g,i as M,b as P}from"./fetchService-CJQ8-6Ub.js";class e{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(r,y){const m=this._serviceMetadatas.get(r);if(m)return m;const f=await g(r,y);return this._serviceMetadatas.set(r,f),f}async fetchItemData(r){const{id:y}=r;if(!y)return null;const{_itemDatas:m}=this;if(m.has(y))return m.get(y);const f=await r.fetchData();return m.set(y,f),f}async fetchCustomParameters(r,y){const m=await this.fetchItemData(r);return m&&"object"==typeof m&&(y?y(m):m.customParameters)||null}}function t(r){const y={id:r.id,name:r.name},m=M(r.type);return"FeatureLayer"!==m&&(y.layerType=m),y}async function a(r,y,m){var f,b,g;if(null==(null==r?void 0:r.layers)||null==(null==r?void 0:r.tables)){const M=await m.fetchServiceMetadata(y,{customParameters:null==(f=s(r))?void 0:f.customParameters});(r=r||{}).layers=r.layers||(null==(b=null==M?void 0:M.layers)?void 0:b.map(t)),r.tables=r.tables||(null==(g=null==M?void 0:M.tables)?void 0:g.map(t))}return r}function s(r){if(!r)return null;const{layers:y,tables:m}=r;return(null==y?void 0:y.length)?y[0]:(null==m?void 0:m.length)?m[0]:null}function n(r,y){return[...r.layers||[],...r.tables||[]].filter((({layerType:r})=>"FeatureLayer"===y?!r:r===y))}function u(r){var y,m;return((null==(y=null==r?void 0:r.layers)?void 0:y.length)??0)+((null==(m=null==r?void 0:r.tables)?void 0:m.length)??0)}function c(r){switch(r){case"catalog":return"CatalogLayer";case"feature":return"FeatureLayer";case"oriented-imagery":return"OrientedImageryLayer";case"subtype-group":return"SubtypeGroupLayer"}return null}function i(r){switch(r){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":return"SubtypeGroupLayer"}return"FeatureLayer"}async function o(y,m,f){var b,g,M,P;if(!(null==y?void 0:y.url))return m??{};if(m??(m={}),!m.layers){const r=await f.fetchServiceMetadata(y.url);m.layers=null==(b=r.layers)?void 0:b.map(t)}const{serverUrl:T,portalItem:C}=await r(y.url,{sceneLayerItem:y,customParameters:null==(g=s(m))?void 0:g.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==T)return m.tables=[],m;if(!m.tables&&C){const r=await C.fetchData();if(null==r?void 0:r.tables)m.tables=r.tables.map(t);else{const y=await f.fetchServiceMetadata(T,{customParameters:null==(M=s(r))?void 0:M.customParameters});m.tables=null==(P=null==y?void 0:y.tables)?void 0:P.map(t)}}if(m.tables)for(const r of m.tables)r.url=`${T}/${r.id}`;return m}async function d(y,g){switch(y.type){case"3DTiles Service":return{className:"IntegratedMesh3DTilesLayer"};case"CSV":return{className:"CSVLayer"};case"Feature Collection":return async function v(r){await r.load();const y=b(r,"Map Notes"),m=b(r,"Markup");if(y||m)return{className:"MapNotesLayer"};if(b(r,"Route Layer"))return{className:"RouteLayer"};return 1===u(await r.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(y);case"Feature Service":return async function S(r,y){const m=await J(r,y);if("object"==typeof m){const{sourceJSON:r,className:y}=m,f={sourceJSON:r};return null!=m.id&&(f.layerId=m.id),{className:y||"FeatureLayer",properties:f}}return{className:"GroupLayer"}}(y,g);case"Feed":case"Stream Service":return{className:"StreamLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"Group Layer":return{className:"GroupLayer"};case"Image Service":return async function I(r,y){var m,f,b;await r.load();const g=(null==(m=r.typeKeywords)?void 0:m.map((r=>r.toLowerCase())))??[];if(g.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(g.includes("tiled imagery"))return{className:"ImageryTileLayer"};const M=await y.fetchItemData(r),P=null==M?void 0:M.layerType;if("ArcGISTiledImageServiceLayer"===P)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===P)return{className:"ImageryLayer"};const T=await y.fetchServiceMetadata(r.url,{customParameters:await y.fetchCustomParameters(r)}),C=null==(f=T.cacheType)?void 0:f.toLowerCase(),G=null==(b=T.capabilities)?void 0:b.toLowerCase().includes("tilesonly");return"map"===C||G?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(y,g);case"KML":return{className:"KMLLayer"};case"Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case"Map Service":return async function N(r,y){return await async function D(r,y){const{tileInfo:m}=await y.fetchServiceMetadata(r.url,{customParameters:await y.fetchCustomParameters(r)});return m}(r,y)?{className:"TileLayer"}:{className:"MapImageLayer"}}(y,g);case"Media Layer":return{className:"MediaLayer"};case"Scene Service":return async function h(y,m){var b;const g=await J(y,m,(async()=>{try{if(!y.url)return[];const{serverUrl:f}=await r(y.url,{sceneLayerItem:y}),b=await m.fetchServiceMetadata(f);return(null==b?void 0:b.tables)??[]}catch{return[]}}));if("object"==typeof g){const r={};let M;if(null!=g.id?(r.layerId=g.id,M=`${y.url}/layers/${g.id}`):M=y.url,null==(b=y.typeKeywords)?void 0:b.length)for(const m of Object.keys(f))if(y.typeKeywords.includes(m))return{className:f[m]};const P=await m.fetchServiceMetadata(M,{customParameters:await m.fetchCustomParameters(y,(r=>{var y;return null==(y=s(r))?void 0:y.customParameters}))});return{className:f[null==P?void 0:P.layerType]||"SceneLayer",properties:r}}if(!1===g){const r=await m.fetchServiceMetadata(y.url);if("Voxel"===(null==r?void 0:r.layerType))return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(y,g);case"Vector Tile Service":return{className:"VectorTileLayer"};case"WFS":return{className:"WFSLayer"};case"WMS":return{className:"WMSLayer"};case"WMTS":return{className:"WMTSLayer"};default:throw new m("portal:unknown-item-type","Unknown item type '${type}'",{type:y.type})}}async function J(r,y,m){const{url:f,type:b}=r,g="Feature Service"===b;if(!f)return{};if(/\/\d+$/.test(f)){if(g){const m=await y.fetchServiceMetadata(f,{customParameters:await y.fetchCustomParameters(r,(r=>{var y;return null==(y=s(r))?void 0:y.customParameters}))});return{id:m.id,className:M(m.type),sourceJSON:m}}return{}}await r.load();let P=await y.fetchItemData(r);if(g){const r=await a(P,f,y),m=O(r);if("object"==typeof m){const y=function l(r,y){return null==y?null:[...r.layers||[],...r.tables||[]].find((r=>r.id===y))}(r,m.id);m.className=i(null==y?void 0:y.layerType)}return m}if("Scene Service"===b&&(P=await o(r,P,y)),u(P)>0)return O(P);const T=await y.fetchServiceMetadata(f);return m&&(T.tables=await m()),O(T)}function O(r){var y;return 1===u(r)&&{id:null==(y=s(r))?void 0:y.id}}const T=Object.freeze(Object.defineProperty({__proto__:null,fromItem:async function p(r){let{portalItem:m}=r;!m||m instanceof y||(m=new y(m));const f=await async function L(r){await r.load();const y=new e;return async function w(r){const y=r.className,m=P[y];return{constructor:await m(),properties:r.properties}}(await d(r,y))}(m);return new f.constructor({portalItem:m,...f.properties})},selectLayerClassPath:d},Symbol.toStringTag,{value:"Module"}));export{a,c,d,e,i,n,o,T as p,s,t,u};
