import{e,y as t,a as r,bk as i,gw as o,c8 as s,bn as n,j0 as a,en as l,eo as d,ep as p,g4 as u,eq as y,gc as c,gd as f,fP as h,gC as v,er as g,iJ as m,o4 as b,b as w,bF as I,bZ as S,j1 as x,gj as C,gk as P,n as F,gl as T,iO as R,iP as j,et as q,gm as B,g7 as _,bj as N,iU as V,Z as L}from"./index-DSIPxOWi.js";import{c as E,d as O,b as A,a as k}from"./PointCloudUniqueValueRenderer-CAfl8sj6.js";let D=class extends i{constructor(e){super(e),this.field=null,this.type=null}clone(){return null}};e([t({type:String,json:{write:{enabled:!0,isRequired:!0}}})],D.prototype,"field",void 0),e([t({readOnly:!0,nonNullable:!0,json:{read:!1}})],D.prototype,"type",void 0),D=e([r("esri.layers.pointCloudFilters.PointCloudFilter")],D);const K=D;var $;let G=$=class extends K{constructor(e){super(e),this.requiredClearBits=null,this.requiredSetBits=null,this.type="bitfield"}clone(){return new $({field:this.field,requiredClearBits:n(this.requiredClearBits),requiredSetBits:n(this.requiredSetBits)})}};e([t({type:[o],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredSetBits}}}}})],G.prototype,"requiredClearBits",void 0),e([t({type:[o],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredClearBits}}}}})],G.prototype,"requiredSetBits",void 0),e([s({pointCloudBitfieldFilter:"bitfield"})],G.prototype,"type",void 0),G=$=e([r("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")],G);const M=G;var U;let Z=U=class extends K{constructor(e){super(e),this.includedReturns=[],this.type="return"}clone(){return new U({field:this.field,includedReturns:n(this.includedReturns)})}};e([t({type:[["firstOfMany","last","lastOfMany","single"]],json:{write:{enabled:!0,isRequired:!0}}})],Z.prototype,"includedReturns",void 0),e([s({pointCloudReturnFilter:"return"})],Z.prototype,"type",void 0),Z=U=e([r("esri.layers.pointCloudFilters.PointCloudReturnFilter")],Z);const z=Z;var J;let H=J=class extends K{constructor(e){super(e),this.mode="exclude",this.type="value",this.values=[]}clone(){return new J({field:this.field,mode:this.mode,values:n(this.values)})}};e([t({type:["exclude","include"],json:{write:{enabled:!0,isRequired:!0}}})],H.prototype,"mode",void 0),e([s({pointCloudValueFilter:"value"})],H.prototype,"type",void 0),e([t({type:[Number],json:{write:{enabled:!0,isRequired:!0}}})],H.prototype,"values",void 0),H=J=e([r("esri.layers.pointCloudFilters.PointCloudValueFilter")],H);const Q={key:"type",base:K,typeMap:{value:H,bitfield:M,return:z}};var W;let X=W=class extends E{constructor(e){super(e),this.type="point-cloud-rgb",this.field=null}clone(){return new W({...this.cloneProperties(),field:n(this.field)})}};e([s({pointCloudRGBRenderer:"point-cloud-rgb"})],X.prototype,"type",void 0),e([t({type:String,json:{write:!0}})],X.prototype,"field",void 0),X=W=e([r("esri.renderers.PointCloudRGBRenderer")],X);const Y={key:"type",base:E,typeMap:{"point-cloud-class-breaks":O,"point-cloud-rgb":X,"point-cloud-stretch":A,"point-cloud-unique-value":k},errorContext:"renderer"},ee=V();let te=class extends(a(l(d(p(u(y(c(f(L))))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const t=this.fieldsIndex.get(e);return(null==t?void 0:t.domain)?t.domain:null}readServiceFields(e,t,r){return Array.isArray(e)?e.map((e=>{const t=new h;return"FieldTypeInteger"===e.type&&((e=n(e)).type="esriFieldTypeInteger"),t.read(e,r),t})):Array.isArray(t.attributeStorageInfo)?t.attributeStorageInfo.map((e=>new h({name:e.name,type:"ELEVATION"===e.name?"double":"integer"}))):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,t,r,i){v("layerDefinition.drawingInfo.renderer",e.write({},i),t)}load(e){const t=null!=e?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(g).then((()=>this._fetchService(t)));return this.addResolvingPromise(r),Promise.resolve(this)}createPopupTemplate(e){const t=m(this,e);return t&&(this._formatPopupTemplateReturnsField(t),this._formatPopupTemplateRGBField(t)),t}_formatPopupTemplateReturnsField(e){var t;const r=this.fieldsIndex.get("RETURNS");if(!r)return;const i=null==(t=e.fieldInfos)?void 0:t.find((e=>e.fieldName===r.name));if(!i)return;const o=new b({name:"pcl-returns-decoded",title:r.alias||r.name,expression:`\n        var returnValue = $feature.${r.name};\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      `});e.expressionInfos=[...e.expressionInfos||[],o],i.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){var t;const r=this.fieldsIndex.get("RGB");if(!r)return;const i=null==(t=e.fieldInfos)?void 0:t.find((e=>e.fieldName===r.name));if(!i)return;const o=new b({name:"pcl-rgb-decoded",title:r.alias||r.name,expression:`\n        var rgb = $feature.${r.name};\n        var red = Floor(rgb / 65536, 0);\n        var green = Floor((rgb - (red * 65536)) / 256,0);\n        var blue = rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      `});e.expressionInfos=[...e.expressionInfos||[],o],i.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,t){var r;if(await this.load(t),!this.attributeStorageInfo)throw new w("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const i=this.fieldsIndex.get(e);if(!i)throw new w("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.attributeStorageInfo)if(o.name===i.name){const e=I((null==(r=this.parsedUrl)?void 0:r.path)??"",`./statistics/${o.key}`);return S(e,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new w("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(x.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(x.SAVE,e)}validateLayer(e){if(e.layerType&&"PointCloud"!==e.layerType)throw new w("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new w("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new w("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some((t=>t.name===e))}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;C(F.getLogger(this),P("Point cloud layers","absolute-height",e)),C(F.getLogger(this),T("Point cloud layers",e))}};e([t({type:["PointCloudLayer"]})],te.prototype,"operationalLayerType",void 0),e([t(R)],te.prototype,"popupEnabled",void 0),e([t({type:j,json:{name:"popupInfo",write:!0}})],te.prototype,"popupTemplate",void 0),e([t({readOnly:!0,json:{read:!1}})],te.prototype,"defaultPopupTemplate",null),e([t({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],te.prototype,"opacity",void 0),e([t({type:["show","hide"]})],te.prototype,"listMode",void 0),e([t({types:[Q],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],te.prototype,"filters",void 0),e([t({type:[h]})],te.prototype,"fields",void 0),e([t(ee.fieldsIndex)],te.prototype,"fieldsIndex",void 0),e([q("service","fields",["fields","attributeStorageInfo"])],te.prototype,"readServiceFields",null),e([t(ee.outFields)],te.prototype,"outFields",void 0),e([t({readOnly:!0})],te.prototype,"attributeStorageInfo",void 0),e([t(B)],te.prototype,"elevationInfo",null),e([t({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],te.prototype,"path",void 0),e([t(_)],te.prototype,"legendEnabled",void 0),e([t({types:Y,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:Y},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],te.prototype,"renderer",void 0),e([N("renderer")],te.prototype,"writeRenderer",null),e([t({json:{read:!1},readOnly:!0})],te.prototype,"type",void 0),te=e([r("esri.layers.PointCloudLayer")],te);const re=te;export{re as default};
