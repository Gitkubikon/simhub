import{bZ as e,fJ as t,b as n,fK as a,fL as r,fM as o,fN as i,I as s,G as u,fO as l,d8 as p,fP as c,fQ as d,fR as f,az as m,fd as y,fh as g}from"./index-DSIPxOWi.js";import{u as w}from"./geojson-CFL0cZN1.js";import{o as b,n as h}from"./xmlUtils-DL7icO0w.js";const T="xlink:href",F="2.0.0",S="__esri_wfs_id__",x="wfs-layer:getWFSLayerTypeInfo-error",C="wfs-layer:empty-service",E="wfs-layer:feature-type-not-found",R="wfs-layer:geojson-not-supported",k="wfs-layer:kvp-encoding-not-supported",P="wfs-layer:malformed-json",A="wfs-layer:unknown-geometry-type",N="wfs-layer:unknown-field-type",G="wfs-layer:unsupported-spatial-reference",j="wfs-layer:unsupported-wfs-version";async function v(i,s){const u=function U(e){const a=te(e);(function ne(e){var t;const a=null==(t=e.firstElementChild)?void 0:t.getAttribute("version");if(a&&a!==F)throw new n(j,`Unsupported WFS version ${a}. Supported version: ${F}`)})(a),ae(a);const r=a.firstElementChild,o=t(function O(e){return h(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},n=new Set;return b(e,{Name:e=>{const{name:n,prefix:a}=re(e.textContent);t.typeName=`${a}:${n}`,t.name=n,t.namespacePrefix=a,t.namespaceUri=e.lookupNamespaceURI(a)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=m.fromJSON(function $(e){let t,n,a,r;for(const o of e.children)switch(o.localName){case"LowerCorner":[t,n]=o.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[a,r]=o.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:n,xmax:a,ymax:r,spatialReference:y}}(e))},DefaultCRS:e=>{const a=V(e);a&&(t.defaultSpatialReference=a,n.add(a))},OtherCRS:e=>{const t=V(e);t&&n.add(t)}}),t.title||(t.title=t.name),n.add(4326),t.supportedSpatialReferences.push(...n),t}}})}(r));return{operations:D(r),get featureTypes(){return Array.from(o())},readFeatureTypes:o}}((await e(i,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:F,...null==s?void 0:s.customParameters},signal:null==s?void 0:s.signal})).data);return function L(e,t){a(e)&&(r(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=o(t.operations.DescribeFeatureType.url)),r(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=o(t.operations.GetFeature.url)))}(i,u),u}const I=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function M(e){for(const t of I){const n=e.findIndex((e=>e.toLowerCase()===t));if(n>=0)return e[n]}return null}function D(e){let t=!1;const a={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},r=[],o=[];if(b(e,{OperationsMetadata:{Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&r.push(e)}}}},Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{a.GetCapabilities.url=e.getAttribute(T)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{a.DescribeFeatureType.url=e.getAttribute(T)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{a.GetFeature.url=e.getAttribute(T)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&o.push(e)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{a.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),a.GetFeature.outputFormat=M(o)??M(r),!t)throw new n(k,"WFS service doesn't support key/value pair (KVP) encoding");if(null==a.GetFeature.outputFormat)throw new n(R,"WFS service doesn't support GeoJSON output format");return a}function V(e){var t,n,a;const r=parseInt((null==(a=null==(n=null==(t=e.textContent)?void 0:t.match(/(?<wkid>\d+$)/i))?void 0:n.groups)?void 0:a.wkid)??"",10);if(!Number.isNaN(r))return r}function Y(e,t,n){return i(e,(e=>n?e.name===t&&e.namespaceUri===n:e.typeName===t||e.name===t))}async function W(e,t,a,r={}){const{featureType:o,extent:i}=await async function X(e,t,a,r={}){const o=e.readFeatureTypes(),i=t?Y(o,t,a):o.next().value,{spatialReference:c=new s({wkid:null==i?void 0:i.defaultSpatialReference})}=r;if(null==i)throw t?new n(E,`The type '${t}' could not be found in the service`):new n(C,"The service is empty");let d=i.extent;if(d&&!u(d.spatialReference,c))try{await l(d.spatialReference,c,void 0,r),d=p(d,c)}catch{throw new n(G,"Projection not supported")}return{extent:d,spatialReference:c,featureType:i}}(e,t,a,r),{spatialReference:c}=oe(e.operations.GetFeature.url,o,r.spatialReference),{fields:d,geometryType:f,swapXY:m,objectIdField:y,geometryField:g}=await async function q(e,t,a,r={}){var o,i,s;const{typeName:u}=t,[l,p]=await Promise.allSettled([J(e.operations.DescribeFeatureType.url,u,r),_(e,u,a,r)]),p2=e=>new n(x,`An error occurred while getting info about the feature type '${u}'`,{error:e});if("rejected"===l.status)throw p2(l.reason);if("rejected"===p.status)throw p2(p.reason);const{fields:c,errors:d}=l.value??{},f=(null==(o=l.value)?void 0:o.geometryType)||(null==(i=p.value)?void 0:i.geometryType),m=(null==(s=p.value)?void 0:s.swapXY)??!1;if(null==f)throw new n(A,`The geometry type could not be determined for type '${u}`,{typeName:u,geometryType:f,fields:c,errors:d});return{...z(c??[]),geometryType:f,swapXY:m}}(e,o,c,r);return{url:e.operations.GetCapabilities.url,name:o.name,namespaceUri:o.namespaceUri,fields:d,geometryField:g,geometryType:f,objectIdField:y,spatialReference:r.spatialReference??new s({wkid:o.defaultSpatialReference}),extent:i,swapXY:m,wfsCapabilities:e,customParameters:r.customParameters}}function z(e){const t=e.find((e=>"geometry"===e.type));let n=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),n||(n=new c({name:S,type:"oid",alias:S}),e.unshift(n)),{geometryField:(null==t?void 0:t.name)??null,objectIdField:n.name,fields:e}}async function _(t,n,a,r={}){var o;let i,s=!1;const[u,l]=await Promise.all([K(t.operations.GetFeature.url,n,a,t.operations.GetFeature.outputFormat,{...r,count:1}),e(t.operations.GetFeature.url,{responseType:"text",query:Z(n,a,void 0,{...r,count:1}),signal:null==r?void 0:r.signal})]),p="FeatureCollection"===u.type&&(null==(o=u.features[0])?void 0:o.geometry);if(p){let e;switch(i=d.fromJSON(w(p.type)),p.type){case"Point":e=p.coordinates;break;case"LineString":case"MultiPoint":e=p.coordinates[0];break;case"MultiLineString":case"Polygon":e=p.coordinates[0][0];break;case"MultiPolygon":e=p.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(l.data);if(t){const n=e[0].toFixed(3),a=e[1].toFixed(3),r=parseFloat(t[1]).toFixed(3);n===parseFloat(t[2]).toFixed(3)&&a===r&&(s=!0)}}return{geometryType:i,swapXY:s}}async function J(t,a,r){return function Q(e,t){const{name:a}=re(e),r=te(t);ae(r);const o=i(h(r.firstElementChild,{element:e=>e}),(e=>e.getAttribute("name")===a));if(null!=o){const e=o.getAttribute("type"),t=e?i(h(r.firstElementChild,{complexType:e=>e}),(t=>t.getAttribute("name")===re(e).name)):i(h(o,{complexType:e=>e}),(()=>!0));if(t)return function B(e){const t=[],a=[];let r;const o=h(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const i of o){const o=i.getAttribute("name");if(!o)continue;let s,u;if(i.hasAttribute("type")?s=re(i.getAttribute("type")).name:b(i,{simpleType:{restriction:e=>(s=re(e.getAttribute("base")).name,{maxLength:e=>{u=+e.getAttribute("value")}})}}),!s)continue;const l="true"===i.getAttribute("nillable");let p=!1;switch(s.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":a.push(new c({name:o,alias:o,type:"integer",nullable:l,length:g("integer")}));break;case"float":case"double":case"decimal":a.push(new c({name:o,alias:o,type:"double",nullable:l,length:g("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":a.push(new c({name:o,alias:o,type:"string",nullable:l,length:u??g("string")}));break;case"datetime":case"date":a.push(new c({name:o,alias:o,type:"date",nullable:l,length:u??g("date")}));break;case"pointpropertytype":r="point",p=!0;break;case"multipointpropertytype":r="multipoint",p=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":r="polyline",p=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":r="polygon",p=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":p=!0,t.push(new n(A,`geometry type '${s}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:t.push(new n(N,`Unknown field type '${s}'`,{type:(new XMLSerializer).serializeToString(e)}))}p&&a.push(new c({name:o,alias:o,type:"geometry",nullable:l}))}for(const n of a)if("integer"===n.type&&!n.nullable&&H.has(n.name.toLowerCase())){n.type="oid";break}return{geometryType:r,fields:a,errors:t}}(t)}throw new n(E,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(r)})}(a,(await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:F,TYPENAME:a,TYPENAMES:a,...null==r?void 0:r.customParameters},signal:null==r?void 0:r.signal})).data)}const H=new Set(["objectid","fid"]);async function K(t,a,r,o,i){let{data:s}=await e(t,{responseType:"text",query:Z(a,r,o,i),signal:null==i?void 0:i.signal});s=s.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(s)}catch(u){throw new n(P,"Error while parsing the response",{response:s,error:u})}}function Z(e,t,n,a){const r="number"==typeof t?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:e,OUTPUTFORMAT:n,SRSNAME:"EPSG:"+r,STARTINDEX:null==a?void 0:a.startIndex,COUNT:null==a?void 0:a.count,...null==a?void 0:a.customParameters}}async function ee(t,n,a){const r=await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:n,RESULTTYPE:"hits",...null==a?void 0:a.customParameters},signal:null==a?void 0:a.signal}),o=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(r.data);if(null==o?void 0:o.groups)return+o.groups.numberMatched}function te(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function re(e){const[t,n]=e.split(":");return{prefix:n?t:"",name:n??t}}function ae(e){let t="",a="";if(b(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{a=e.textContent}})}),t)throw new n(`wfs-layer:${t}`,a)}function oe(e,t,n){const a={wkid:t.defaultSpatialReference},r=null!=(null==n?void 0:n.wkid)?{wkid:n.wkid}:a;return{spatialReference:r,getFeatureSpatialReference:f(e)||r.wkid&&t.supportedSpatialReferences.includes(r.wkid)?{wkid:r.wkid}:{wkid:t.defaultSpatialReference}}}export{K,S,W,Y,ee as e,oe as o,v,z};
