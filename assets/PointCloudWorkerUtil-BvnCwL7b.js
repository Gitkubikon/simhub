import{d2 as e,d3 as o,d4 as r,d5 as l}from"./index-DSIPxOWi.js";import{a as t,b as n,d as s}from"./PointCloudUniqueValueRenderer-CAfl8sj6.js";function i(e,o,r,l){const{rendererJSON:c,isRGBRenderer:b}=e;let g=null,v=null;if(o&&b)g=o;else if(o&&"pointCloudUniqueValueRenderer"===(null==c?void 0:c.type)){v=t.fromJSON(c);const e=v.colorUniqueValueInfos;g=new Uint8Array(3*l);const r=d(v.fieldTransformType);for(let t=0;t<l;t++){const l=(r?r(o[t]):o[t])+"";for(let o=0;o<e.length;o++)if(e[o].values.includes(l)){g[3*t]=e[o].color.r,g[3*t+1]=e[o].color.g,g[3*t+2]=e[o].color.b;break}}}else if(o&&"pointCloudStretchRenderer"===(null==c?void 0:c.type)){v=n.fromJSON(c);const e=v.stops;g=new Uint8Array(3*l);const r=d(v.fieldTransformType);for(let t=0;t<l;t++){const l=r?r(o[t]):o[t],n=e.length-1;if(l<e[0].value)g[3*t]=e[0].color.r,g[3*t+1]=e[0].color.g,g[3*t+2]=e[0].color.b;else if(l>=e[n].value)g[3*t]=e[n].color.r,g[3*t+1]=e[n].color.g,g[3*t+2]=e[n].color.b;else for(let o=1;o<e.length;o++)if(l<e[o].value){const r=(l-e[o-1].value)/(e[o].value-e[o-1].value);g[3*t]=e[o].color.r*r+e[o-1].color.r*(1-r),g[3*t+1]=e[o].color.g*r+e[o-1].color.g*(1-r),g[3*t+2]=e[o].color.b*r+e[o-1].color.b*(1-r);break}}}else if(o&&"pointCloudClassBreaksRenderer"===(null==c?void 0:c.type)){v=s.fromJSON(c);const e=v.colorClassBreakInfos;g=new Uint8Array(3*l);const r=d(v.fieldTransformType);for(let t=0;t<l;t++){const l=r?r(o[t]):o[t];for(let o=0;o<e.length;o++)if(l>=e[o].minValue&&l<=e[o].maxValue){g[3*t]=e[o].color.r,g[3*t+1]=e[o].color.g,g[3*t+2]=e[o].color.b;break}}}else g=new Uint8Array(3*l).fill(255);if(r&&(null==v?void 0:v.colorModulation)){const e=v.colorModulation.minValue,o=v.colorModulation.maxValue,t=.3;for(let n=0;n<l;n++){const l=r[n],s=l>=o?1:l<=e?t:t+(1-t)*(l-e)/(o-e);g[3*n]=s*g[3*n],g[3*n+1]=s*g[3*n+1],g[3*n+2]=s*g[3*n+2]}}return g}function u(l,t){if(null==l.encoding||""===l.encoding){const r=e(t,l);if(null==r.vertexAttributes.position)return;const n=o(t,r.vertexAttributes.position),s=r.header.fields,c=[s.offsetX,s.offsetY,s.offsetZ],b=[s.scaleX,s.scaleY,s.scaleZ],g=n.length/3,v=new Float64Array(3*g);for(let e=0;e<g;e++)v[3*e]=n[3*e]*b[0]+c[0],v[3*e+1]=n[3*e+1]*b[1]+c[1],v[3*e+2]=n[3*e+2]*b[2]+c[2];return v}if("lepcc-xyz"===l.encoding)return r(t).result}function c$1(e,o,r){return(null==e?void 0:e.attributeInfo.useElevation)?o?a(o,r):null:(null==e?void 0:e.attributeInfo.storageInfo)?l(e.attributeInfo.storageInfo,e.buffer,r):null}function a(e,o){const r=new Float64Array(o);for(let l=0;l<o;l++)r[l]=e[3*l+2];return r}function f(e,o,r,l,t){const n=e.length/3;let s=0;for(let c=0;c<n;c++){let n=!0;for(let e=0;e<l.length&&n;e++){const{filterJSON:o}=l[e],r=t[e].values[c];switch(o.type){case"pointCloudValueFilter":{const e="exclude"===o.mode;o.values.includes(r)===e&&(n=!1);break}case"pointCloudBitfieldFilter":{const e=p(o.requiredSetBits),l=p(o.requiredClearBits);((r&e)!==e||r&l)&&(n=!1);break}case"pointCloudReturnFilter":{const e=15&r,l=r>>>4&15,t=l>1,s=1===e,c=e===l;let b=!1;for(const r of o.includedReturns)if("last"===r&&c||"firstOfMany"===r&&s&&t||"lastOfMany"===r&&c&&t||"single"===r&&!t){b=!0;break}b||(n=!1);break}}}n&&(r[s]=c,e[3*s]=e[3*c],e[3*s+1]=e[3*c+1],e[3*s+2]=e[3*c+2],o[3*s]=o[3*c],o[3*s+1]=o[3*c+1],o[3*s+2]=o[3*c+2],s++)}return s}function d(e){switch(e){default:case null:case"none":return e=>e;case"low-four-bit":return e=>15&e;case"high-four-bit":return e=>(240&e)>>4;case"absolute-value":return e=>Math.abs(e);case"modulo-ten":return e=>e%10}}function p(e){let o=0;for(const r of e||[])o|=1<<r;return o}export{a,c$1 as c,f,i,u};
