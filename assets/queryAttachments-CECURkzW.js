import{gV as t,gW as e,bZ as o}from"./index-DSIPxOWi.js";import{t as n}from"./query-C2USZ63O.js";import{a as r}from"./AttachmentInfo-u2TyaLjZ.js";import"./normalizeUtils-BrH-PrZy.js";import"./normalizeUtilsCommon-BU8xfl77.js";import"./pbfQueryUtils-DUjEbwA9.js";import"./pbf-B53Txr8m.js";function s(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e}function a(o,n){const i={};for(const p of n){const{parentObjectId:n,parentGlobalId:u,attachmentInfos:f}=p;for(const p of f){const{id:f}=p,h=t(e(`${o.path}/${n}/attachments/${f}`)),j=r.fromJSON(p);j.set({url:h,parentObjectId:n,parentGlobalId:u}),i[n]?i[n].push(j):i[n]=[j]}}return i}function c(t,e,r){let i={query:n({...t.query,f:"json",...s(e)})};return r&&(i={...r,...i,query:{...r.query,...i.query}}),o(t.path+"/queryAttachments",i).then((t=>t.data.attachmentGroups))}async function m(t,e,n){const{objectIds:r}=e,i=[];for(const p of r)i.push(o(t.path+"/"+p+"/attachments",n));return Promise.all(i).then((t=>r.map(((e,o)=>({parentObjectId:e,attachmentInfos:t[o].data.attachmentInfos})))))}export{c as executeAttachmentQuery,m as fetchAttachments,a as processAttachmentQueryResult};
