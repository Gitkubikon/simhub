const __vite__fileDeps=["assets/DimensionAnalysisView3D-rpfIQ-hz.js","assets/index-DSIPxOWi.js","assets/index-B_7YxLDX.css","assets/AnalysisView3D-CNsY6W7Z.js","assets/LengthDimension-CqUogCKq.js","assets/TextOverlayItem-BcN_gvXw.js","assets/unitFormatUtils-B9MPZ1wj.js","assets/Segment-ByPzCwlk.js","assets/LineVisualElement-EjMrPPob.js","assets/geodesicLengthMeasurementUtils-Pq-FipkN.js","assets/geometryEngine-Bp1TD6MM.js","assets/geometryEngineBase-9EI9fooq.js","assets/hydrated-DE1HcVsK.js","assets/SnappingOperation-CpAicAwN.js","assets/ExtendedLineVisualElement-C_fk7Jva.js","assets/vec4f32-APunXZaC.js","assets/EngineVisualElement-Cxk2Aaf7.js","assets/Laserlines.glsl-C_dc6leb.js","assets/PointVisualElement-kTFgcxXB.js","assets/RightAngleQuadVisualElement-CPtUkCyd.js","assets/SnappingManagerPool-BslN_FM5.js","assets/geometry2dUtils-4c9qUvJ6.js","assets/floorFilterUtils-2NbRkqHK.js","assets/keybindings-DkkJsHdp.js","assets/PointSnappingHint-Ct-FTQTL.js","assets/ShadedColorMaterial.glsl-C-XXTK_B.js","assets/EditGeometryOperations-sseMUvB1.js","assets/dehydratedFeatureComparison-dI04k89u.js","assets/dragEventPipeline3D-C-8mYpU2.js","assets/ImageMaterial.glsl-V3C9c4TG.js","assets/memoize-Dzy0sPL8.js","assets/Factory-CfOltYNW.js","assets/analysisViewUtils-9rYF9O9W.js","assets/ToolIntersector-ChuFIaMQ.js","assets/projectionUtils-B1mpMSec.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{e as s,y as i,a as e,V as a,b9 as t,g as l,A as r,b as y,x as o,u as w,z as h,c as u,_ as V}from"./index-DSIPxOWi.js";import{l as c}from"./LayerView3D-ApO6iJqK.js";import{y as d}from"./LayerView-DMoB2q_T.js";const n=l=>{let r=class extends l{constructor(...s){super(...s),this.layer=null}get interactive(){return null!=this.analysisView&&this.analysisView.interactive}set interactive(s){null!=this.analysisView&&(this.analysisView.interactive=s)}get results(){return null!=this.analysisView?this.analysisView.results:new a}get selectedDimension(){return null!=this.analysisView?this.analysisView.selectedDimension:null}set selectedDimension(s){null!=this.analysisView&&(this.analysisView.selectedDimension=s)}async createLengthDimensions(s){if(null==this.analysisView)throw t();await this.analysisView.createLengthDimensions(s)}};return s([i()],r.prototype,"layer",void 0),s([i()],r.prototype,"interactive",null),s([i({readOnly:!0})],r.prototype,"results",null),s([i()],r.prototype,"selectedDimension",null),r=s([e("esri.views.layers.DimensionLayerView")],r),r},p="analysis-view-handles";let _=class extends(c(n(d))){constructor(s){super(s),this.type="dimension-3d",this._analysisModule=null}initialize(){this.addHandles(l((()=>this.layer.source),(s=>{this._destroyAnalysisView(),null!=s&&this._createAnalysisView(s)}),r),p)}destroy(){this.removeHandles(p),this._destroyAnalysisView()}isUpdating(){return null!=this._createAnalysisViewTask||null!=this.analysisView&&this.analysisView.updating}async whenAnalysisView(){if(null!=this.analysisView)return this.analysisView;if(null!=this._createAnalysisViewTask)return this._createAnalysisViewTask.promise;throw new y("layerview:no-analysisview-for-analysis","The analysis has not been set on the DimensionLayer of this layer view")}_createAnalysisView(s){const i=o((async e=>(this.analysisView=await this._createAnalysisViewPromise(s,e),this._createAnalysisViewTask===i&&(this._createAnalysisViewTask=null),this.analysisView)));this.addResolvingPromise(i.promise),this._createAnalysisViewTask=i}_destroyAnalysisView(){this.analysisView=w(this.analysisView),this._createAnalysisViewTask=h(this._createAnalysisViewTask)}async _createAnalysisViewPromise(s,i){let e=this._analysisModule;if(null==e){const s=await this._loadAnalysisModule();this._analysisModule=s,e=s}const a=new e.default({analysis:s,view:this.view,parent:this});if(await a.when(),u(i))throw a.destroy(),t();return a}_loadAnalysisModule(){return V((()=>import("./DimensionAnalysisView3D-rpfIQ-hz.js")),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]))}};s([i()],_.prototype,"type",void 0),s([i()],_.prototype,"analysisView",void 0),s([i()],_.prototype,"_createAnalysisViewTask",void 0),_=s([e("esri.views.3d.layers.DimensionLayerView3D")],_);const m=_;export{m as default};
