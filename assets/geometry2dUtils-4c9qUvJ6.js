import{cW as t,cX as n,cY as s,cZ as r,c_ as e,c$ as c,d0 as a,d1 as o}from"./index-DSIPxOWi.js";function m(t,n){return t[0]*n[1]-t[1]*n[0]}function I(s,r,e,u,i=e){return t(p,u,e),t(y,r,i),function E(t,n,s){const r=c(s,n)/a(s);return o(t,s,r)}(h,y,p),n(s,i,h)}function N(n,e,c,a){t(p,e,c);const o=a/s(p);return r(n,c,p,o)}function b(n,s){const e=n.start,c=n.end,a=s.start,o=s.end,i=t(p,c,e),Y=t(L,o,a),l=m(i,Y);if(Math.abs(l)<=f)return[];const x=t(y,e,a),A=m(Y,x)/l,M=m(i,x)/l;if(A>=0){if(M>=0||s.type===u.LINE)return[r(h,e,i,A)]}else if(n.type===u.LINE&&(M>=0||s.type===u.LINE))return[r(h,e,i,A)];return[]}function d(n,s,e){const o=[],i=t(p,n.end,n.start),f=t(L,n.start,s),Y=a(i),l=2*c(i,f),x=l*l-4*Y*(a(f)-e*e);if(0===x){const t=-l/(2*Y);(n.type===u.LINE||t>=0)&&o.push(r(h,n.start,i,t))}else if(x>0){const t=Math.sqrt(x),s=(-l+t)/(2*Y);(n.type===u.LINE||s>=0)&&o.push(r(h,n.start,i,s));const e=(-l-t)/(2*Y);(n.type===u.LINE||e>=0)&&o.push(r(y,n.start,i,e))}return o}var u,i;(i=u||(u={}))[i.RAY=0]="RAY",i[i.LINE=1]="LINE";const f=1e-6,p=e(),L=e(),y=e(),h=e();export{I,N,b,d,u as j};
