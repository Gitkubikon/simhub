import{cD as e,gO as s,du as l,fE as r,cy as t,j as i,e as n,y as u,a as o,bV as a,Q as p}from"./index-DSIPxOWi.js";import{d as h}from"./TileTreeDebugger-CDFY3SV7.js";let c=class extends h{constructor(e){super(e)}getTiles(){const n=this.lv.getVisibleNodes(),u=this.view.renderSpatialReference,o=this.nodeSR;return n.map((e=>function f(e,n,u){const o=e.serviceObbInIndexSR;if(null==o||null==n)return null;s(d,o.quaternion),l(S,o.center),r(S,u,0,S,n,0,1),d[12]=S[0],d[13]=S[1],d[14]=S[2];const a=[[],[],[]];t(S,o.halfSize,d),r(S,n,0,S,u,0,1),a[0].push([S[0],S[1]]),l(S,o.halfSize),S[0]=-S[0],t(S,S,d),r(S,n,0,S,u,0,1),a[0].push([S[0],S[1]]),l(S,o.halfSize),S[0]=-S[0],S[1]=-S[1],t(S,S,d),r(S,n,0,S,u,0,1),a[0].push([S[0],S[1]]),l(S,o.halfSize),S[1]=-S[1],t(S,S,d),r(S,n,0,S,u,0,1),a[0].push([S[0],S[1]]),a[1].push(a[0][0]),a[1].push(a[0][1]),l(S,o.halfSize),S[0]=-S[0],S[2]=-S[2],t(S,S,d),r(S,n,0,S,u,0,1),a[1].push([S[0],S[1]]),l(S,o.halfSize),S[2]=-S[2],t(S,S,d),r(S,n,0,S,u,0,1),a[1].push([S[0],S[1]]),a[2].push(a[0][0]),a[2].push(a[0][3]),l(S,o.halfSize),S[1]=-S[1],S[2]=-S[2],t(S,S,d),r(S,n,0,S,u,0,1),a[2].push([S[0],S[1]]),a[2].push(a[1][3]);const p=new i({rings:a,spatialReference:u});return{lij:[e.level,e.childCount,0],label:e.id,geometry:p}}(e,u,o))).filter(e).sort(((e,s)=>e.lij[0]===s.lij[0]?e.label>s.label?-1:1:e.lij[0]-s.lij[0]))}};n([u({constructOnly:!0})],c.prototype,"lv",void 0),n([u({constructOnly:!0})],c.prototype,"nodeSR",void 0),c=n([o("esri.views.3d.layers.support.I3STreeDebugger")],c);const d=a(),S=p();export{c as I3STreeDebugger};
