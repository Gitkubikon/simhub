const __vite__fileDeps=["assets/meshFeatureSet-BNHS2qnT.js","assets/index-DSIPxOWi.js","assets/index-B_7YxLDX.css","assets/Mesh-BS04vQSz.js","assets/MeshTransform-Y0ppddED.js","assets/vertexSpaceConversion-C_GU75pR.js","assets/External-Djr0rIk9.js","assets/infoFor3D-BTCPmnmy.js","assets/executeRelationshipQuery-BLvYeim5.js","assets/query-C2USZ63O.js","assets/normalizeUtils-BrH-PrZy.js","assets/normalizeUtilsCommon-BU8xfl77.js","assets/pbfQueryUtils-DUjEbwA9.js","assets/pbf-B53Txr8m.js","assets/queryAttachments-CECURkzW.js","assets/AttachmentInfo-u2TyaLjZ.js","assets/executeTopFeaturesQuery-CQUJBwuw.js","assets/queryTopFeatures-3UY-886p.js","assets/executeForTopIds-Dfz-fY69.js","assets/executeForTopExtents-CmZ7AR5R.js","assets/executeForTopCount-DKYms-Vr.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{a$ as e,a2 as t,az as r,e as o,y as s,ia as a,a as i,S as u,ej as c,m as l,a_ as p,gQ as d,_ as m,b as f,G as y}from"./index-DSIPxOWi.js";import{u as h,i as _}from"./infoFor3D-BTCPmnmy.js";import{s as x,a as S}from"./executeForIds-vkxYbvNq.js";import{x as D}from"./query-C2USZ63O.js";import{a as F}from"./executeQueryJSON-DDi8KdIf.js";import{n as b}from"./executeQueryPBF-71YCUWAF.js";let O=class extends u{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return c(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){var r;const o=this._normalizeQuery(e),s=null!=(null==(r=e.outStatistics)?void 0:r[0]),a=l("featurelayer-pbf-statistics"),i=!s||a;let u;if(this.pbfSupported&&i)try{u=await b(this.url,o,t)}catch(c){if("query:parsing-pbf"!==c.name)throw c;this.pbfSupported=!1}return this.pbfSupported&&i||(u=await F(this.url,o,t)),this._normalizeFields(u.fields),u}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||null==this.infoFor3D||!t.features)return p.fromJSON(t);const{meshFeatureSetFromJSON:o}=await d(m((()=>import("./meshFeatureSet-BNHS2qnT.js")),__vite__mapDeps([0,1,2,3,4,5,6,7])),r);return o(e,this.infoFor3D,t)}executeForCount(e,t){return x(this.url,this._normalizeQuery(e),t)}executeForExtent(o,s){return async function n(o,s,a){const i=e(o),u=await D(i,t.from(s),{...a}),c=u.data.extent;return!c||isNaN(c.xmin)||isNaN(c.ymin)||isNaN(c.xmax)||isNaN(c.ymax)?{count:u.data.count,extent:null}:{count:u.data.count,extent:r.fromJSON(c)}}(this.url,this._normalizeQuery(o),s)}executeForIds(e,t){return S(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:o}]=await d(Promise.all([m((()=>import("./index-DSIPxOWi.js").then((e=>e.yH))),__vite__mapDeps([1,2])),m((()=>import("./executeRelationshipQuery-BLvYeim5.js")),__vite__mapDeps([8,1,2,9,10,11,12,13]))]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:o}]=await d(Promise.all([m((()=>import("./index-DSIPxOWi.js").then((e=>e.yH))),__vite__mapDeps([1,2])),m((()=>import("./executeRelationshipQuery-BLvYeim5.js")),__vite__mapDeps([8,1,2,9,10,11,12,13]))]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeAttachmentQuery(t,r){const{executeAttachmentQuery:o,fetchAttachments:s,processAttachmentQueryResult:a}=await d(m((()=>import("./queryAttachments-CECURkzW.js")),__vite__mapDeps([14,1,2,9,10,11,12,13,15])),r),i=e(this.url);return a(i,await(this.queryAttachmentsSupported?o(i,t,r):s(i,t,r)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await d(m((()=>import("./executeTopFeaturesQuery-CQUJBwuw.js")),__vite__mapDeps([16,1,2,17,10,11,9,12,13])),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await d(m((()=>import("./executeForTopIds-Dfz-fY69.js")),__vite__mapDeps([18,1,2,17,10,11,9,12,13])),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await d(m((()=>import("./executeForTopExtents-CmZ7AR5R.js")),__vite__mapDeps([19,1,2,17,10,11,9,12,13])),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await d(m((()=>import("./executeForTopCount-DKYms-Vr.js")),__vite__mapDeps([20,1,2,17,10,11,9,12,13])),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let r=t.from(e);r.sourceSpatialReference=r.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(r=r===e?r.clone():r,r.gdbVersion=e.gdbVersion||this.gdbVersion,r.dynamicDataSource=e.dynamicDataSource?a.from(e.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:o}=this;if(null!=o&&this._queryIs3DObjectFormat(e)){r=r===e?r.clone():r,r.formatOf3DObjects=null;const{supportedFormats:t,queryFormats:s}=o,a=h("model/gltf-binary",t)??_("glb",t),i=h("model/gltf+json",t)??_("gltf",t);for(const e of s){if(e===a){r.formatOf3DObjects=e;break}e!==i||r.formatOf3DObjects||(r.formatOf3DObjects=e)}if(!r.formatOf3DObjects)throw new f("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(r.outSpatialReference&&!y(r.outSpatialReference,this.sourceSpatialReference))throw new f("query:unsupported-out-spatial-reference","3D object feature services do not support projection of geometries");if(null==r.outFields||!r.outFields.includes("*")){r=r===e?r.clone():r,null==r.outFields&&(r.outFields=[]);const{originX:t,originY:s,originZ:a,translationX:i,translationY:u,translationZ:c,scaleX:l,scaleY:p,scaleZ:d,rotationX:m,rotationY:f,rotationZ:y,rotationDeg:h}=o.transformFieldRoles;r.outFields.push(t,s,a,i,u,c,l,p,d,m,f,y,h)}}return r}_normalizeFields(e){if(null!=this.fieldsIndex&&null!=e)for(const t of e){const e=this.fieldsIndex.get(t.name);e&&Object.assign(t,e.toJSON())}}_queryIs3DObjectFormat(e){return null!=this.infoFor3D&&!0===e.returnGeometry&&"xyFootprint"!==e.multipatchOption&&!e.outStatistics}};o([s({type:a})],O.prototype,"dynamicDataSource",void 0),o([s()],O.prototype,"fieldsIndex",void 0),o([s()],O.prototype,"gdbVersion",void 0),o([s()],O.prototype,"infoFor3D",void 0),o([s({readOnly:!0})],O.prototype,"parsedUrl",null),o([s()],O.prototype,"pbfSupported",void 0),o([s()],O.prototype,"queryAttachmentsSupported",void 0),o([s()],O.prototype,"sourceSpatialReference",void 0),o([s({type:String})],O.prototype,"url",void 0),O=o([i("esri.layers.graphics.sources.support.QueryTask")],O);const g=O;export{g as x};
