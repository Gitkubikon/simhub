import{fx as e}from"./index-DSIPxOWi.js";var t={};t.defaultNoDataValue=e(-1/0),t.decode=function(r,u){var m=(u=u||{}).encodedMaskData||null===u.encodedMaskData,d=l(r,u.inputOffset||0,m),c=null!=u.noDataValue?e(u.noDataValue):t.defaultNoDataValue,g=i(d,u.pixelType||Float32Array,u.encodedMaskData,c,u.returnMask),h={width:d.width,height:d.height,pixelData:g.resultPixels,minValue:d.pixels.minValue,maxValue:d.pixels.maxValue,noDataValue:c};return g.resultMask&&(h.maskData=g.resultMask),u.returnEncodedMask&&d.mask&&(h.encodedMaskData=d.mask.bitset?d.mask.bitset:null),u.returnFileInfo&&(h.fileInfo=n(d,c),u.computeUsedBitDepths&&(h.fileInfo.bitDepths=a(d))),h};var i=function(e,t,r,u,m){var d,c,g=0,h=e.pixels.numBlocksX,k=e.pixels.numBlocksY,x=Math.floor(e.width/h),p=Math.floor(e.height/k),w=2*e.maxZError;r=r||(e.mask?e.mask.bitset:null),d=new t(e.width*e.height),m&&r&&(c=new Uint8Array(e.width*e.height));for(var y,V,B=new Float32Array(x*p),v=0;v<=k;v++){var U=v!==k?p:e.height%k;if(0!==U)for(var D=0;D<=h;D++){var M=D!==h?x:e.width%h;if(0!==M){var b,I,P,A,Y=v*e.width*p+D*x,X=e.width-M,F=e.pixels.blocks[g];if(F.encoding<2?(0===F.encoding?b=F.rawData:(s(F.stuffedData,F.bitsPerPixel,F.numValidPixels,F.offset,w,B,e.pixels.maxValue),b=B),I=0):P=2===F.encoding?0:F.offset,r)for(V=0;V<U;V++){for(7&Y&&(A=r[Y>>3],A<<=7&Y),y=0;y<M;y++)7&Y||(A=r[Y>>3]),128&A?(c&&(c[Y]=1),d[Y++]=F.encoding<2?b[I++]:P):(c&&(c[Y]=0),d[Y++]=u),A<<=1;Y+=X}else if(F.encoding<2)for(V=0;V<U;V++){for(y=0;y<M;y++)d[Y++]=b[I++];Y+=X}else for(V=0;V<U;V++)if(d.fill)d.fill(P,Y,Y+M),Y+=M+X;else{for(y=0;y<M;y++)d[Y++]=P;Y+=X}if(1===F.encoding&&I!==F.numValidPixels)throw"Block and Mask do not match";g++}}}return{resultPixels:d,resultMask:c}},n=function(e,t){return{fileIdentifierString:e.fileIdentifierString,fileVersion:e.fileVersion,imageType:e.imageType,height:e.height,width:e.width,maxZError:e.maxZError,eofOffset:e.eofOffset,mask:e.mask?{numBlocksX:e.mask.numBlocksX,numBlocksY:e.mask.numBlocksY,numBytes:e.mask.numBytes,maxValue:e.mask.maxValue}:null,pixels:{numBlocksX:e.pixels.numBlocksX,numBlocksY:e.pixels.numBlocksY,numBytes:e.pixels.numBytes,maxValue:e.pixels.maxValue,minValue:e.pixels.minValue,noDataValue:t}}},a=function(e){for(var t=e.pixels.numBlocksX*e.pixels.numBlocksY,r={},u=0;u<t;u++){var m=e.pixels.blocks[u];0===m.encoding?r.float32=!0:1===m.encoding?r[m.bitsPerPixel]=!0:r[0]=!0}return Object.keys(r)},l=function(e,t,r){var u={},m=new Uint8Array(e,t,10);if(u.fileIdentifierString=String.fromCharCode.apply(null,m),"CntZImage"!=u.fileIdentifierString.trim())throw"Unexpected file identifier string: "+u.fileIdentifierString;t+=10;var d=new DataView(e,t,24);if(u.fileVersion=d.getInt32(0,!0),u.imageType=d.getInt32(4,!0),u.height=d.getUint32(8,!0),u.width=d.getUint32(12,!0),u.maxZError=d.getFloat64(16,!0),t+=24,!r)if(d=new DataView(e,t,16),u.mask={},u.mask.numBlocksY=d.getUint32(0,!0),u.mask.numBlocksX=d.getUint32(4,!0),u.mask.numBytes=d.getUint32(8,!0),u.mask.maxValue=d.getFloat32(12,!0),t+=16,u.mask.numBytes>0){var c=new Uint8Array(Math.ceil(u.width*u.height/8)),g=(d=new DataView(e,t,u.mask.numBytes)).getInt16(0,!0),h=2,k=0;do{if(g>0)for(;g--;)c[k++]=d.getUint8(h++);else{var x=d.getUint8(h++);for(g=-g;g--;)c[k++]=x}g=d.getInt16(h,!0),h+=2}while(h<u.mask.numBytes);if(-32768!==g||k<c.length)throw"Unexpected end of mask RLE encoding";u.mask.bitset=c,t+=u.mask.numBytes}else u.mask.numBytes|u.mask.numBlocksY|u.mask.maxValue||(c=new Uint8Array(Math.ceil(u.width*u.height/8)),u.mask.bitset=c);d=new DataView(e,t,16),u.pixels={},u.pixels.numBlocksY=d.getUint32(0,!0),u.pixels.numBlocksX=d.getUint32(4,!0),u.pixels.numBytes=d.getUint32(8,!0),u.pixels.maxValue=d.getFloat32(12,!0),t+=16;var p=u.pixels.numBlocksX,w=u.pixels.numBlocksY,y=p+(u.width%p>0?1:0),V=w+(u.height%w>0?1:0);u.pixels.blocks=new Array(y*V);for(var B=1e9,v=0,U=0;U<V;U++)for(var D=0;D<y;D++){var M=0,b=e.byteLength-t;d=new DataView(e,t,Math.min(10,b));var I={};u.pixels.blocks[v++]=I;var P=d.getUint8(0);if(M++,I.encoding=63&P,I.encoding>3)throw"Invalid block encoding ("+I.encoding+")";if(2!==I.encoding){if(0!==P&&2!==P){if(P>>=6,I.offsetType=P,2===P)I.offset=d.getInt8(1),M++;else if(1===P)I.offset=d.getInt16(1,!0),M+=2;else{if(0!==P)throw"Invalid block offset type";I.offset=d.getFloat32(1,!0),M+=4}if(B=Math.min(I.offset,B),1===I.encoding)if(P=d.getUint8(M),M++,I.bitsPerPixel=63&P,P>>=6,I.numValidPixelsType=P,2===P)I.numValidPixels=d.getUint8(M),M++;else if(1===P)I.numValidPixels=d.getUint16(M,!0),M+=2;else{if(0!==P)throw"Invalid valid pixel count type";I.numValidPixels=d.getUint32(M,!0),M+=4}}var A;if(t+=M,3!=I.encoding)if(0===I.encoding){var Y=(u.pixels.numBytes-1)/4;if(Y!==Math.floor(Y))throw"uncompressed block has invalid length";A=new ArrayBuffer(4*Y),new Uint8Array(A).set(new Uint8Array(e,t,4*Y));for(var X=new Float32Array(A),F=0;F<X.length;F++)B=Math.min(B,X[F]);I.rawData=X,t+=4*Y}else if(1===I.encoding){var E=Math.ceil(I.numValidPixels*I.bitsPerPixel/8),S=Math.ceil(E/4);A=new ArrayBuffer(4*S),new Uint8Array(A).set(new Uint8Array(e,t,E)),I.stuffedData=new Uint32Array(A),t+=E}}else t++,B=Math.min(B,0)}return u.pixels.minValue=B,u.eofOffset=t,u},s=function(e,t,r,u,m,d,c){var g,h,k,x=(1<<t)-1,p=0,w=0,y=Math.ceil((c-u)/m),V=4*e.length-Math.ceil(t*r/8);for(e[e.length-1]<<=8*V,g=0;g<r;g++){if(0===w&&(k=e[p++],w=32),w>=t)h=k>>>w-t&x,w-=t;else{var B=t-w;h=(k&x)<<B&x,h+=(k=e[p++])>>>(w=32-B)}d[g]=h<y?u+h*m:c}return d};const r=t.decode;class o{_decode(e){const t=r(e.buffer,e.options);return Promise.resolve({result:t,transferList:[t.pixelData.buffer]})}}function f(){return new o}export{f as default};
