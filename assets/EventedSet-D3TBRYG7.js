import{bc as e,cz as t,cA as s,cB as i}from"./index-DSIPxOWi.js";class h extends e{constructor(){super(...arguments),this._set=new Set,this._length=t(0)}clear(){if(this._set.size>0){const e=this.toArray();this._set.clear(),this.emit("after-changes",{type:s.REMOVE}),this.emit("change",{added:[],removed:e})}}get length(){return this._length.value}addMany(e){if(0!==e.length){for(const t of e)this._set.add(t);this._length.value=this._set.size,this.emit("after-changes",{type:s.ADD}),this.emit("change",{added:e,removed:[]})}}remove(e){this._set.delete(e)&&(this._length.value=this._set.size,this.emit("after-changes",{type:s.REMOVE}),this.emit("change",{added:[],removed:[e]}))}removeMany(e){const t=[];for(const s of e)this._set.delete(s)&&t.push(s);t.length>0&&(this._length.value=this._set.size,this.emit("after-changes",{type:s.REMOVE}),this.emit("change",{added:[],removed:t}))}toArray(){return[...this._set]}find(e){let t;return i(this._set,(s=>!!e(s)&&(t=s,!0))),t}forEach(e){this._set.forEach((t=>e(t)))}}export{h};
