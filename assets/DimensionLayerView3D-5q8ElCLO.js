const __vite__fileDeps=["assets/DimensionAnalysisView3D-C8o9C0Xw.js","assets/index-_cfZD3Ca.js","assets/index-Blpd_LPN.css","assets/AnalysisView3D-B5QWJzUM.js","assets/LengthDimension-DwLca9uX.js","assets/TextOverlayItem-DZjYAwUw.js","assets/unitFormatUtils-41uavtRu.js","assets/Segment-DRTFMfwa.js","assets/LineVisualElement-CHXK30gG.js","assets/geodesicLengthMeasurementUtils-D--1PxwZ.js","assets/geometryEngine-BDL0j_81.js","assets/geometryEngineBase-7U6waXUp.js","assets/hydrated-vESa0co6.js","assets/SnappingOperation-DJ5Er01v.js","assets/ExtendedLineVisualElement-CoFVnQ9y.js","assets/vec4f32-CjrfB-0a.js","assets/EngineVisualElement-CF-4dkle.js","assets/Laserlines.glsl-CSLrZytp.js","assets/PointVisualElement-i-8YP7dm.js","assets/RightAngleQuadVisualElement-9VGbUBX4.js","assets/SnappingManagerPool-DZAYLPJV.js","assets/geometry2dUtils-CpFVwUNV.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/keybindings-BlnzZsw-.js","assets/PointSnappingHint-C3ol3Cwd.js","assets/ShadedColorMaterial.glsl-C1rg_6YS.js","assets/EditGeometryOperations-Dpy_5VAv.js","assets/dehydratedFeatureComparison-DKCllp2n.js","assets/dragEventPipeline3D-BJdwX-KA.js","assets/ImageMaterial.glsl-DcC7gv-r.js","assets/memoize-DsJmrG76.js","assets/Factory-pRwH7N0O.js","assets/analysisViewUtils-nNKsvGJ0.js","assets/ToolIntersector-Bdpyxo5G.js","assets/projectionUtils-DKTKpcuo.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{e as a,y as t,a as o,V as h,b9 as w,g as u,A as V,b as c,x as d,u as p,z as _,c as m,_ as v}from"./index-_cfZD3Ca.js";import{l as A}from"./LayerView3D-BRyk3_Z-.js";import{y as f}from"./LayerView-DT-K-gI3.js";const D=i=>{let s=class extends i{constructor(...e){super(...e),this.layer=null}get interactive(){return this.analysisView!=null&&this.analysisView.interactive}set interactive(e){this.analysisView!=null&&(this.analysisView.interactive=e)}get results(){return this.analysisView!=null?this.analysisView.results:new h}get selectedDimension(){return this.analysisView!=null?this.analysisView.selectedDimension:null}set selectedDimension(e){this.analysisView!=null&&(this.analysisView.selectedDimension=e)}async createLengthDimensions(e){if(this.analysisView==null)throw w();await this.analysisView.createLengthDimensions(e)}};return a([t()],s.prototype,"layer",void 0),a([t()],s.prototype,"interactive",null),a([t({readOnly:!0})],s.prototype,"results",null),a([t()],s.prototype,"selectedDimension",null),s=a([o("esri.views.layers.DimensionLayerView")],s),s},y="analysis-view-handles";let n=class extends A(D(f)){constructor(i){super(i),this.type="dimension-3d",this._analysisModule=null}initialize(){this.addHandles(u(()=>this.layer.source,i=>{this._destroyAnalysisView(),i!=null&&this._createAnalysisView(i)},V),y)}destroy(){this.removeHandles(y),this._destroyAnalysisView()}isUpdating(){return this._createAnalysisViewTask!=null||this.analysisView!=null&&this.analysisView.updating}async whenAnalysisView(){if(this.analysisView!=null)return this.analysisView;if(this._createAnalysisViewTask!=null)return this._createAnalysisViewTask.promise;throw new c("layerview:no-analysisview-for-analysis","The analysis has not been set on the DimensionLayer of this layer view")}_createAnalysisView(i){const s=d(async e=>(this.analysisView=await this._createAnalysisViewPromise(i,e),this._createAnalysisViewTask===s&&(this._createAnalysisViewTask=null),this.analysisView));this.addResolvingPromise(s.promise),this._createAnalysisViewTask=s}_destroyAnalysisView(){this.analysisView=p(this.analysisView),this._createAnalysisViewTask=_(this._createAnalysisViewTask)}async _createAnalysisViewPromise(i,s){let e=this._analysisModule;if(e==null){const r=await this._loadAnalysisModule();this._analysisModule=r,e=r}const l=new e.default({analysis:i,view:this.view,parent:this});if(await l.when(),m(s))throw l.destroy(),w();return l}_loadAnalysisModule(){return v(()=>import("./DimensionAnalysisView3D-C8o9C0Xw.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]))}};a([t()],n.prototype,"type",void 0),a([t()],n.prototype,"analysisView",void 0),a([t()],n.prototype,"_createAnalysisViewTask",void 0),n=a([o("esri.views.3d.layers.DimensionLayerView3D")],n);const L=n;export{L as default};
