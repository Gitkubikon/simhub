import{e as t,y as o,bk as s,Q as a,bK as r,bL as i,bM as n,bN as e,bO as l,bP as b,bQ as p,bR as u,bS as h,bT as c,bU as x,bV as y,bW as A,a as g,bX as M}from"./index-DSIPxOWi.js";var N;let m=N=class extends s{constructor(t){super(t),this.translation=a(),this.rotationAxis=r(i),this.rotationAngle=0,this.scale=n(1,1,1)}get rotation(){return e(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(b(t)),this.rotationAngle=p(t)}get localMatrix(){const t=y();return u(v,b(this.rotation),h(this.rotation)),c(t,v,this.translation,this.scale),t}get localMatrixInverse(){return x(y(),this.localMatrix)}equals(t){return this===t||null!=t&&A(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new N(t)}};t([o({type:[Number],nonNullable:!0,json:{write:!0}})],m.prototype,"translation",void 0),t([o({type:[Number],nonNullable:!0,json:{write:!0}})],m.prototype,"rotationAxis",void 0),t([o({type:Number,nonNullable:!0,json:{write:!0}})],m.prototype,"rotationAngle",void 0),t([o({type:[Number],nonNullable:!0,json:{write:!0}})],m.prototype,"scale",void 0),t([o()],m.prototype,"rotation",null),t([o()],m.prototype,"localMatrix",null),t([o()],m.prototype,"localMatrixInverse",null),m=N=t([g("esri.geometry.support.MeshTransform")],m);const v=M(),d=m;export{d as N};
