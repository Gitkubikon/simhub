import{iw as e,ix as t,iy as s,iz as a,iA as r,iB as n,iC as c}from"./index-DSIPxOWi.js";class i{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(e){return this._resourceMap.get(e)??null}async fetchResource(t,s){const a=this._resourceMap.get(t);if(a)return{width:a.width,height:a.height};let r=this._inFlightResourceMap.get(t);return r?r.then((e=>({width:e.width,height:e.height}))):(r=e(t,s),this._inFlightResourceMap.set(t,r),r.then((e=>(this._inFlightResourceMap.delete(t),this._resourceMap.set(t,e),{width:e.width,height:e.height})),(()=>({width:0,height:0}))))}deleteResource(e){this._inFlightResourceMap.delete(e),this._resourceMap.delete(e)}loadFont(e){return t(e)}}const l=96/72;class o{constructor(e){this._spatialReference=e,this._imageDataCanvas=null,this._cimResourceManager=new i}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(e,t,n,c,l,g,u,d,y){if(!e)return null;const{data:m}=e;if(!m||"CIMSymbolReference"!==m.type||!m.symbol)return null;const{symbol:w}=m;g||(g=s(w));const M=await a.resolveSymbolOverrides(m,t,this._spatialReference,l,g,u,d),p=this._cimResourceManager,_=[];r.fetchResources(M,p,_),r.fetchFonts(M,p,_),_.length>0&&await Promise.all(_);const{width:R,height:b}=n,f=h(g,R,b,c),C=r.getEnvelope(M,f,p);if(!C)return null;let x=1,v=0,I=0;switch(w.type){case"CIMPointSymbol":case"CIMTextSymbol":{let e=1;C.width>R&&(e=R/C.width);let t=1;C.height>b&&(t=b/C.height),"preview"===c&&(C.width<R&&(e=R/C.width),C.height<b&&(t=b/C.height)),x=Math.min(e,t),v=C.x+C.width/2,I=C.y+C.height/2}break;case"CIMLineSymbol":{(y||C.height>b)&&(x=b/C.height),I=C.y+C.height/2;const e=C.x*x+R/2,t=(C.x+C.width)*x+R/2,{paths:s}=f;s[0][0][0]-=e/x,s[0][2][0]-=(t-R)/x}break;case"CIMPolygonSymbol":{v=C.x+C.width/2,I=C.y+C.height/2;const e=C.x*x+R/2,t=(C.x+C.width)*x+R/2,s=C.y*x+b/2,a=(C.y+C.height)*x+b/2,{rings:r}=f;e<0&&(r[0][0][0]-=e,r[0][3][0]-=e,r[0][4][0]-=e),s<0&&(r[0][0][1]+=s,r[0][1][1]+=s,r[0][4][1]+=s),t>R&&(r[0][1][0]-=t-R,r[0][2][0]-=t-R),a>b&&(r[0][2][1]+=a-b,r[0][3][1]+=a-b)}}const S={type:"cim",data:{type:"CIMSymbolReference",symbol:M}};return this.rasterize(S,R,b,v,I,x,g,1,f)}rasterize(e,t,a,r,g,u,d,y=0,m=null){const{data:w}=e;if(!w||"CIMSymbolReference"!==w.type||!w.symbol)return null;const{symbol:M}=w,p=this._canvas,_=(window.devicePixelRatio||1)*l;p.width=t*_,p.height=a*_,d||(d=s(M)),m||(m=h(d,t,a,"legend")),p.width+=2*y,p.height+=2*y;const R=p.getContext("2d",{willReadFrequently:!0}),b=c.createIdentity();return b.translate(-r,-g),b.scale(u*_,-u*_),b.translate(t*_/2+y,a*_/2+y),R.clearRect(0,0,p.width,p.height),new n(R,this._cimResourceManager,b,!0).drawSymbol(M,m),R.getImageData(0,0,p.width,p.height)}}function h(e,t,s,a){const r=-t/2+1,n=t/2-1,c=s/2-1,l=-s/2+1;switch(e){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[r,0],[0,0],[n,0]]]};default:return"legend"===a?{rings:[[[r,c],[n,0],[n,l],[r,l],[r,c]]]}:{rings:[[[r,c],[n,c],[n,l],[r,l],[r,c]]]}}}export{o as CIMSymbolRasterizer};
