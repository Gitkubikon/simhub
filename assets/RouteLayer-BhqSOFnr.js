import{e,y as t,sO as r,a as o,bk as s,gb as n,sP as l,sQ as h,g9 as w,aj as g,c8 as S,et as b,bj as T,b as B,fW as N,bZ as P,sR as A,aB as j,a$ as O,n as I,c7 as D,aw as M,v as _,ax as x,az as F,a_ as E,I as G,cD as W,sS as q,g1 as V,mD as re,gM as oe,fY as ie,V as se,g2 as ne,g4 as le,eo as ae,ep as pe,eq as ce,bd as ye,gC as de,ay as me,fd as fe,g5 as he,sv as ve,ej as we,eO as ge,ez as Se,eL as be,eG as Te,W as Be,jg as Ne,iP as Pe,fO as Re,d8 as Ae,aI as je,Z as Le}from"./index-DSIPxOWi.js";import{a as Oe,D as Ie,o as De,q as Me,b as Ce,d as ke,P as Je,n as _e,e as xe,f as Fe,R as Ee,M as Ge,l as Ue,U as $e,r as We,g as ze,m as qe,c as Ze,y as Ve,C as Ke,T as Xe,j as He,w as Qe,S as Ye,h as et}from"./Stop-DYKHva0u.js";import{R as tt}from"./normalizeUtils-BrH-PrZy.js";import"./normalizeUtilsCommon-BU8xfl77.js";let rt=class p extends s{constructor(e){super(e),this.break=new n({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new n({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new n({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new n({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new n({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new n({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};e([t({types:r})],rt.prototype,"break",void 0),e([t({types:r})],rt.prototype,"first",void 0),e([t({types:r})],rt.prototype,"unlocated",void 0),e([t({types:r})],rt.prototype,"last",void 0),e([t({types:r})],rt.prototype,"middle",void 0),e([t({types:r})],rt.prototype,"waypoint",void 0),rt=e([o("esri.layers.support.RouteStopSymbols")],rt);const ot=rt;let it=class y extends s{constructor(e){super(e),this.directionLines=new w({color:[0,122,194],width:6}),this.directionPoints=new n({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new n({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new g({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new w({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new w({width:8,color:[20,89,127]}),this.stops=new ot}};e([t({types:l})],it.prototype,"directionLines",void 0),e([t({types:r})],it.prototype,"directionPoints",void 0),e([t({types:r})],it.prototype,"pointBarriers",void 0),e([t({types:h})],it.prototype,"polygonBarriers",void 0),e([t({types:l})],it.prototype,"polylineBarriers",void 0),e([t({types:l})],it.prototype,"routeInfo",void 0),e([t({type:ot})],it.prototype,"stops",void 0),it=e([o("esri.layers.support.RouteSymbols")],it);const st=it;let nt=class m extends s{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};e([t({type:String})],nt.prototype,"dataType",void 0),e([S(Oe,{ignoreUnknown:!1})],nt.prototype,"name",void 0),e([t({type:[String]})],nt.prototype,"parameterNames",void 0),e([t({type:String})],nt.prototype,"restrictionUsageParameterName",void 0),e([S(Ie,{ignoreUnknown:!1})],nt.prototype,"timeNeutralAttributeName",void 0),e([t({type:String})],nt.prototype,"trafficSupport",void 0),e([S(De)],nt.prototype,"units",void 0),e([S(Me)],nt.prototype,"usageType",void 0),nt=e([o("esri.rest.support.NetworkAttribute")],nt);const lt=nt;let at=class p2 extends s{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};e([t({type:Number})],at.prototype,"buildTime",void 0),e([t({type:String})],at.prototype,"name",void 0),e([t({type:[lt]})],at.prototype,"networkAttributes",void 0),e([t()],at.prototype,"networkSources",void 0),e([t({type:String})],at.prototype,"state",void 0),at=e([o("esri.rest.support.NetworkDataset")],at);const ut=at;let pt=class c extends s{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>Oe.fromJSON(e)))}writeAccumulateAttributes(e,t,r){(null==e?void 0:e.length)&&(t[r]=e.map((e=>Oe.toJSON(e))))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(e,t){var r,o;const s=(null==(r=t.supportedTravelModes)?void 0:r.find((({id:e})=>e===t.defaultTravelMode)))??(null==(o=t.supportedTravelModes)?void 0:o.find((({itemId:e})=>e===t.defaultTravelMode)));return s?ke.fromJSON(s):null}};e([t()],pt.prototype,"accumulateAttributeNames",void 0),e([b("accumulateAttributeNames")],pt.prototype,"readAccumulateAttributes",null),e([T("accumulateAttributeNames")],pt.prototype,"writeAccumulateAttributes",null),e([t()],pt.prototype,"attributeParameterValues",void 0),e([t()],pt.prototype,"capabilities",null),e([t()],pt.prototype,"currentVersion",void 0),e([t()],pt.prototype,"defaultTravelMode",void 0),e([b("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],pt.prototype,"readDefaultTravelMode",null),e([t()],pt.prototype,"directionsLanguage",void 0),e([S(Ce)],pt.prototype,"directionsLengthUnits",void 0),e([t()],pt.prototype,"directionsSupportedLanguages",void 0),e([S(Ie,{ignoreUnknown:!1})],pt.prototype,"directionsTimeAttribute",void 0),e([t()],pt.prototype,"hasZ",void 0),e([S(Oe,{ignoreUnknown:!1})],pt.prototype,"impedance",void 0),e([t({type:ut})],pt.prototype,"networkDataset",void 0),e([t({type:[ke]})],pt.prototype,"supportedTravelModes",void 0),pt=e([o("esri.rest.support.NetworkServiceDescription")],pt);const ct=pt,l$2=()=>I.getLogger("esri.rest.networkService");function u$3(e,t,r,o){o[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}async function d(e,t,r){if(!e)throw new B("network-service:missing-url","Url to Network service is missing");const o=N({f:"json",token:t},r),{data:s}=await P(e,o),n=s.currentVersion>=10.4?async function p$4(e,t,r){try{const o=N({f:"json",token:t},r),s=A(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:l}}=await P(s,o);return{supportedTravelModes:n,defaultTravelMode:l}}catch(o){throw new B("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:o})}}(e,t,r):async function v(e,t){var r,o,s;const n=N({f:"json"},t),{data:l}=await P(e.replace(/\/rest\/.*$/i,"/info"),n);if(!(null==l?void 0:l.owningSystemUrl))return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:h}=l,w=A(h)+"/sharing/rest/portals/self",{data:g}=await P(w,n),S=j("helperServices.routingUtilities.url",g);if(!S)return{supportedTravelModes:[],defaultTravelMode:null};const b=O(h),T=/\/solve$/i.test(b.path)?"Route":/\/solveclosestfacility$/i.test(b.path)?"ClosestFacility":"ServiceAreas",B=N({f:"json",serviceName:T},t),I=A(S)+"/GetTravelModes/execute",D=await P(I,B),M=[];let _=null;if(null==(o=null==(r=null==D?void 0:D.data)?void 0:r.results)?void 0:o.length){const e=D.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(null==(s=t.value)?void 0:s.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);M.push(t)}}else"defaultTravelMode"===t.paramName&&(_=t.value)}return{supportedTravelModes:M,defaultTravelMode:_}}(e,r),{defaultTravelMode:l,supportedTravelModes:h}=await n;return s.defaultTravelMode=l,s.supportedTravelModes=h,ct.fromJSON(s)}const yt=new D({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let dt=class i extends s{constructor(e){super(e),this.description=null,this.type=null}};e([t({type:String,json:{write:!0}})],dt.prototype,"description",void 0),e([t({type:String,json:{read:yt.read,write:yt.write}})],dt.prototype,"type",void 0),dt=e([o("esri.rest.support.GPMessage")],dt);const mt=dt,ft=new D({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let ht=class c2 extends mt{constructor(e){super(e),this.type=null}};e([t({type:String,json:{read:ft.read,write:ft.write}})],ht.prototype,"type",void 0),ht=e([o("esri.rest.support.NAMessage")],ht);const vt=ht;let wt=class c3 extends s{constructor(e){super(e)}};e([t({json:{read:{source:"string"}}})],wt.prototype,"text",void 0),e([S(Je,{name:"stringType"})],wt.prototype,"type",void 0),wt=e([o("esri.rest.support.DirectionsString")],wt);const gt=wt;let St=class a extends s{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,t){return _e(t.ETA,t.arriveTimeUTC)}readGeometry(e,t){return M.fromJSON(t.point)}};e([t({type:Date,json:{read:{source:"arriveTimeUTC"}}})],St.prototype,"arriveTime",void 0),e([t()],St.prototype,"arriveTimeOffset",void 0),e([b("arriveTimeOffset",["arriveTimeUTC","ETA"])],St.prototype,"readArriveTimeOffset",null),e([t({type:M})],St.prototype,"geometry",void 0),e([b("geometry",["point"])],St.prototype,"readGeometry",null),e([t({type:[gt]})],St.prototype,"strings",void 0),St=e([o("esri.rest.support.DirectionsEvent")],St);const bt=St;let Tt=class extends _{constructor(e){super(e),this.events=null,this.strings=null}readGeometry(e,t){const r=function c$5(e){if(null==e||""===e)return null;let t=0,r=0,o=0,s=0;const n=[];let l,h,w,g,S,b,T,B,N=0,P=0,A=0;if(S=e.match(/((\+|-)[^+\-|]+|\|)/g),S||(S=[]),0===parseInt(S[N],32)){N=2;const e=parseInt(S[N],32);N++,b=parseInt(S[N],32),N++,1&e&&(P=S.indexOf("|")+1,T=parseInt(S[P],32),P++),2&e&&(A=S.indexOf("|",P)+1,B=parseInt(S[A],32),A++)}else b=parseInt(S[N],32),N++;for(;N<S.length&&"|"!==S[N];){l=parseInt(S[N],32)+t,N++,t=l,h=parseInt(S[N],32)+r,N++,r=h;const e=[l/b,h/b];P&&(g=parseInt(S[P],32)+o,P++,o=g,e.push(g/T)),A&&(w=parseInt(S[A],32)+s,A++,s=w,e.push(w/B)),n.push(e)}return{paths:[n],hasZ:P>0,hasM:A>0}}(t.compressedGeometry);return null!=r?x.fromJSON(r):null}};e([t({type:[bt]})],Tt.prototype,"events",void 0),e([b("geometry",["compressedGeometry"])],Tt.prototype,"readGeometry",null),e([t({type:[gt]})],Tt.prototype,"strings",void 0),Tt=e([o("esri.rest.support.DirectionsFeature")],Tt);const Bt=Tt;let Nt=class u extends E{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){if(!e)return[];const r=t.summary.envelope.spatialReference??t.spatialReference,o=r&&G.fromJSON(r);return e.map((e=>{const t=Bt.fromJSON(e);if(null!=t.geometry&&(t.geometry.spatialReference=o),null!=t.events)for(const r of t.events)null!=r.geometry&&(r.geometry.spatialReference=o);return t}))}get mergedGeometry(){return this.features?function m$2(e,t){if(0===e.length)return new x({spatialReference:t});const r=[];for(const l of e)for(const e of l.paths)r.push(...e);const o=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||o.push(e)}));const{hasM:s,hasZ:n}=e[0];return new x({hasM:s,hasZ:n,paths:[o],spatialReference:t})}(this.features.map((({geometry:e})=>e)),this.extent.spatialReference):null}get strings(){return this.features.flatMap((({strings:e})=>e)).filter(W)}};e([t({type:F,json:{read:{source:"summary.envelope"}}})],Nt.prototype,"extent",void 0),e([t({nonNullable:!0})],Nt.prototype,"features",void 0),e([b("features")],Nt.prototype,"readFeatures",null),e([t()],Nt.prototype,"geometryType",void 0),e([t({readOnly:!0})],Nt.prototype,"mergedGeometry",null),e([t()],Nt.prototype,"routeId",void 0),e([t()],Nt.prototype,"routeName",void 0),e([t({value:null,readOnly:!0})],Nt.prototype,"strings",null),e([t({json:{read:{source:"summary.totalDriveTime"}}})],Nt.prototype,"totalDriveTime",void 0),e([t({json:{read:{source:"summary.totalLength"}}})],Nt.prototype,"totalLength",void 0),e([t({json:{read:{source:"summary.totalTime"}}})],Nt.prototype,"totalTime",void 0),Nt=e([o("esri.rest.support.DirectionsFeatureSet")],Nt);const Pt=Nt;let Rt=class extends s{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};e([t({type:E,json:{write:!0}})],Rt.prototype,"directionLines",void 0),e([t({type:E,json:{write:!0}})],Rt.prototype,"directionPoints",void 0),e([t({type:Pt,json:{write:!0}})],Rt.prototype,"directions",void 0),e([t({type:_,json:{write:!0}})],Rt.prototype,"route",void 0),e([t({type:String,json:{write:!0}})],Rt.prototype,"routeName",void 0),e([t({type:[_],json:{write:!0}})],Rt.prototype,"stops",void 0),e([t({type:E,json:{write:!0}})],Rt.prototype,"traversedEdges",void 0),e([t({type:E,json:{write:!0}})],Rt.prototype,"traversedJunctions",void 0),e([t({type:E,json:{write:!0}})],Rt.prototype,"traversedTurns",void 0),Rt=e([o("esri.rest.support.RouteResult")],Rt);const At=Rt;function u2(e){return e?E.fromJSON(e).features.filter(W):[]}let jt=class m2 extends s{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return u2(t.barriers)}readPolylineBarriers(e){return u2(e)}readPolygonBarriers(e){return u2(e)}};e([t({type:[vt]})],jt.prototype,"messages",void 0),e([t({type:[_]})],jt.prototype,"pointBarriers",void 0),e([b("pointBarriers",["barriers"])],jt.prototype,"readPointBarriers",null),e([t({type:[_]})],jt.prototype,"polylineBarriers",void 0),e([b("polylineBarriers")],jt.prototype,"readPolylineBarriers",null),e([t({type:[_]})],jt.prototype,"polygonBarriers",void 0),e([b("polygonBarriers")],jt.prototype,"readPolygonBarriers",null),e([t({type:[At]})],jt.prototype,"routeResults",void 0),jt=e([o("esri.rest.support.RouteSolveResult")],jt);const Lt=jt;function c$3(e){return e instanceof E}async function l$1(e,t,r){const o=[],s=[],n={},l={},h=O(e),{path:w}=h;c$3(t.stops)&&u$3(t.stops.features,s,"stops.features",n),c$3(t.pointBarriers)&&u$3(t.pointBarriers.features,s,"pointBarriers.features",n),c$3(t.polylineBarriers)&&u$3(t.polylineBarriers.features,s,"polylineBarriers.features",n),c$3(t.polygonBarriers)&&u$3(t.polygonBarriers.features,s,"polygonBarriers.features",n);const g=await tt(s);for(const B in n){const e=n[B];o.push(B),l[B]=g.slice(e[0],e[1])}if(function c$9(e,t){for(let r=0;r<t.length;r++){const o=e[t[r]];if(o&&o.length)for(const e of o)if(null!=e&&e.hasZ)return!0}return!1}(l,o)){let e=null;try{e=await d(w,t.apiKey,r)}catch{}e&&!e.hasZ&&function f(e,t){for(let r=0;r<t.length;r++){const o=e[t[r]];if(o&&o.length)for(const e of o)e.z=void 0}l$2().warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}(l,o)}for(const B in l)l[B].forEach(((e,r)=>{q(t,B)[r].geometry=e}));const S={...r,query:{...h.query,...xe(t),f:"json"}},b=w.endsWith("/solve")?w:`${w}/solve`,{data:T}=await P(b,S);return function m3(e){const{barriers:t,directionLines:r,directionPoints:o,directions:s,messages:n,polygonBarriers:l,polylineBarriers:h,routes:w,stops:g,traversedEdges:S,traversedJunctions:b,traversedTurns:T}=e,y$12=e=>{const t=B.find((t=>t.routeName===e));if(null!=t)return t;const r={routeId:B.length+1,routeName:e};return B.push(r),r},d2=e=>{const t=B.find((t=>t.routeId===e));if(null!=t)return t;const r={routeId:e,routeName:null};return B.push(r),r},B=[];null==w||w.features.forEach(((e,t)=>{e.geometry.spatialReference=w.spatialReference??void 0;const r=e.attributes.Name,o=t+1;B.push({routeId:o,routeName:r,route:e})})),null==s||s.forEach((e=>{const{routeName:t}=e;y$12(t).directions=e}));const N=(null==g?void 0:g.features.every((e=>null==e.attributes.RouteName)))&&B.length>0?B[0].routeName:null;return null==g||g.features.forEach((e=>{var t;e.geometry&&((t=e.geometry).spatialReference??(t.spatialReference=g.spatialReference??void 0));const r=N??e.attributes.RouteName,o=y$12(r);o.stops??(o.stops=[]),o.stops.push(e)})),null==r||r.features.forEach((e=>{const t=e.attributes.RouteID,o=d2(t),{geometryType:s,spatialReference:n}=r;o.directionLines??(o.directionLines={features:[],geometryType:s,spatialReference:n}),o.directionLines.features.push(e)})),null==o||o.features.forEach((e=>{const t=e.attributes.RouteID,r=d2(t),{geometryType:s,spatialReference:n}=o;r.directionPoints??(r.directionPoints={features:[],geometryType:s,spatialReference:n}),r.directionPoints.features.push(e)})),null==S||S.features.forEach((e=>{const t=e.attributes.RouteID,r=d2(t),{geometryType:o,spatialReference:s}=S;r.traversedEdges??(r.traversedEdges={features:[],geometryType:o,spatialReference:s}),r.traversedEdges.features.push(e)})),null==b||b.features.forEach((e=>{const t=e.attributes.RouteID,r=d2(t),{geometryType:o,spatialReference:s}=b;r.traversedJunctions??(r.traversedJunctions={features:[],geometryType:o,spatialReference:s}),r.traversedJunctions.features.push(e)})),null==T||T.features.forEach((e=>{const t=e.attributes.RouteID,r=d2(t);r.traversedTurns??(r.traversedTurns={features:[]}),r.traversedTurns.features.push(e)})),Lt.fromJSON({routeResults:B,barriers:t,polygonBarriers:l,polylineBarriers:h,messages:n})}(T)}const Ot={type:String,json:{read:{source:"token"},write:{target:"token"}}};let It=class extends(V(s)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};e([t({type:Boolean,json:{write:!0}})],It.prototype,"doNotLocateOnRestrictedElements",void 0),e([t({types:re,json:{read:oe,write:!0}})],It.prototype,"geometry",void 0),e([S(Fe)],It.prototype,"geometryType",void 0),e([t({type:String,json:{name:"layerName",write:!0}})],It.prototype,"name",void 0),e([S(Ee,{name:"spatialRel"})],It.prototype,"spatialRelationship",void 0),e([t({type:String,json:{write:!0}})],It.prototype,"type",void 0),e([t({type:String,json:{write:!0}})],It.prototype,"where",void 0),It=e([o("esri.rest.support.DataLayer")],It);const Dt=It;var Mt;let Ct=Mt=class extends E{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Mt({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};e([t({type:Boolean,json:{write:!0}})],Ct.prototype,"doNotLocateOnRestrictedElements",void 0),Ct=Mt=e([o("esri.rest.support.NetworkFeatureSet")],Ct);const kt=Ct;let Jt=class extends(V(s)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};e([t({type:Boolean,json:{write:!0}})],Jt.prototype,"doNotLocateOnRestrictedElements",void 0),e([t({type:String,json:{write:!0}})],Jt.prototype,"url",void 0),Jt=e([o("esri.rest.support.NetworkUrl")],Jt);const _t=Jt;var xt;let Ft=xt=class extends(V(s)){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return ie(xt,e)}readAccumulateAttributes(e){return null==e?null:e.map((e=>Oe.fromJSON(e)))}writeAccumulateAttributes(e,t,r){(null==e?void 0:e.length)&&(t[r]=e.map((e=>Oe.toJSON(e))))}writePointBarriers(e,t,r){k(e,t,r)}writePolygonBarrier(e,t,r){k(e,t,r)}writePolylineBarrier(e,t,r){k(e,t,r)}readRestrictionAttributes(e){return null==e?null:e.map((e=>Ge.fromJSON(e)))}writeRestrictionAttributes(e,t,r){(null==e?void 0:e.length)&&(t[r]=e.map((e=>Ge.toJSON(e))))}readStartTime(e,t){const{startTime:r}=t;return null==r?null:"now"===r?"now":new Date(r)}writeStartTime(e,t){null!=e&&(t.startTime="now"===e?"now":e.getTime())}readStops(e,t){return function C(e){return function J(e){return e&&"type"in e}(e)?Dt.fromJSON(e):function R(e){return e&&"url"in e}(e)?_t.fromJSON(e):function L(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}(e)?kt.fromJSON(e):function U(e){return e&&"features"in e}(e)?E.fromJSON(e):null}(t.stops)}writeStops(e,t,r){k(e,t,r)}};e([t({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],Ft.prototype,"accumulateAttributes",void 0),e([b("accumulateAttributes")],Ft.prototype,"readAccumulateAttributes",null),e([T("accumulateAttributes")],Ft.prototype,"writeAccumulateAttributes",null),e([t(Ot)],Ft.prototype,"apiKey",void 0),e([t({json:{write:!0}})],Ft.prototype,"attributeParameterValues",void 0),e([t({type:String,json:{write:!0}})],Ft.prototype,"directionsLanguage",void 0),e([S(Ce)],Ft.prototype,"directionsLengthUnits",void 0),e([S(Ue)],Ft.prototype,"directionsOutputType",void 0),e([S($e)],Ft.prototype,"directionsStyleName",void 0),e([S(Ie,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],Ft.prototype,"directionsTimeAttribute",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"findBestSequence",void 0),e([t({type:Number,json:{write:!0}})],Ft.prototype,"geometryPrecision",void 0),e([t({type:Number,json:{write:!0}})],Ft.prototype,"geometryPrecisionM",void 0),e([t({type:Number,json:{write:!0}})],Ft.prototype,"geometryPrecisionZ",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"ignoreInvalidLocations",void 0),e([S(Oe,{name:"impedanceAttributeName",ignoreUnknown:!1})],Ft.prototype,"impedanceAttribute",void 0),e([t({type:Number,json:{write:!0}})],Ft.prototype,"outputGeometryPrecision",void 0),e([S(We)],Ft.prototype,"outputGeometryPrecisionUnits",void 0),e([S(ze)],Ft.prototype,"outputLines",void 0),e([t({type:G,json:{name:"outSR",write:!0}})],Ft.prototype,"outSpatialReference",void 0),e([t({json:{write:!0}})],Ft.prototype,"overrides",void 0),e([t({json:{name:"barriers",write:!0}})],Ft.prototype,"pointBarriers",void 0),e([T("pointBarriers")],Ft.prototype,"writePointBarriers",null),e([t({json:{write:!0}})],Ft.prototype,"polygonBarriers",void 0),e([T("polygonBarriers")],Ft.prototype,"writePolygonBarrier",null),e([t({json:{write:!0}})],Ft.prototype,"polylineBarriers",void 0),e([T("polylineBarriers")],Ft.prototype,"writePolylineBarrier",null),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"preserveFirstStop",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"preserveLastStop",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"preserveObjectID",void 0),e([t({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],Ft.prototype,"restrictionAttributes",void 0),e([b("restrictionAttributes")],Ft.prototype,"readRestrictionAttributes",null),e([T("restrictionAttributes")],Ft.prototype,"writeRestrictionAttributes",null),e([S(qe)],Ft.prototype,"restrictUTurns",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnDirections",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnPolygonBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnPolylineBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnRoutes",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnStops",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnTraversedEdges",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnTraversedJunctions",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnTraversedTurns",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"returnZ",void 0),e([t({json:{write:!0}})],Ft.prototype,"startTime",void 0),e([b("startTime")],Ft.prototype,"readStartTime",null),e([T("startTime")],Ft.prototype,"writeStartTime",null),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"startTimeIsUTC",void 0),e([t({json:{write:!0}})],Ft.prototype,"stops",void 0),e([b("stops")],Ft.prototype,"readStops",null),e([T("stops")],Ft.prototype,"writeStops",null),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"timeWindowsAreUTC",void 0),e([t({type:ke,json:{write:!0}})],Ft.prototype,"travelMode",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"useHierarchy",void 0),e([t({type:Boolean,json:{write:!0}})],Ft.prototype,"useTimeWindows",void 0),Ft=xt=e([o("esri.rest.support.RouteParameters")],Ft);const Et=Ft;function k(e,t,r){null!=e&&(t[r]=se.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}function z(e){return e.length?e:null}function H(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:H("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:H("esriGeometryPolyline")}}}function K(e){return"layers"in e}async function $(e){const t=G.WGS84;return await Re(e.spatialReference,t),Ae(e,t)}function X(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function ee(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:je(e,t,"meters")}const Gt=se.ofType(Ze),Ut=se.ofType(Ve),$t=se.ofType(Ke),Wt=se.ofType(Xe),zt=se.ofType(He),qt=se.ofType(Qe),Zt="esri.layers.RouteLayer",ue=()=>I.getLogger(Zt);let Vt=class extends(ne(le(ae(pe(ce(Le)))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new st,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new $t,this.polygonBarriers=new Wt,this.polylineBarriers=new zt,this.routeInfo=null,this.spatialReference=G.WGS84,this.stops=new qt,this.type="route";const t2=()=>{this._setStopSymbol(this.stops)};this.addHandles(ye((()=>this.stops),"change",t2,{sync:!0,onListenerAdd:t2}))}writeFeatureCollectionWebmap(e,t,r,o){const s=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),n=s.map(((e,t)=>t)),l="web-map"===o.origin?"featureCollection.layers":"layers";de(l,s,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=n}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>Ze.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>Ve.fromGraphic(e)))}get fullExtent(){var e;const t=new F({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:G.WGS84});if(null!=(null==(e=this.routeInfo)?void 0:e.geometry))return this.routeInfo.geometry.extent??t;if(null==this.stops)return t;const r=this.stops.filter((e=>null!=e.geometry));if(r.length<2)return t;const{spatialReference:o}=r.at(0).geometry;if(null==o)return t;const s=r.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new me({points:s,spatialReference:o}).extent}readMaxScale(e,t){var r;const o=K(t)?t.layers:null==(r=t.featureCollection)?void 0:r.layers,s=null==o?void 0:o.find((e=>null!=e.layerDefinition.maxScale));return(null==s?void 0:s.layerDefinition.maxScale)??0}readMinScale(e,t){var r;const o=K(t)?t.layers:null==(r=t.featureCollection)?void 0:r.layers,s=null==o?void 0:o.find((e=>null!=e.layerDefinition.minScale));return(null==s?void 0:s.layerDefinition.minScale)??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>Ke.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>Xe.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>He.fromGraphic(e)))}readRouteInfo(e,t){return this._getNetworkFeatures(t,"RouteInfo",(e=>Ye.fromGraphic(e))).at(0)??null}readSpatialReference(e,t){var r,o;const s=K(t)?t.layers:null==(r=t.featureCollection)?void 0:r.layers;if(!(null==s?void 0:s.length))return G.WGS84;const{layerDefinition:n,featureSet:l}=s[0],h=l.features[0],w=(null==(o=null==h?void 0:h.geometry)?void 0:o.spatialReference)??l.spatialReference??n.spatialReference??n.extent.spatialReference??fe;return G.fromJSON(w)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>Qe.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){var e;return(null==(e=this.routeInfo)?void 0:e.name)??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return he.routeServiceUrl}set url(e){null!=e?this._set("url",ve(e,ue())):this._set("url",he.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null)),null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),null!=this.routeInfo&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new B("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new B("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new B("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(null==this.routeInfo)throw new B("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:o,itemControl:s}=t;if("admin"!==s&&"update"!==s)throw new B("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const n={messages:[],origin:"portal-item",portal:r,url:o?we(o):void 0,writtenProperties:[]},l=this.write(void 0,n);return t.extent=await $(e),t.title=this.title,await t.update({data:l}),t}async saveAs(e,t={}){var r;if(await this.load(),null==this.routeInfo)throw new B("routelayer:route-unsolved","saveAs() requires a solved route");const o=ge.from(e).clone();o.extent??(o.extent=await $(this.fullExtent)),o.id=null,o.portal??(o.portal=Se.getDefault()),o.title??(o.title=this.title),o.type="Feature Collection",o.typeKeywords=["Data","Feature Collection",be.MULTI_LAYER,"Route Layer"];const{portal:s}=o,n={messages:[],origin:"portal-item",portal:s,url:null,writtenProperties:[]};await s.signIn();const l=null==t?void 0:t.folder,h=this.write(void 0,n);return await(null==(r=s.user)?void 0:r.addItem({item:o,folder:l,data:h})),this.portalItem=o,Te(n),n.portalItem=o,o}async solve(e,t){const r=(null==e?void 0:e.stops)??this.stops,o=(null==e?void 0:e.pointBarriers)??z(this.pointBarriers),s=(null==e?void 0:e.polylineBarriers)??z(this.polylineBarriers),n=(null==e?void 0:e.polygonBarriers)??z(this.polygonBarriers);if(null==r)throw new B("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((function Q(e){return"esri.rest.support.FeatureSet"===e.declaredClass}(r)||function Y(e){return"esri.rest.support.NetworkFeatureSet"===e.declaredClass}(r))&&r.features.length<2||se.isCollection(r)&&r.length<2)throw new B("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(se.isCollection(r))for(const B of r)B.routeName=null;const l=null==e?void 0:e.apiKey,h=this.url,w=await this._getServiceDescription(h,l,t),g=(null==e?void 0:e.travelMode)??w.defaultTravelMode,S=(null==e?void 0:e.accumulateAttributes)??[];null!=g&&(S.push(g.distanceAttributeName),g.timeAttributeName&&S.push(g.timeAttributeName));const b={accumulateAttributes:S,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:o,polylineBarriers:s,polygonBarriers:n,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!o,returnDirections:!0,returnPolygonBarriers:!!n,returnPolylineBarriers:!!s,returnRoutes:!0,returnStops:!0,stops:r},T=Et.from(e??{});let N;T.set(b);try{N=await l$1(h,T,t)}catch(A){throw Be(A)?A:new B("routelayer:failed-route-request","the routing request failed",{error:A})}const P=this._toRouteLayerSolution(N);return this._isOverridden("title")||(this.title=P.routeInfo.name??"Route"),function Z(e,t,r){var o,s,n,l,h,w;const g=null==(o=t.networkDataset)?void 0:o.networkAttributes,S=(null==g?void 0:g.filter((({usageType:e})=>"cost"===e)))??[],b=r.travelMode??t.defaultTravelMode;if(null==b)return void ue().warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:T,distanceAttributeName:N}=b,P=S.find((({name:e})=>e===T)),A=S.find((({name:e})=>e===N)),j=(null==(s=r.travelMode)?void 0:s.impedanceAttributeName)??r.impedanceAttribute??t.impedance,O=null==P?void 0:P.units,I=null==A?void 0:A.units;if(!O||!I)throw new B("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const D=r.directionsLanguage??t.directionsLanguage,M=r.accumulateAttributes??t.accumulateAttributeNames??[],_=new Set(S.filter((({name:e})=>e===T||e===N||e===j||null!=e&&M.includes(e))).map((({name:e})=>e))),w2=e=>{for(const t in e)_.has(t)||delete e[t]};for(const B of e.pointBarriers)null!=B.costs&&(B.addedCost=B.costs[j]??0,w2(B.costs));for(const B of e.polygonBarriers)null!=B.costs&&(B.scaleFactor=B.costs[j]??1,w2(B.costs));for(const B of e.polylineBarriers)null!=B.costs&&(B.scaleFactor=B.costs[j]??1,w2(B.costs));const{routeInfo:x}=e,{findBestSequence:F,preserveFirstStop:E,preserveLastStop:G,startTimeIsUTC:W,timeWindowsAreUTC:q}=r;x.analysisSettings=new et({accumulateAttributes:M,directionsLanguage:D,findBestSequence:F,preserveFirstStop:E,preserveLastStop:G,startTimeIsUTC:W,timeWindowsAreUTC:q,travelMode:b}),x.totalDuration=X((null==(n=x.totalCosts)?void 0:n[T])??0,O),x.totalDistance=ee((null==(l=x.totalCosts)?void 0:l[N])??0,I),x.totalLateDuration=X((null==(h=x.totalViolations)?void 0:h[T])??0,O),x.totalWaitDuration=X((null==(w=x.totalWait)?void 0:w[T])??0,O),null!=x.totalCosts&&w2(x.totalCosts),null!=x.totalViolations&&w2(x.totalViolations),null!=x.totalWait&&w2(x.totalWait);for(const B of e.stops)null!=B.serviceCosts&&(B.serviceDuration=X(B.serviceCosts[T]??0,O),B.serviceDistance=ee(B.serviceCosts[N]??0,I),w2(B.serviceCosts)),null!=B.cumulativeCosts&&(B.cumulativeDuration=X(B.cumulativeCosts[T]??0,O),B.cumulativeDistance=ee(B.cumulativeCosts[N]??0,I),w2(B.cumulativeCosts)),null!=B.violations&&(B.lateDuration=X(B.violations[T]??0,O),w2(B.violations)),null!=B.wait&&(B.waitDuration=X(B.wait[T]??0,O),w2(B.wait))}(P,w,T),P}update(e){const{stops:t,directionLines:r,directionPoints:o,pointBarriers:s,polylineBarriers:n,polygonBarriers:l,routeInfo:h}=e;this.set({stops:t,pointBarriers:s,polylineBarriers:n,polygonBarriers:l}),this._set("directionLines",r),this._set("directionPoints",o),this._set("routeInfo",h),null!=h.geometry&&(this.spatialReference=h.geometry.spatialReference)}_getNetworkFeatures(e,t,r,o){var s;const n=K(e)?e.layers:null==(s=e.featureCollection)?void 0:s.layers,l=null==n?void 0:n.find((e=>e.layerDefinition.name===t));if(null==l)return new se;const{layerDefinition:h,popupInfo:w,featureSet:g}=l,S=h.drawingInfo.renderer,{features:b}=g,T=g.spatialReference??h.spatialReference??h.extent.spatialReference??fe,B=S&&Ne(S),N=G.fromJSON(T),P=b.map((e=>{const o=_.fromJSON(e);null!=o.geometry&&null!=e.geometry&&null==e.geometry.spatialReference&&(o.geometry.spatialReference=N);const s=r(o);return s.symbol??(s.symbol=(null==B?void 0:B.getSymbol(o))??this._getNetworkSymbol(t)),s.popupTemplate??(s.popupTemplate=w&&Pe.fromJSON(w)),s}));return o&&P.some((({symbol:e})=>!e))&&o(P),new se(P)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const o=await d(e,t,r);return this._cachedServiceDescription={serviceDescription:o,url:e},o}_setStopSymbol(e){if(!e||0===e.length)return;if(null==this.defaultSymbols.stops)return;if(e.every((({symbol:e})=>null!=e)))return;const{first:t,last:r,middle:o,unlocated:s,waypoint:n,break:l}=this.defaultSymbols.stops;if(null==this.routeInfo||1===e.length)return void e.forEach(((s,n)=>{switch(n){case 0:s.symbol=t;break;case e.length-1:s.symbol=r;break;default:s.symbol=o}}));const h=e.map((({sequence:e})=>e)).filter((e=>null!=e)),w=Math.min(...h),g=Math.max(...h);for(const S of e)S.sequence!==w?S.sequence!==g?"ok"===S.status||"not-located-on-closest"===S.status?"waypoint"!==S.locationType?"break"!==S.locationType?S.symbol=o:S.symbol=l:S.symbol=n:S.symbol=s:S.symbol=r:S.symbol=t}_toRouteLayerSolution(e){var t,r,o,s,n,l,h;const w=null==(t=e.routeResults[0].stops)?void 0:t.map((e=>Qe.fromJSON(e.toJSON())));this._setStopSymbol(w);const g=new qt(w),S=new Wt(null==(r=e.polygonBarriers)?void 0:r.map((e=>{const t=Xe.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),b=new zt(null==(o=e.polylineBarriers)?void 0:o.map((e=>{const t=He.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),T=new $t(null==(s=e.pointBarriers)?void 0:s.map((e=>{const t=Ke.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),B=null==(n=e.routeResults[0].route)?void 0:n.toJSON(),N=Ye.fromJSON(B);N.symbol=this.defaultSymbols.routeInfo;const P=new Ut(null==(l=e.routeResults[0].directionPoints)?void 0:l.features.map((e=>{const t=Ve.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new Gt(null==(h=e.routeResults[0].directionLines)?void 0:h.features.map((e=>{const t=Ze.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:P,pointBarriers:T,polygonBarriers:S,polylineBarriers:b,routeInfo:N,stops:g}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",Ze.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",Ve.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,o,s,n){if(!(null==e?void 0:e.length))return null;const l=this.spatialReference.toJSON(),{fullExtent:h,maxScale:w,minScale:g}=this;return{featureSet:{features:e.toArray().map((e=>function te(e){const{attributes:t,geometry:r,popupTemplate:o,symbol:s}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:o,symbol:s}}(e))),geometryType:r,spatialReference:l},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=t?t.toJSON():H(r)}},extent:h.toJSON(),fields:o,geometryType:r,hasM:!1,hasZ:!1,maxScale:w,minScale:g,name:s,objectIdField:"ObjectID",spatialReference:l,title:n,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",Ke.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",Xe.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",He.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(null!=this.routeInfo?new se([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Ye.fields,"RouteInfo","Route Details")}_writeStops(){var e,t,r;const o=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",Qe.fields,"Stops","Stops");if(null==o)return null;const{stops:s}=this.defaultSymbols,n=null==(e=null==s?void 0:s.first)?void 0:e.toJSON(),l=null==(t=null==s?void 0:s.middle)?void 0:t.toJSON(),h=null==(r=null==s?void 0:s.last)?void 0:r.toJSON();return o.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:l,uniqueValueInfos:[{value:"1",symbol:n,label:"First Stop"},{value:`${this.stops.length}`,symbol:h,label:"Last Stop"}]},o}};e([t({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],Vt.prototype,"_featureCollection",void 0),e([T(["web-map","portal-item"],"_featureCollection")],Vt.prototype,"writeFeatureCollectionWebmap",null),e([t({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],Vt.prototype,"_type",void 0),e([t({nonNullable:!0,type:st})],Vt.prototype,"defaultSymbols",void 0),e([t({readOnly:!0})],Vt.prototype,"directionLines",void 0),e([b(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],Vt.prototype,"readDirectionLines",null),e([t({readOnly:!0})],Vt.prototype,"directionPoints",void 0),e([b(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],Vt.prototype,"readDirectionPoints",null),e([t({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],Vt.prototype,"featureCollectionType",void 0),e([t({readOnly:!0})],Vt.prototype,"fullExtent",null),e([t({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],Vt.prototype,"legendEnabled",void 0),e([t({type:["show","hide"]})],Vt.prototype,"listMode",void 0),e([t({type:Number,nonNullable:!0,json:{write:!1}})],Vt.prototype,"maxScale",void 0),e([b(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],Vt.prototype,"readMaxScale",null),e([t({type:Number,nonNullable:!0,json:{write:!1}})],Vt.prototype,"minScale",void 0),e([b(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],Vt.prototype,"readMinScale",null),e([t({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],Vt.prototype,"operationalLayerType",void 0),e([t({nonNullable:!0,type:se.ofType(Ke)})],Vt.prototype,"pointBarriers",void 0),e([b(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],Vt.prototype,"readPointBarriers",null),e([t({nonNullable:!0,type:se.ofType(Xe)})],Vt.prototype,"polygonBarriers",void 0),e([b(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],Vt.prototype,"readPolygonBarriers",null),e([t({nonNullable:!0,type:se.ofType(He)})],Vt.prototype,"polylineBarriers",void 0),e([b(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],Vt.prototype,"readPolylineBarriers",null),e([t({readOnly:!0})],Vt.prototype,"routeInfo",void 0),e([b(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],Vt.prototype,"readRouteInfo",null),e([t({type:G})],Vt.prototype,"spatialReference",void 0),e([b(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],Vt.prototype,"readSpatialReference",null),e([t({nonNullable:!0,type:se.ofType(Qe)})],Vt.prototype,"stops",void 0),e([b(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],Vt.prototype,"readStops",null),e([t()],Vt.prototype,"title",null),e([t({readOnly:!0,json:{read:!1}})],Vt.prototype,"type",void 0),e([t()],Vt.prototype,"url",null),Vt=e([o(Zt)],Vt);const Kt=Vt;export{Kt as default};
