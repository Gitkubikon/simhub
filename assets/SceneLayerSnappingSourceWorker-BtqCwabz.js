import{hM as t,e6 as s,dD as n,ip as o,iq as i,e as d,a as c,ir as a,dI as r,Q as u,b3 as h,f9 as p,dR as g,is as m,it as _,bO as l}from"./index-DSIPxOWi.js";function e(d,c,a){const r=o(),u=i(r);return t(u,u,d,.5),t(u,u,c,.5),r[3]=s(u,d),n(u,u,a),r}let f=class{constructor(){this._idToComponent=new Map,this._components=new a((t=>t.bounds)),this._edges=new a((t=>t.bounds)),this._tmpLineSegment=r(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,s){await Promise.resolve(),h(s),await this._ensureEdgeLocations(t,s);const n=[];return this._edges.forEachNeighbor((s=>(this._addCandidates(t,s,n),n.length<1e3)),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,s){const n=[];if(this._components.forEachNeighbor((t=>{if(null==t.info){const{id:s,uid:o}=t;n.push({id:s,uid:o})}return!0}),t.bounds),!n.length)return;const o={components:n},i=await this.remoteClient.invoke("fetchAllEdgeLocations",o,s??{});for(const d of i.components)this._setFetchEdgeLocations(d)}async add(t){const s=new j(t.id,t.bounds);return this._idToComponent.set(s.id,s),this._components.add([s]),{result:{}}}async remove(t){const s=this._idToComponent.get(t.id);if(s){const t=[];this._edges.forEachNeighbor((n=>(n.component===s&&t.push(n),!0)),s.bounds),this._edges.remove(t),this._components.remove([s]),this._idToComponent.delete(s.id)}return{result:{}}}_setFetchEdgeLocations(t){const s=this._idToComponent.get(t.id);if(null==s||t.uid!==s.uid)return;const n=p.createView(t.locations),o=new Array(n.count),i=u(),d=u();for(let r=0;r<n.count;r++){n.position0.getVec(r,i),n.position1.getVec(r,d);const c=e(i,d,t.origin),a=new w(s,r,c);o[r]=a}this._edges.add(o);const{objectIds:c,origin:a}=t;s.info={locations:n,objectIds:c,origin:a}}_addCandidates(t,s,o){const{info:i}=s.component,{origin:d,objectIds:c}=i,a=i.locations,r=a.position0.getVec(s.index,this._tmpP1),u=a.position1.getVec(s.index,this._tmpP2);n(r,r,d),n(u,u,d);const h=c[a.componentIndex.get(s.index)];this._addEdgeCandidate(t,h,r,u,o),b(t,h,r,o),b(t,h,u,o)}_addEdgeCandidate(t,n,o,d,c){if(!t.returnEdge)return;const a=i(t.bounds),r=g(o,d,this._tmpLineSegment),u=m(r,a,this._tmpP3);_(t.bounds,u)&&c.push({type:"edge",objectId:n,target:l(u),distance:s(a,u),start:l(o),end:l(d)})}};f=d([c("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);const C=f;function b(t,n,o,d){if(!t.returnVertex||!_(t.bounds,o))return;const c=i(t.bounds);d.push({type:"vertex",objectId:n,target:l(o),distance:s(c,o)})}class j{constructor(t,s){this.id=t,this.bounds=s,this.info=null,this.uid=++j.uid}}j.uid=0;class w{constructor(t,s,n){this.component=t,this.index=s,this.bounds=n}}export{C as default};
